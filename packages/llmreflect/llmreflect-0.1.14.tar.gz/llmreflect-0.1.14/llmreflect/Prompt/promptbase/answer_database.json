{"HARD": "\nGiven an input question, you should answer the question bycreating a syntactically correct {dialect} query to run.\n\nYou must query only the columns that are needed to answer the question.\n\nAll columns used for selecting or odering must not be null.\n\nWhen asking for patients, you must include uuid_patient, full names, phone number, email address.\n\nThe columns involved in selecting and ordering must be included too.\n\nYou should assume all values in the database are in lowercase.\n\nLimit the number of returning records by the number specified in the question.If the question is about a maximum or a minimum value,do not limit, otherwise limit the number of returning by {max_present}.\n\nWrap each column name in double quotes (\") to denote them as delimited identifiers. You should reply with a syntactically correct {dialect} query only.\n\nThe schema of the database is:\n{table_info}\n", "SOFT": "Pay attention to use only the column names you can see in the tables below. Be careful to not query for columns that do not exist. Also, pay attention to which column is in which table. Pay attention to use CURRENT_DATE function to get the current date, if the question involves \"today\".\nYou should add explicit type casts when needed, such as 'percentile_cont(0.25) WITHIN GROUP (ORDER BY price)::numeric'", "INCONTEXT": [{"request": "Get me a list of every patient who is on Aricept and whose primary clinic is in Ottawa. Filter out any patients with diabetes.", "answer": "\nselect distinct p.uuid_patient, p.first_name, p.last_name, p.phones, p.patient_email,\nm.name_en as English_name, m.name_fr as French_name\nfrom tb_patients p\njoin tb_patient_medications pm on p.uuid_patient = pm.patient_uuid\njoin tb_medications m on pm.medication_uuid = m.uuid\njoin tb_clinics c on p.primary_clinic = c.uuid\nleft join tb_medical_problems mp on p.uuid_patient = mp.patient_uuid\nwhere\n(m.name_en ILIKE 'aricept' or m.name_fr ILIKE 'aricept')\nand c.clinic_name ILIKE 'ottawa'\nand (mp.problem is null or mp.problem not ILIKE 'diabetes')\nlimit 500;\n"}, {"request": "give me a list of overweight patients who take donezepil", "answer": "\nSELECT DISTINCT \n    p.uuid_patient, \n    p.first_name, \n    p.last_name, \n    p.phones, \n    p.patient_email,\n    m.name_en, \n    m.name_fr,\n    t.treatment, \n    v.weight_kg, \n    v.height_cm,\n    v.weight_kg / ((v.height_cm / 100) * (v.height_cm / 100)) AS bmi\nFROM \n    tb_patients p\nJOIN \n    tb_patient_medications pm ON p.uuid_patient = pm.patient_uuid\nJOIN \n    tb_medications m ON pm.medication_uuid = m.uuid\nJOIN \n    tb_vitals v ON p.uuid_patient = v.patient_uuid\nJOIN \n    tb_treatments t ON p.uuid_patient = t.patient_uuid\nWHERE \n    (similarity(t.treatment, 'donezepil') > 0.3 \n    OR similarity(m.name_en, 'donezepil') > 0.3 \n    OR similarity(m.name_fr, 'donezepil') > 0.3)\n    AND v.weight_kg / ((v.height_cm / 100) * (v.height_cm / 100)) >= 25\n    AND v.weight_kg IS NOT NULL \n    AND v.height_cm IS NOT NULL \n    AND v.height_cm > 0\nLIMIT 500;\n"}], "FORMAT": {"request": {"type": "INPUT", "explanation": "user's request"}, "answer": {"type": "OUTPUT", "explanation": "the {dialect} query you created"}}}