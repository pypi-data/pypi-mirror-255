v6.8.3 8th February 2024
  - The use of 'throw' specifiers is now deprecated and will be removed in SIP
    v7.  Instead of 'throw()', 'noexcept' should be used.  Other forms of
    'throw' are no longer required.
  - Support for ABI v13.0 and ABI v12.8 and older is now deprecated and will be
    removed in SIP v7.
  - Documentation fixes.
  - Bug fixes.

v6.8.2 24th January 2024
  - Added the --deprecations-are-errors command line option to all build tools.
  - All generated files are UTF-8 encoded.

v6.8.1 12th December 2023
  - Bug fixes.

v6.8.0 7th November 2023
  - Python v3.7 is no longer supported.
  - The latest version of ABI v13 is v13.7.0.
  - The latest version of ABI v12 is v12.14.0.
  - Added support for specifying the project metadata using the '[project]'
    section of pyproject.toml as defined in PEP 621.  The use of the
    '[tool.sip.metadata]' is now deprecated.
  - The conversion to a pure Python implementation is now complete.

v6.7.12 10th October 2023
  - The latest version of ABI v13 is v13.6.0.
  - The latest version of ABI v12 is v12.13.0.
  - Added sipPyTypeDictRef() to the v12 and v13 ABIs.  sipPyTypeDict() is now
    deprecated and must not be used with Python v3.12 and later.
  - Classes will automatically support being iterated over if they implement
    '__getitem__()' or 'operator[]' and have a method annotated with '__len__'.
  - Bug fixes.

v6.7.11 31st July 2023
  - Bug fixes.

v6.7.10 17th July 2023
  - Added the --minimum-glibc-version command line option to sip-wheel.
  - The latest version of ABI v13 is v13.5.2.
  - The latest version of ABI v12 is v12.12.2.
  - Bug fixes.

v6.7.9 12th April 2023
  - The latest version of ABI v13 is v13.5.1.
  - The latest version of ABI v12 is v12.12.1.
  - Bug fixes.

v6.7.8 4th April 2023
  - The latest version of ABI v13 is v13.5.0.
  - The latest version of ABI v12 is v12.12.0.
  - The 'wheel-includes' value of the 'tool.sip.project' section of
    pyproject.toml now supports the use of absolute file patterns.
  - Replaced the use of the 'toml' package with the standard library 'tomllib'
    package for Python v3.11 and later, and the 'tomli' package for earlier
    versions of Python.
  - Bug fixes.

v6.7.7 4th February 2023
  - Bug fixes.

v6.7.6 25th January 2023
  - The latest version of ABI v13 is v13.4.1.
  - The latest version of ABI v12 is v12.11.1.
  - Significantly reduced the memory requirements.
  - Bug fixes.

v6.7.4 29th October 2022
  - Bug fixes.

v6.7.3 27th October 2022
  - Bug fixes.

v6.7.2 12th October 2022
  - Bug fixes.

v6.7.1 5th October 2022
  - Bug fixes.

v6.7.0 17th September 2022
  - Added the /NoAssignmentOperator/, /NoCopyCtor/ and /NoDefaultCtor/ mapped
    type annotations.
  - Added the --generator-version command line option to sip-distinfo.
  - Added the 'generator_version' argument to
    Project.get_sip_distinfo_command_line().
  - The resolver/transform stage has been replaced with a pure Python
    implementation.
  - Bug fixes.

v6.6.2 6th June 2022
  - Enums created with ABI v13 now handle unexpected values by creating
    corresponding pseudo-members.
  - Any config settings passed by a PEP 571 frontend are now used.
  - The 'array' type is now accessible from the sip module.
  - 'array' can now create one dimensional arrays of wrapped types that can be
    modified in situ.
  - Arguments using the /Array/ (and /ArraySize/) annotations will now accept
    'array' objects of the corresponding type.
  - The latest version of ABI v13 is v13.4.0.
  - The latest version of ABI v12 is v12.11.0.
  - Bug fixes.

v6.6.1 13th April 2022
  - The latest version of ABI v13 is v13.3.1.
  - The latest version of ABI v12 is v12.10.1.
  - Bug fixes.

v6.6.0 1st April 2022
  - Python v3.6 is no longer supported.
  - The .sip file parser (created using flex and bison) has been replaced with
    a pure Python implementation using PLY.
  - The latest version of ABI v13 is v13.3.0.
  - The latest version of ABI v12 is v12.10.0.
  - Bug fixes.

v6.5.1 25th January 2022
  - Added the --no-compile command line option to sip-build.
  - Added the --no-version-info command line option to sip-build.
  - The latest version of ABI v13 is v13.2.1.
  - The latest version of ABI v12 is v12.9.1.
  - Bug fixes.

v6.5.0 25th November 2021
  - Added 'UIntEnum' as a value of the /BaseType/ enum annotation to support
    enum.IntEnum types with unsigned values.
  - The latest version of ABI v13 is v13.2.0.
  - Bug fixes.

v6.4.0 24th October 2021
  - Added support for the 'py_ssize_t_clean' argument to the '%Module'
    directive.
  - Bug fixes.

v6.3.1 13th October 2021
  - Bug fixes.

v6.3.0 5th October 2021
  - SIP itself now uses the limited API itself.
  - Added the Project.get_platform_tag() method to the sipbuild API.

v6.2.0 28th September 2021
  - The interpreter tag in the name of a wheel now specifies a minimum Python
    version (rather than each supported Python version) when the limited API is
    used.
  - The /PyQtNoQMetaObject/ annotation can now be applied to namespaces.
  - sip-build, sip-install and sip-wheel now support the --disabled-feature
    command line option.
  - Added support for Python v3.10.
  - Added the setuptools builder which is the default for Python v3.10 and
    later.
  - The ABI version, wherever specified, is now a minimum version with a
    default minor version of 0.
  - Bug fixes.

v6.1.1 9th June 2021
  - The abi-version project option is interpreted as a minimum version rather
    than an exact version.
  - Bug fixes.

v6.1.0 5th May 2021
  - Added support for the noexcept specifier.  This has the same effect as a
    throw specifier that has no arguments.
  - throw specifiers in .sip files are now ignored when using ABI v13.1 or
    later and v12.9 or later.
  - Added the scripts-dir project option for specifying the directory where
    scripts are installed.  There is a corresponding --scripts-dir command line
    option to sip-build and sip-install.
  - The build tools (sip-build, sip-install, sip-sdist and sip-wheel) may now
    be invoked using the '-m' command line option of the Python interpreter.
  - The latest version of ABI v13 is v13.1.0.
  - The latest version of ABI v12 is v12.9.0.
  - If C++ exceptions are used then a C++11 compiler is required.
  - Bug fixes.

v6.0.3 2nd March 2021
  - The distutils builder now respects the minimum-macos-version option.
  - Bug fixes.

v6.0.2 23rd February 2021
  - Bug fixes.

v6.0.1 5th February 2021
  - The latest version of ABI v13 is v13.0.1.
  - Bug fixes.

v6.0.0 4th January 2021
  - All features deprecated in SIP v5 have been removed.
  - Added ABI v13.0 of the sip module.  This uses the Python enum module to
    implement all enums.
  - Added support for mapped type convertors to have additional user-defined
    state.  This is implemented using the %ReleaseCode directive, the SIP_USER
    flag and the sipConvertToTypeUS(), sipForceConvertToTypeUS() and
    sipReleaseTypeUS() API functions.  (ABI v13 only.)
  - %ConvertFromTypeCode and %ConvertToTypeCode are now optional for mapped
    types.
  - Added support for the SIP_PYENUM additional SIP type.
  - Added and sipIsEnumFlag()
  - Added the /BaseType/ enum annotation for specifying the exact Python enum
    type to be used.  (ABI v13 only.)
  - Added support for wrapping named unions.
  - Added support for Py_hash_t.  (ABI v13 only.)
  - Python names automatically have a '_' appended if they are Python keywords.
  - The lexer can now handle '\xNN' characters.
  - sip.pyi and py.typed are automatically installed if dunder-init is
    specified and pep484-pyi is specified for at least one module.
