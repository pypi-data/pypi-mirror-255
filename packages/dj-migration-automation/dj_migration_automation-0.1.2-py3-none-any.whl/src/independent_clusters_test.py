from independentclusters import *
import itertools

cwd = os.getcwd()
file_path = cwd + '/output_may_june.xlsx'
# file_path = cwd + '/test4.xlsx'

drug_canister_info_dict ={
'605053114##41026': {928, 346, 893}, '498840290##8829': {359}, '501110433##46241': {792, 362},
 '497810148##19964': {363}, '009047704##16995': {944, 1035, 365}, '651620755##51469': {366},
 '003780018##50631': {894, 373, 862}, '576640070##1645': {378}, '003787004##46225': {380}, '683820139##26169': {384},
 '683820140##26170': {912, 386}, '681800478##16577': {813, 391}, '005361047##2661': {392},
 '000542527##4001': {393, 890}, '231550104##40974': {398, 791}, '763850103##4589': {403}, '627560798##4540': {771, 406},
 '435980164##27961': {408}, '005271341##6648': {825, 414}, '005271343##6650': {1016, 809, 415},
 '658620560##27462': {419}, '435470276##29334': {804, 421}, '501110434##46242': {425, 786},
 '005364046##2532': {428, 1013, 782}, '658620202##23382': {433}, '591480011##51336': {908, 439},
 '683820116##21156': {440, 790}, '681800980##390': {451}, '136680037##21154': {458, 628},
 '136680040##21157': {898, 460}, '537460254##11674': {462}, '006033162##2366': {464, 777},
 '131070031##46450': {814, 471}, '000930787##15864': {795, 475}, '435980166##27960': {477}, '620370831##16599': {478},
 '009042272##2391': {482}, '000932210##2766': {483}, '003782302##292': {485}, '501110648##46214': {806, 486},
 '005914930##4575': {489}, '504580550##61985': {490}, '681800361##61200': {491}, '001151647##19597': {493},
 '651620541##4681': {494}, '504580141##70792': {495}, '683820650##24488': {496}, '003780053##11665': {497},
 '167290003##25181': {498}, '681800194##47324': {499}, '006035062##3833': {500}, '678770247##47198': {502},
 '458020650##18698': {504, 778, 1031}, '516724039##384': {986, 506}, '681800479##16578': {507, 773},
 '167290289##44210': {508}, '317220830##51336': {509}, '605052580##29969': {510}, '620370830##47586': {513, 897},
 '620370833##16601': {515}, '605053713##48920': {517}, '551110163##29077': {518}, '684620190##8362': {519},
 '678770222##21413': {521, 900}, '006030150##3009': {785, 522, 767}, '516724132##22550': {818, 524, 998},
 '008320302##3800': {528, 915}, '686820109##20617': {529}, '006032407##4680': {530}, '009041883##1340': {531, 646},
 '003782410##3852': {534}, '625590159##46209': {535}, '003780351##3972': {537}, '007811034##3854': {538},
 '317220828##51334': {539}, '003783857##50760': {542}, '681800352##46228': {545, 1034, 899},
 '001151691##3781': {546, 979}, '002282127##346': {548}, '003783856##50712': {549}, '681800113##44633': {550},
 '501110441##46243': {551}, '683820115##21155': {552, 798}, '681800981##391': {553, 895}, '681800513##393': {824, 555},
 '005915543##2535': {556, 807}, '763850104##4590': {770, 1037, 557}, '681800752##16927': {780, 558},
 '167290090##41440': {811, 559}, '005271346##6652': {560}, '167290183##8182': {562, 788}, '003786231##46206': {563},
 '005361064##3011': {769, 564}, '683820094##22233': {565}, '001725728##11677': {822, 566}, '621750270##41046': {567},
 '003780047##5131': {568}, '107020012##3729': {573}, '003786233##46204': {574}, '005361008##4380': {575},
 '007811396##3977': {889, 580}, '006035166##27611': {582}, '658620203##38686': {583}, '435470336##16040': {584},
 '681800353##46229': {827, 587}, '317220726##38451': {810, 588}, '519910294##27780': {589}, '001151659##5123': {591},
 '519910293##27779': {592}, '003786232##46203': {593}, '006034975##4929': {594, 799}, '683820141##26171': {596},
 '231550607##4888': {599}, '009047927##2947': {600, 910}, '000544297##8208': {602}, '000930752##5139': {603, 1015},
 '516724130##17872': {803, 604}, '681800517##392': {606}, '690970821##6416': {609, 815}, '693150906##3759': {618},
 '009045460##59178': {577, 622}, '690970159##29157': {623}, '006035061##3832': {627}, '009044043##61510': {630},
 '605050157##46237': {633}, '681800114##45652': {635, 934}, '003100283##62749': {636}, '551110532##4537': {639},
 '003100272##34189': {640}, '003100279##60293': {641}, '001850415##46238': {940, 647}, '000937385##46404': {649},
 '317220521##287': {650}, '009045307##11583': {833, 651}, '693150905##3758': {657}, '005363790##64176': {658},
 '003100284##62750': {659}, '007815318##19188': {661}, '006030026##16995': {774, 663}, '435470332##41805': {664},
 '003100274##47198': {668}, '001865040##47526': {669}, '005910347##29832': {672}, '683820097##46222': {674},
 '625590160##46210': {680}, '551110258##47567': {681}, '651620212##4521': {682}, '673860315##20647': {683},
 '293000114##22551': {936, 684}, '678770248##60293': {690, 789}, '658620697##46405': {691}, '605050146##43137': {693},
 '131070032##46452': {694}, '009045824##28465': {953, 775, 695}, '627560518##2538': {708}, '681800486##16367': {709},
 '605050084##46224': {712}, '001151660##5124': {715, 935}, '516724038##387': {716}, '634020304##66932': {717},
 '000934359##13648': {718}, '003781165##27378': {721}, '167290145##34187': {1002, 766}, '000937772##13649': {768},
 '678770246##34189': {793, 353}, '231550003##287': {832}, '007811453##1776': {834, 1028, 906},
 '605052578##29967': {888, 835}, '572370014##27546': {787, 837}, '005363424##58018': {861}, '651620253##11673': {863},
 '003780032##5132': {865}, '684620197##20741': {867, 909}, '002282128##347': {869}, '009045986##12016': {871},
 '683820080##3974': {872, 892}, '683820081##3976': {875}, '605053877##51246': {877}, '006032212##46043': {880},
 '690970126##16925': {917}, '692381489##8221': {919}, '605052656##8176': {920}, '007815710##22345': {921},
 '498840065##4887': {841, 922, 965}, '005271345##6651': {924}, '597460384##22650': {925}, '507420620##12059': {926},
 '605052579##29968': {929, 388}, '678770223##21414': {930, 783}, '007815569##4562': {933}, '681800464##16579': {937},
 '005740113##27508': {939}, '683820095##19293': {942}, '591480008##51333': {943}, '516724040##386': {946},
 '516724003##46061': {952}, '009040523##2151': {954}, '006035371##4544': {961}, '003785050##3690': {962},
 '000937364##23381': {966}, '000060277##61614': {967}, '683820093##28109': {968}, '605053140##41027': {776, 980, 352},
 '009045306##11582': {981}, '007818018##4560': {982, 887}, '007812823##46213': {983}, '003784415##3691': {984, 631},
 '003787001##46222': {988}, '634020312##69894': {989}, '005271350##6655': {990}, '693150117##8209': {991},
 '669930408##58487': {995}, '693150904##3757': {996}, '378640914##2337': {1017, 885}, '009047591##1645': {1020},
 '623320024##46215': {1021}, '658620595##46315': {1022, 1023}, '167290137##4561': {1024, 881},
 '005271344##15523': {1040, 722, 1036}, '605052552##41806': {516}, '519910292##44336': {610},
 '231550102##13318': {779, 396}, '605050065##33530': {505, 781}, '627560797##4539': {784, 945, 404},
 '516724131##17871': {370, 796}, '293000242##16926': {797, 870}, '763850105##4591': {801, 595},
 '009046434##19964': {812}, '516724005##4558': {1025, 586, 823}, '604290185##384': {829}, '007811516##1278': {844, 911},
 '690970158##29156': {874}, '651620321##33364': {879}, '005915335##4581': {882}, '681800465##40238': {884},
 '678770224##21415': {886}, '165710161##4582': {901}, '551110259##47568': {902}, '231550103##16441': {578, 955},
 '627560142##46754': {956}, '516724041##4559': {964}, '007815720##22346': {970}, '516724001##46059': {971},
 '651620627##23139': {972}, '683820098##46223': {977, 689, 997, 951}, '658620357##38164': {978},
 '131070003##46451': {987}, '167290096##62749': {1001}, '435470337##16041': {1033, 1026, 371, 903},
 '003780078##2537': {544, 1027, 975}, '681800512##17266': {816, 601, 1029}, '000934405##46416': {696, 1030},
 '620370832##16600': {985, 501, 1038}, '634020308##66933': {671, 692, 1039}, '007811393##3975': {368, 907},
 '006032109##16926': {423}, '578960531##2508': {427, 805}, '678770250##34188': {436, 821}, '007811975##46104': {484},
 '651620757##46315': {772, 503}, '103700678##12060': {523}, '605050141##1777': {525}, '690970811##41806': {536},
 '008320303##3797': {547}, '317220829##51335': {607}, '681800112##44632': {608}, '003786097##3824': {1032, 625},
 '002282077##3690': {632}, '006036240##4581': {638}, '005363313##4381': {643}, '006033339##11582': {653},
 '004563428##70870': {655}, '007811036##3852': {662}, '003781352##8176': {675}, '001850410##46239': {676},
 '681800115##47077': {677}, '591480009##51334': {697}, '167290146##60292': {699}, '000937314##38164': {794},
 '605053113##27960': {826}, '007815181##6649': {868}, '005363442##64732': {873}, '473350326##4518': {1019, 876},
 '006035063##3830': {878}, '103700101##53006': {883}, '003786074##3826': {913}, '510790487##3826': {931},
 '001724096##4679': {938}, '684620108##29837': {941}, '668700444##59701': {947}, '605050033##6573': {948},
 '003782405##3854': {963}, '003780216##8209': {969}, '619581003##60333': {992}, '006035168##27613': {993, 999},
 '002282076##3689': {1000}, '000548528##4003': {1014}, '458020919##17037': {1018}
}

print ("drug canister info keys legnth", len(drug_canister_info_dict.keys()))
print ("drug canister info valuse legnth", len(list(itertools.chain(*drug_canister_info_dict.values()))))
input("enter")

# """
# ###
# For Mechanical Team one month analysis
# ###
# """
# """
# Recommend canister to add
# """
# r = RecommendCanisterToAdd(file_path)
# manual_drug_list = r.get_manual_drug_ids(maximum_pack_count=5)
#
# print ("all drug list", r.column_element_list)
# print ("number", len(r.column_element_list))
# input("enter")
#
# all_drug_list = deepcopy(r.column_element_list)
#
# for drug_count in range(150,220):
#     if drug_count != 210 :
#         continue
#     # manual_drug_list = []
#     canister_added_drug_id_temp, canister_added_drug_id_tuple = r.get_recommendation_to_add_canisters(deepcopy(r.ordered_dict_to_recommend_canister), drug_count)
#     canister_added_drug_id = deepcopy(manual_drug_list + canister_added_drug_id_temp)
#     print (canister_added_drug_id_temp, "canister added drug id")
#     print ("length", len(canister_added_drug_id), drug_count)
#     input("enter")
#     """
#     Run algorithm example
#     """
#     c = IndependentClusterAnalysis(file_name=file_path, added_canister_drug_id_list=canister_added_drug_id, maximum_independence_factor=3)
#     result_of_algo, loss = c.run_algorithm()
#     packs_in_cluster = []
#     for cluster in result_of_algo:
#         print (cluster["packs"])
#         packs_in_cluster.append(len(cluster["packs"]))
#     print ("packs in cluster", packs_in_cluster)
#     input("enter")
#
#
# """
# Checking number of canisters needed in order
# """
# print ("canister added out", canister_added_drug_id_temp, len(canister_added_drug_id_temp))
# input("enter")
# drug_needed_canitsers_list = []
# for drug_id in canister_added_drug_id_temp:
#     if drug_id in drug_canister_info_dict.keys():
#         if len(drug_canister_info_dict[drug_id]) >= 2 :
#             continue
#         else:
#             drug_needed_canitsers_list.append((drug_id, 2-len(drug_canister_info_dict[drug_id])))
#     else:
#         drug_needed_canitsers_list.append((drug_id, 2))
#
#
# for drug_id in all_drug_list:
#     if drug_id in canister_added_drug_id:
#         continue
#     if drug_id in drug_canister_info_dict.keys():
#         continue
#     else:
#         drug_needed_canitsers_list.append((drug_id, 1))
#
# print ("drug needed canisters list", drug_needed_canitsers_list)
# input("enter")
#


"""
###
For Mechanical Team multiple month analysis
###
"""
"""
Recommend canister to add
"""
tolerance = 2
r = RecommendCanisterToAdd(file_path)
drug_list, drug_list_of_tuple = r.get_recommendation_to_add_canisters_truncated(min_percentage=20, max_percentage=55,
                                                                                division=5, tolerance=tolerance,
                                                                                manual_drug_list=r.get_manual_drug_ids(maximum_pack_count=5),
                                                                                debug_mode=False)

print ("drug_list", drug_list, len(drug_list))




# """
# ###
# Recommend canister to add
# ###
# """
# cwd = os.getcwd()
# # file_path = cwd + '/src_final/lot1.xlsx'
# file_path = cwd + '/src_final/datafrombackend_productin_lot3.xlsx'
# r = RecommendCanisterToAdd(file_path)
# # r.algo_preprocess(True)
# canister_added_drug_id, canister_added_drug_id_tuple = r.get_recommendation_to_add_canisters(r.ordered_dict_to_recommend_canister, 100)
# print (canister_added_drug_id, "canister added drug id")
# input("enter")
#
#
# """
# ###
# Run algorithm example
# ###
# """
# cwd = os.getcwd()
# # file_path = cwd + '/src_final/lot1.xlsx'
# file_path = cwd + '/src_final/datafrombackend_productin_lot3.xlsx'
# # file_path = cwd + '/src_final/dummy_data0.xlsx'
# # file_path = cwd + '/src_final/Copy0_of_lot1.xlsx'
# c = IndependentClusterAnalysis(file_name=file_path, added_canister_drug_id_list=canister_added_drug_id, maximum_independence_factor=3)
# print ("\n \n \n \n")
# print (c.run_algorithm())
#
# """
# How to use priority queue example.
# """
# # q = PriorityQueue()
# # q.push('a',-10)
# # q.push('b',-5)
# # print (q, "priority queue")
# # print (q.pop(),"first popped item")
#
#
# """
# Data fram experiments
# """
# cwd = os.getcwd()
# file_path = cwd + '/src_final/lot1.xlsx'
# # file_path = cwd + '/src_final/dummy_data0.xlsx'
# du = DataFrameUtil(file_path)
# # du.processes_on_df()
#
