Metadata-Version: 2.1
Name: arched-emailer
Version: 0.1.7
Summary: A emailing python library
Home-page: https://github.com/lewis-morris/arched_emailer
Author: lewis
Author-email: lewis@arched.dev
License: MIT
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown
Requires-Dist: requests ~=2.31.0
Requires-Dist: smtpymailer ~=0.1.0
Requires-Dist: appdirs ==1.4.4
Requires-Dist: setuptools ~=68.2.0
Requires-Dist: cryptography ~=42.0.1

# Arched Emailer

### A simple emailer for sending emails / error logs to a list of recipients.

## Change Log

- v0.1.4 (05/02/2024)
    - Changed requirements to match the latest version of `smtpymailer` which now uses data attributes to convert images
      to CID or base64, rather than the old method of using a method parameter which was rather clunky.
    - Added customer ID which will enable me to log requests server side per customer, and giving each customer their
      own unique API key
    - Changed the `send_email` method, so we can send emails not only from `Arched` but also from the customer's email
      address if needed. This will be useful for sending emails from the customer's email address, but using `Arched`'s
      SMTP server. 

- v0.1.5 (06/02/2024)
  - Make `_get_email_path` one function instead of two. 
  - Added a `_make_request` function that can be used for all db calls.
  - Changed the requirements for the class init. Most of the needed data is stored on the server now, with a fallback
    mechanism to fetch from file if the server is down.
  - Added a method to send errors/success logs to the backend. This will be useful for keeping track of errors. 
  - Created a decorator which can wrap functions around a try/except block, and send the error or success email and log
    to the backend.

- v0.1.6 (07/02/2024)
  - Changed the lookup api_key and customer_id method
  
- v0.1.7 (07/02/2024)
  - Quick fix to re-add the error text to the `send_error_email` function. I've realised that it would be useful to have
    in some cases.
