"""
Module: 'logging' on micropython-v1.22.1-samd-SEEED_WIO_TERMINAL
"""
# MCU: {'build': '', 'ver': '1.22.1', 'version': '1.22.1', 'port': 'samd', 'board': 'SEEED_WIO_TERMINAL', 'mpy': 'v6.2', 'family': 'micropython', 'cpu': 'SAMD51P19A', 'arch': 'armv7emsp'}
# Stubber: v1.16.3
from __future__ import annotations
from _typeshed import Incomplete

DEBUG: int = 10
ERROR: int = 40
CRITICAL: int = 50
_level: int = 20
NOTSET: int = 0
_level_dict: dict = {}
_loggers: dict = {}
INFO: int = 20
WARNING: int = 30

def info(*args, **kwargs) -> Incomplete: ...
def debug(*args, **kwargs) -> Incomplete: ...
def getLogger(*args, **kwargs) -> Incomplete: ...
def basicConfig(*args, **kwargs) -> Incomplete: ...

_stream: Incomplete  ## <class 'FileIO'> = <io.FileIO 2>

class Logger:
    level: int = 0
    def _level_str(self, *args, **kwargs) -> Incomplete: ...
    def setLevel(self, *args, **kwargs) -> Incomplete: ...
    def critical(self, *args, **kwargs) -> Incomplete: ...
    def isEnabledFor(self, *args, **kwargs) -> Incomplete: ...
    def debug(self, *args, **kwargs) -> Incomplete: ...
    def exception(self, *args, **kwargs) -> Incomplete: ...
    def log(self, *args, **kwargs) -> Incomplete: ...
    def warning(self, *args, **kwargs) -> Incomplete: ...
    def error(self, *args, **kwargs) -> Incomplete: ...
    def info(self, *args, **kwargs) -> Incomplete: ...
    def __init__(self, *argv, **kwargs) -> None: ...
