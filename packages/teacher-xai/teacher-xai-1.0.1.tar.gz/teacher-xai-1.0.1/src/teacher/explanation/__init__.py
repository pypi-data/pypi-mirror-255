"""
The :mod:`teacher.explanation` module includes the methods to generate
factual and counterfactual explanations, as well as the :class:`Explainer` classes

.. _article: https://doi.org/10.1109/TFUZZ.2022.3179582

Factual explanations
---------------------
Factual explanations are those that let us help to
explain the classification of an instance into a determined
category. In this case, a factual explanation is formed
by a rule or set of rules that are extracted from the
rule-based model that classifies the instance. The following
methods generate factual explanations as explained in this
article_:

:meth:`FID3_factual`
    Baseline factual that takes the single rule with
    the maximum matching from all the fired rules.

:meth:`m_factual`
    Factual associated with the mean, which adds rules to
    the factual until the cummulative association degree is
    higher than the average association degree.

:meth:`c_factual`:
    Factual associated with the quotient (and with minimum mass).
    This factual adds rules to the factual as long as they are
    sufficiently alike. If the minimum mass is established, the
    cummulative association degree must be higher than that.

:meth:`mr_factual`
    Minimum robust factual, which adds only the number of rules
    needed for the factual to be robust.

Counterfactual explanations
----------------------------
Counterfactual explanations are those that let us see which are the
minimum changes needed in an instance for it to change class. In this
case a counterfactual is formed by a set of tuples (attribute, value)
that would represent those changes. In a fuzzy case, guaranteeing the
minimum changes needed is a complex problem, so the counterfactuals
explained here are extracted from the set of rules generated by the model,
and the closest one is chosen according to the metrics defined in
this article_. The following methods generate counterfactual explanations:

:meth:`i_counterfactual`
    Counterfactual with respect to the instance

:meth:`f_counterfactual`
    Counterfactual with respect to the factual explanation

Explainer
---------

The *Explainer* are classes that follow the guidelines of scikit-learn modules
in that they can be fitted with data to generate an explanation. They use a
white-box model to wrap around an instance and a black-box in order to generate an explanation.
Currently, the white-box models supported are defined in :mod:`teacher.tree`.
In order to fit the white-box models, the *Explainer* uses a neighborhood
from those defined in :mod:`teacher.neighbors`

:class:`.FID3Explainer`
    Baseline explainer that uses an :class:`.ID3` tree.

:class:`.FDTExplainer`
    This explainer uses an :class:`.FDT` tree.

--------------------------
"""

# =============================================================================
# Imports
# =============================================================================

# Local application
from ._factual import FID3_factual, m_factual, mr_factual, c_factual
from ._counterfactual import FID3_counterfactual, i_counterfactual, f_counterfactual, d_counterfactual
from .FID3_explainer import FID3Explainer
from .FDT_explainer import FDTExplainer
from .FBDT_explainer import FBDTExplainer

# =============================================================================
# Public objects
# =============================================================================

# Set the classes that are accessible
# from the module teacher.explanation
__all__ = [
    "FID3_factual",
    "m_factual",
    "mr_factual",
    "c_factual",
    "FID3_counterfactual",
    "i_counterfactual",
    "f_counterfactual",
    "d_counterfactual",
    "FID3Explainer",
    "FDTExplainer",
    "FBDTExplainer"
]
