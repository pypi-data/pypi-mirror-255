# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/lmsg',
                'doc_host': 'https://dsm-72.github.io',
                'git_url': 'https://github.com/dsm-72/lmsg',
                'lib_path': 'lmsg'},
  'syms': { 'lmsg.base': { 'lmsg.base.Message': ('base.html#message', 'lmsg/base.py'),
                           'lmsg.base.Message.__bool__': ('base.html#message.__bool__', 'lmsg/base.py'),
                           'lmsg.base.Message.__call__': ('base.html#message.__call__', 'lmsg/base.py'),
                           'lmsg.base.Message.__del__': ('base.html#message.__del__', 'lmsg/base.py'),
                           'lmsg.base.Message.__enter__': ('base.html#message.__enter__', 'lmsg/base.py'),
                           'lmsg.base.Message.__exit__': ('base.html#message.__exit__', 'lmsg/base.py'),
                           'lmsg.base.Message.__init__': ('base.html#message.__init__', 'lmsg/base.py'),
                           'lmsg.base.Message.__log__': ('base.html#message.__log__', 'lmsg/base.py'),
                           'lmsg.base.Message.addkws': ('base.html#message.addkws', 'lmsg/base.py'),
                           'lmsg.base.Message.getext': ('base.html#message.getext', 'lmsg/base.py'),
                           'lmsg.base.Message.getfmt': ('base.html#message.getfmt', 'lmsg/base.py'),
                           'lmsg.base.Message.getlog': ('base.html#message.getlog', 'lmsg/base.py'),
                           'lmsg.base.Message.getlvl': ('base.html#message.getlvl', 'lmsg/base.py'),
                           'lmsg.base.Message.getmsg': ('base.html#message.getmsg', 'lmsg/base.py'),
                           'lmsg.base.Message.getout': ('base.html#message.getout', 'lmsg/base.py'),
                           'lmsg.base.Message.hasfmt': ('base.html#message.hasfmt', 'lmsg/base.py'),
                           'lmsg.base.Message.haslog': ('base.html#message.haslog', 'lmsg/base.py'),
                           'lmsg.base.Message.haslvl': ('base.html#message.haslvl', 'lmsg/base.py'),
                           'lmsg.base.Message.hasmsg': ('base.html#message.hasmsg', 'lmsg/base.py'),
                           'lmsg.base.Message.log': ('base.html#message.log', 'lmsg/base.py'),
                           'lmsg.base.Message.lvlmap': ('base.html#message.lvlmap', 'lmsg/base.py'),
                           'lmsg.base.Message.lvlstr': ('base.html#message.lvlstr', 'lmsg/base.py'),
                           'lmsg.base.Message.reglvl': ('base.html#message.reglvl', 'lmsg/base.py'),
                           'lmsg.base.Message.regsys': ('base.html#message.regsys', 'lmsg/base.py'),
                           'lmsg.base.Message.stream': ('base.html#message.stream', 'lmsg/base.py')},
            'lmsg.cons': {},
            'lmsg.hush': { 'lmsg.hush.HushedErrors': ('hush.html#hushederrors', 'lmsg/hush.py'),
                           'lmsg.hush.HushedErrors.__init__': ('hush.html#hushederrors.__init__', 'lmsg/hush.py'),
                           'lmsg.hush.HushedErrors.__str__': ('hush.html#hushederrors.__str__', 'lmsg/hush.py')},
            'lmsg.meta': { 'lmsg.meta.MessageMeta': ('meta.html#messagemeta', 'lmsg/meta.py'),
                           'lmsg.meta.MessageMeta.__call__': ('meta.html#messagemeta.__call__', 'lmsg/meta.py'),
                           'lmsg.meta.MessageMeta.__new__': ('meta.html#messagemeta.__new__', 'lmsg/meta.py'),
                           'lmsg.meta.MessageMeta.context': ('meta.html#messagemeta.context', 'lmsg/meta.py'),
                           'lmsg.meta.MessageMeta.decorate': ('meta.html#messagemeta.decorate', 'lmsg/meta.py'),
                           'lmsg.meta.MessageMeta.make': ('meta.html#messagemeta.make', 'lmsg/meta.py')},
            'lmsg.mixs': { 'lmsg.mixs.Aggregable': ('mixs.html#aggregable', 'lmsg/mixs.py'),
                           'lmsg.mixs.Aggregable.__init__': ('mixs.html#aggregable.__init__', 'lmsg/mixs.py'),
                           'lmsg.mixs.Aggregable.__str__': ('mixs.html#aggregable.__str__', 'lmsg/mixs.py'),
                           'lmsg.mixs.Aggregable.add': ('mixs.html#aggregable.add', 'lmsg/mixs.py'),
                           'lmsg.mixs.Aggregable.msgs': ('mixs.html#aggregable.msgs', 'lmsg/mixs.py'),
                           'lmsg.mixs.Hushable': ('mixs.html#hushable', 'lmsg/mixs.py'),
                           'lmsg.mixs.Hushable.__bool__': ('mixs.html#hushable.__bool__', 'lmsg/mixs.py'),
                           'lmsg.mixs.Hushable.__init__': ('mixs.html#hushable.__init__', 'lmsg/mixs.py'),
                           'lmsg.mixs.Hushable.__str__': ('mixs.html#hushable.__str__', 'lmsg/mixs.py'),
                           'lmsg.mixs.Hushable.cause': ('mixs.html#hushable.cause', 'lmsg/mixs.py')},
            'lmsg.type': {}}}
