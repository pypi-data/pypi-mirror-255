(undo-tree-save-format-version . 1)
"085f53a2af2b5cc4bf115c0213f94f4363b63640"
[nil nil nil nil (26044 30612 478011 626000) 0 nil]
([nil nil ((3411 . 3412) (t 26042 38723 600464 998000)) nil (26044 30612 478010 983000) 0 nil])
([nil nil ((3412 . 3430)) nil (26044 30612 478010 665000) 0 nil])
([nil nil ((#("def udevadm_info()" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 16 (face font-lock-function-name-face fontified t) 16 18 (fontified t)) . 3412)) nil (26044 30612 478010 530000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3411) (undo-tree-id26 . -1) 3412) nil (26044 30612 478010 256000) 0 nil])
([nil nil ((#("get" 0 3 (face font-lock-function-name-face fontified t)) . 3418)) nil (26044 30612 478009 702000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-function-name-face fontified t)) . -3417) (undo-tree-id25 . -1) 3418) nil (26044 30612 478009 457000) 0 nil])
([nil nil ((#("_device" 0 7 (face font-lock-function-name-face fontified t)) . 3417)) nil (26044 30612 478009 38000) 0 nil])
([nil nil ((3417 . 3424)) nil (26044 30612 478008 818000) 0 nil])
([nil nil ((#("def _run(command: str) -> str:
    \"\"\"Execute command and return its stdout output.\"\"\"
    # TODO(dhrosa): Debug logs of command executions.
    process = subprocess.run(shlex.split(command), capture_output=True, text=True)
    try:
        process.check_returncode()
    except subprocess.CalledProcessError:
        logger.error(f\"Command:\\n{command}\\nExited with status {process.returncode}\")
        if process.stdout:
            logger.error(f\"stdout:\\n{process.stdout}\")
        if process.stderr:
            logger.error(f\"stderr:\\n{process.stderr}\")
        raise
    return process.stdout


" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 8 (face font-lock-function-name-face fontified t) 8 18 (fontified t) 18 21 (face font-lock-builtin-face fontified t) 21 23 (fontified t) 23 24 (face font-lock-operator-face fontified t) 24 25 (face font-lock-operator-face fontified t) 25 26 (fontified t) 26 29 (face font-lock-builtin-face fontified t) 29 35 (fontified t) 35 37 (face font-lock-doc-face fontified t) 37 38 (face font-lock-doc-face fontified t syntax-table (15)) 38 83 (face font-lock-doc-face fontified t) 83 84 (face font-lock-doc-face fontified t syntax-table (15)) 84 86 (face font-lock-doc-face fontified t) 86 91 (fontified t) 91 93 (face font-lock-comment-delimiter-face fontified t) 93 141 (face font-lock-comment-face fontified t) 141 145 (fontified t) 145 152 (face font-lock-variable-name-face fontified t) 152 153 (fontified t) 153 154 (face font-lock-operator-face fontified t) 154 206 (fontified t) 206 207 (face font-lock-operator-face fontified t) 207 211 (face font-lock-constant-face fontified t) 211 217 (fontified t) 217 218 (face font-lock-operator-face fontified t) 218 222 (face font-lock-constant-face fontified t) 222 228 (fontified t) 228 231 (face font-lock-keyword-face fontified t) 231 272 (fontified t) 272 278 (face font-lock-keyword-face fontified t) 278 332 (fontified t) 332 341 (face font-lock-string-face fontified t) 341 343 (face font-lock-constant-face fontified t) 343 352 (face nil fontified t) 352 354 (face font-lock-constant-face fontified t) 354 373 (face font-lock-string-face fontified t) 373 393 (face nil fontified t) 393 394 (face font-lock-string-face fontified t) 394 404 (fontified t) 404 406 (face font-lock-keyword-face fontified t) 406 449 (fontified t) 449 457 (face font-lock-string-face fontified t) 457 459 (face font-lock-constant-face fontified t) 459 475 (face nil fontified t) 475 476 (face font-lock-string-face fontified t) 476 486 (fontified t) 486 488 (face font-lock-keyword-face fontified t) 488 531 (fontified t) 531 539 (face font-lock-string-face fontified t) 539 541 (face font-lock-constant-face fontified t) 541 557 (face nil fontified t) 557 558 (face font-lock-string-face fontified t) 558 568 (fontified t) 568 573 (face font-lock-keyword-face fontified t) 573 578 (fontified t) 578 584 (face font-lock-keyword-face fontified t) 584 602 (fontified t)) . 276) (undo-tree-id21 . -559) (undo-tree-id22 . -559) (undo-tree-id23 . -600) (undo-tree-id24 . -602) 878) nil (26044 30612 478008 544000) 0 nil])
([nil nil ((3251 . 3252)) nil (26044 30612 478006 782000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3853 . 3854) (nil fontified nil 3836 . 3854) (nil fontified nil 3830 . 3836) (nil fontified nil 3825 . 3830) (nil fontified nil 3820 . 3825) (nil fontified nil 3810 . 3820) (nil fontified nil 3809 . 3810) (nil fontified nil 3793 . 3809) (nil fontified nil 3791 . 3793) (nil fontified nil 3783 . 3791) (nil fontified nil 3740 . 3783) (nil fontified nil 3738 . 3740) (nil fontified nil 3728 . 3738) (nil fontified nil 3727 . 3728) (nil fontified nil 3711 . 3727) (nil fontified nil 3709 . 3711) (nil fontified nil 3701 . 3709) (nil fontified nil 3658 . 3701) (nil fontified nil 3656 . 3658) (nil fontified nil 3646 . 3656) (nil fontified nil 3645 . 3646) (nil fontified nil 3625 . 3645) (nil fontified nil 3606 . 3625) (nil fontified nil 3604 . 3606) (nil fontified nil 3595 . 3604) (nil fontified nil 3593 . 3595) (nil fontified nil 3584 . 3593) (nil fontified nil 3530 . 3584) (nil fontified nil 3524 . 3530) (nil fontified nil 3483 . 3524) (nil fontified nil 3480 . 3483) (nil fontified nil 3474 . 3480) (nil fontified nil 3470 . 3474) (nil fontified nil 3469 . 3470) (nil fontified nil 3463 . 3469) (nil fontified nil 3459 . 3463) (nil fontified nil 3458 . 3459) (nil fontified nil 3406 . 3458) (nil fontified nil 3405 . 3406) (nil fontified nil 3404 . 3405) (nil fontified nil 3397 . 3404) (nil fontified nil 3393 . 3397) (nil fontified nil 3345 . 3393) (nil fontified nil 3343 . 3345) (nil fontified nil 3338 . 3343) (nil fontified nil 3336 . 3338) (nil fontified nil 3335 . 3336) (nil fontified nil 3290 . 3335) (nil fontified nil 3289 . 3290) (nil fontified nil 3287 . 3289) (nil fontified nil 3281 . 3287) (nil fontified nil 3278 . 3281) (nil fontified nil 3277 . 3278) (nil fontified nil 3276 . 3277) (nil fontified nil 3275 . 3276) (nil fontified nil 3273 . 3275) (nil fontified nil 3270 . 3273) (nil fontified nil 3260 . 3270) (nil fontified nil 3256 . 3260) (nil fontified nil 3255 . 3256) (nil fontified nil 3252 . 3255) (3252 . 3854)) nil (26044 30612 478006 202000) 0 nil])
([nil nil ((#("get" 0 3 (fontified t)) . 2096)) nil (26044 30612 478004 372000) 0 nil])
([nil nil ((2096 . 2097)) nil (26044 30612 478004 234000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -2095) (undo-tree-id19 . -1) (#("=" 0 1 (face font-lock-operator-face fontified t)) . -2096) (undo-tree-id20 . -1) 2097) nil (26044 30612 478003 927000) 0 nil])
([nil nil ((#("_device" 0 7 (fontified t)) . 2095)) nil (26044 30612 478003 234000) 0 nil])
([nil nil ((2095 . 2102)) nil (26044 30612 478003 61000) 0 nil])
([nil nil ((#("get" 0 3 (fontified t)) . 2631) (undo-tree-id18 . -3)) nil (26044 30612 478002 858000) 0 nil])
([nil nil ((#("_device" 0 7 (fontified t)) . 2631) (undo-tree-id10 . -6) (undo-tree-id11 . -6) (undo-tree-id12 . -6) (undo-tree-id13 . -6) (undo-tree-id14 . -6) (undo-tree-id15 . -6) (undo-tree-id16 . -1) (undo-tree-id17 . -7)) nil (26044 30612 478002 436000) 0 nil])
([nil nil ((#("_info" 0 5 (fontified t)) . 2631) (undo-tree-id9 . -5)) nil (26044 30612 478000 931000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -2630) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) 2631) nil (26044 30612 478000 256000) 0 nil])
([nil nil ((2630 . 2642)) nil (26044 30612 477987 562000) 0 nil])
([nil nil ((#("

" 0 1 (fontified t) 1 2 (fontified t rear-nonsticky t)) . 3844) 2642) nil (26044 30612 477984 658000) 0 nil])
([nil nil ((3244 . 3245) 2642 (t 26044 30612 486033 832000)) nil (26044 38055 389966 737000) 0 nil])
([nil nil ((2576 . 2581) (t 26044 30613 526035 71000)) nil (26044 38055 389966 400000) 0 nil])
([nil nil ((2581 . 2602)) nil (26044 38055 389966 147000) 0 nil])
([nil nil ((2602 . 2604)) nil (26044 38055 390013 112000) 0 nil])
([nil nil ((2605 . 2613) (#("    " 0 4 (fontified t)) . 2605)) nil (26044 38088 845923 715000) 0 nil] [nil nil ((apply -12 2605 2821 undo--wrap-and-run-primitive-undo 2605 2821 ((2779 . 2781) (2735 . 2737) (2712 . 2714) (2685 . 2687) (2649 . 2651) (2609 . 2611) 2808))) ((apply 12 2605 2809 undo--wrap-and-run-primitive-undo 2605 2809 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . 2609) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . 2649) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . 2685) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . 2712) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . 2735) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . 2779) 2707))) (26044 38055 389963 332000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2609) (undo-tree-id59 . -4) 2613) nil (26044 38088 845923 310000) 0 nil])
nil
([nil nil ((2789 . 2793) (2743 . 2747) (2718 . 2722) (2689 . 2693) (2651 . 2655) (2609 . 2613) 2769) nil (26044 38088 845922 906000) 0 nil])
([nil nil ((2832 . 2845)) nil (26044 38088 845922 395000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -2841) (2845 . 2850)) nil (26044 38088 845922 163000) 0 nil])
([nil nil ((2846 . 2859)) nil (26044 38088 845921 853000) 0 nil])
([nil nil ((2859 . 2861)) nil (26044 38088 845921 592000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -2860) (undo-tree-id58 . -1) 2861) nil (26044 38088 845921 405000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2837) (undo-tree-id50 . -4) (undo-tree-id51 . -4) (undo-tree-id52 . -4) (undo-tree-id53 . -4) (undo-tree-id54 . -4) (undo-tree-id55 . -4) (undo-tree-id56 . -4) (undo-tree-id57 . -4) 2846) nil (26044 38088 845920 543000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2851) (undo-tree-id48 . -1) (undo-tree-id49 . -1) 2852) nil (26044 38088 845918 699000) 0 nil])
([nil nil ((2852 . 2862)) nil (26044 38088 845917 901000) 0 nil])
([nil nil ((2862 . 2883)) nil (26044 38088 845917 689000) 0 nil])
([nil nil ((2883 . 2891)) nil (26044 38088 845917 235000) 0 nil])
([nil nil ((#("    if not SERIAL_DIR.exists():
        logging.info(\"No serial devices found.\")
        return []
" 0 4 (fontified t) 4 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 10 (face font-lock-keyword-face fontified t) 10 53 (fontified t) 53 79 (face font-lock-string-face fontified t) 79 81 (fontified t) 81 89 (fontified t) 89 95 (face font-lock-keyword-face fontified t) 95 99 (fontified t)) . 2478) (undo-tree-id27 . -99) (undo-tree-id28 . -4) (undo-tree-id29 . -4) (undo-tree-id30 . -4) (undo-tree-id31 . -4) (undo-tree-id32 . -4) (undo-tree-id33 . -4) (undo-tree-id34 . -4) (undo-tree-id35 . -4) (undo-tree-id36 . -4) (undo-tree-id37 . -4) (undo-tree-id38 . -4) (undo-tree-id39 . -4) (undo-tree-id40 . -98) (undo-tree-id41 . -80) (undo-tree-id42 . -31) (undo-tree-id43 . -31) (undo-tree-id44 . -80) (undo-tree-id45 . -31) (undo-tree-id46 . -99) (undo-tree-id47 . -99) 2577) nil (26044 38088 845914 545000) 0 nil])
([nil nil ((#("def udevadm_info(path: Path) -> dict[str, str] | None:" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 11 (face font-lock-function-name-face fontified t) 11 16 (face font-lock-function-name-face fontified t) 16 29 (fontified t) 29 30 (face font-lock-operator-face fontified t) 30 31 (face font-lock-operator-face fontified t) 31 32 (fontified t) 32 36 (face font-lock-builtin-face fontified t) 36 37 (fontified t) 37 40 (face font-lock-builtin-face fontified t) 40 42 (fontified t) 42 45 (face font-lock-builtin-face fontified t) 45 47 (fontified t) 47 48 (face font-lock-operator-face fontified t) 48 49 (fontified t) 49 53 (face font-lock-constant-face fontified t) 53 54 (fontified t)) . 2815) (undo-tree-id67 . -11) (undo-tree-id68 . -19) (undo-tree-id69 . -19) (undo-tree-id70 . -19) (undo-tree-id71 . -19) (undo-tree-id72 . -19) (undo-tree-id73 . -19) (undo-tree-id74 . -17) (undo-tree-id75 . -12) (undo-tree-id76 . -4) (undo-tree-id77 . -54) (t 26044 38088 871728 897000)) nil (26044 38232 879111 446000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2868 . 2869) (nil fontified nil 2868 . 2869) (nil fontified nil 2864 . 2868) (nil fontified nil 2863 . 2864) (nil fontified nil 2862 . 2863) (nil fontified nil 2860 . 2862) (nil fontified nil 2857 . 2860) (nil fontified nil 2855 . 2857) (nil fontified nil 2852 . 2855) (nil fontified nil 2851 . 2852) (nil fontified nil 2847 . 2851) (nil fontified nil 2846 . 2847) (nil fontified nil 2845 . 2846) (nil fontified nil 2844 . 2845) (nil fontified nil 2831 . 2844) (nil fontified nil 2826 . 2831) (nil fontified nil 2819 . 2826) (nil fontified nil 2818 . 2819) (nil fontified nil 2815 . 2818) (2815 . 2869)) nil (26044 38232 879109 99000) 0 nil])
([nil nil ((2813 . 2814)) nil (26044 38232 879108 565000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2867 . 2868) (nil fontified nil 2867 . 2868) (nil fontified nil 2863 . 2867) (nil fontified nil 2862 . 2863) (nil fontified nil 2861 . 2862) (nil fontified nil 2859 . 2861) (nil fontified nil 2856 . 2859) (nil fontified nil 2854 . 2856) (nil fontified nil 2851 . 2854) (nil fontified nil 2850 . 2851) (nil fontified nil 2846 . 2850) (nil fontified nil 2845 . 2846) (nil fontified nil 2844 . 2845) (nil fontified nil 2843 . 2844) (nil fontified nil 2830 . 2843) (nil fontified nil 2825 . 2830) (nil fontified nil 2818 . 2825) (nil fontified nil 2817 . 2818) (nil fontified nil 2814 . 2817) (2814 . 2868)) nil (26044 38232 879108 283000) 0 nil])
([nil nil ((#("dict[str, str] | None:" 0 4 (face font-lock-builtin-face fontified t) 4 5 (fontified t) 5 8 (face font-lock-builtin-face fontified t) 8 10 (fontified t) 10 13 (face font-lock-builtin-face fontified t) 13 15 (fontified t) 15 16 (face font-lock-operator-face fontified t) 16 17 (fontified t) 17 21 (face font-lock-constant-face fontified t) 21 22 (rear-nonsticky t fontified t)) . 2846) (undo-tree-id62 . -22) (undo-tree-id63 . -17) (undo-tree-id64 . -10) (undo-tree-id65 . -5) (undo-tree-id66 . -22)) nil (26044 38232 879107 627000) 0 nil])
([nil nil ((2846 . 2850)) nil (26044 38232 879105 323000) 0 nil])
([nil nil ((2850 . 2855)) nil (26044 38232 879105 121000) 0 nil])
([nil nil ((2830 . 2838)) nil (26044 38232 879104 993000) 0 nil])
([nil nil ((2863 . 2864)) nil (26044 38232 879104 694000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -2863) (undo-tree-id60 . -1) (undo-tree-id61 . -1) 2864) nil (26044 38232 879104 77000) 0 nil])
([nil nil ((2863 . 2872)) nil (26044 38232 879093 108000) 0 nil])
([nil nil ((2814 . 2874) (#("def udevadm_info_command(path: Path) -> str:
    return \"\"" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 11 (face font-lock-function-name-face fontified t) 11 24 (face font-lock-function-name-face fontified t) 24 37 (fontified t) 37 38 (face font-lock-operator-face fontified t) 38 39 (face font-lock-operator-face fontified t) 39 40 (fontified t) 40 43 (face font-lock-builtin-face fontified t) 43 45 (fontified t) 45 49 (fontified t) 49 55 (face font-lock-keyword-face fontified t) 55 56 (fontified t) 56 58 (face font-lock-string-face fontified t)) . -2814) (undo-tree-id94 . -58) 2872 (t 26044 38232 907833 389000)) nil (26045 19157 804203 628000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -2871) (undo-tree-id92 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -2872) (undo-tree-id93 . -1) 2873 (t 26044 38233 891834 176000)) nil (26045 19157 804202 824000) 0 nil])
([nil nil ((2871 . 2892)) nil (26045 19157 804202 200000) 0 nil])
([nil nil ((2892 . 2897)) nil (26045 19157 804201 975000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-string-face fontified t)) . -2895) (undo-tree-id90 . -1) (#("y" 0 1 (face font-lock-string-face fontified t)) . -2896) (undo-tree-id91 . -1) 2897) nil (26045 19157 804201 500000) 0 nil])
([nil nil ((2895 . 2897)) nil (26045 19157 804200 890000) 0 nil])
([nil nil ((#("    return _run(\"udevadm info --quwer" 0 4 (fontified t) 4 10 (face font-lock-keyword-face fontified t) 10 16 (fontified t) 16 37 (face font-lock-string-face fontified t)) . 2860) (undo-tree-id85 . -36) (undo-tree-id86 . -4) (undo-tree-id87 . -4) (undo-tree-id88 . -37) (undo-tree-id89 . -37)) nil (26045 19157 804200 527000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2859) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) 2860) nil (26045 19157 804235 907000) 0 nil])
([nil nil ((#("    command = f\"udevadm info --query=property --name {path}\"" 0 4 (fontified t) 4 11 (face font-lock-variable-name-face fontified t) 11 12 (fontified t) 12 13 (face font-lock-operator-face fontified t) 13 15 (fontified t) 15 53 (face font-lock-string-face fontified t) 53 59 (face nil fontified t) 59 60 (face font-lock-string-face fontified t)) . 3044) (undo-tree-id102 . -4) (undo-tree-id103 . -4) (undo-tree-id104 . -38) (undo-tree-id105 . -60)) nil (26045 19219 107900 721000) 0 nil] [nil nil ((3044 . 3045)) ((#("
" 0 1 (fontified t)) . 3044) (undo-tree-id95 . -1)) (26045 19157 804187 66000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3103 . 3104) (nil fontified nil 3103 . 3104) (nil fontified nil 3097 . 3103) (nil fontified nil 3059 . 3097) (nil fontified nil 3057 . 3059) (nil fontified nil 3056 . 3057) (nil fontified nil 3055 . 3056) (nil fontified nil 3048 . 3055) (nil fontified nil 3044 . 3048) (3044 . 3104)) nil (26045 19219 107899 834000) 0 nil])
nil
([nil nil ((2859 . 2864)) nil (26045 19219 107899 386000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2923 . 2924) (nil fontified nil 2923 . 2924) (nil fontified nil 2917 . 2923) (nil fontified nil 2879 . 2917) (nil fontified nil 2877 . 2879) (nil fontified nil 2876 . 2877) (nil fontified nil 2875 . 2876) (nil fontified nil 2868 . 2875) (nil fontified nil 2864 . 2868) (2864 . 2924)) nil (26045 19219 107899 156000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2864) (undo-tree-id100 . -4) (undo-tree-id101 . -4) 2860) nil (26045 19219 107898 624000) 0 nil])
([nil nil ((#("command" 0 7 (face font-lock-variable-name-face fontified t)) . 2864) (undo-tree-id99 . -7)) nil (26045 19219 107897 932000) 0 nil])
([nil nil ((2864 . 2875)) nil (26045 19219 107897 513000) 0 nil])
([nil nil ((#(" = f" 0 1 (fontified t) 1 2 (face font-lock-operator-face fontified t) 2 4 (fontified t)) . 2875) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -4)) nil (26045 19219 107897 125000) 0 nil])
([nil nil ((2875 . 2876)) nil (26045 19219 107888 862000) 0 nil])
([nil nil ((2921 . 2922)) nil (26045 19220 527111 373000) 0 nil])
([nil nil ((#("    command = f\"udevadm info --query=property --name {path}\"" 0 4 (fontified t) 4 11 (face font-lock-variable-name-face fontified t) 11 12 (fontified t) 12 13 (face font-lock-operator-face fontified t) 13 15 (fontified t) 15 53 (face font-lock-string-face fontified t) 53 59 (face nil fontified t) 59 60 (face font-lock-string-face fontified t rear-nonsticky t)) . 3107) (undo-tree-id121 . -4) (undo-tree-id122 . -4) (undo-tree-id123 . -38) (undo-tree-id124 . -60) (t 26045 19219 108902 519000)) nil (26045 19236 377757 181000) 0 nil] [nil nil ((2923 . 2924) (t 26045 19219 108902 519000)) ((#("x" 0 1 (fontified t)) . 2923) (undo-tree-id106 . -1)) (26045 19220 526873 480000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3106) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) 3107) nil (26045 19236 377756 203000) 0 nil])
nil
([nil nil ((#("_run(command).splitlines():" 0 27 (fontified t)) . 3123) (undo-tree-id113 . -27)) nil (26045 19236 377754 737000) 0 nil])
([nil nil ((3123 . 3144)) nil (26045 19236 377754 187000) 0 nil])
([nil nil ((3144 . 3146)) nil (26045 19236 377753 933000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -3144) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (#("t" 0 1 (fontified t)) . -3145) (undo-tree-id111 . -1) (undo-tree-id112 . -1) 3146) nil (26045 19236 377753 305000) 0 nil])
([nil nil ((3144 . 3150)) nil (26045 19236 377740 825000) 0 nil])
([nil nil ((3149 . 3162) (t 26045 19236 380924 687000)) nil (26045 19284 942443 847000) 0 nil])
([nil nil ((3280 . 3289) (t 26045 19284 968987 45000)) nil (26045 20030 806313 845000) 0 nil])
([nil nil ((3289 . 3293)) nil (26045 20030 806313 647000) 0 nil])
([nil nil ((3293 . 3301)) nil (26045 20031 125480 612000) 0 nil])
([nil nil ((#("        logger.info(" 0 15 (fontified t) 15 20 (fontified t)) . 3281) (undo-tree-id197 . -8) (undo-tree-id198 . -8) (undo-tree-id199 . -9) (undo-tree-id200 . -10) (undo-tree-id201 . -11) (undo-tree-id202 . -12) (undo-tree-id203 . -13) (undo-tree-id204 . -14) (undo-tree-id205 . -15) (undo-tree-id206 . -16) (undo-tree-id207 . -17) (undo-tree-id208 . -18) (undo-tree-id209 . -19) (undo-tree-id210 . -20) (undo-tree-id211 . -8) (undo-tree-id212 . -8) (undo-tree-id213 . -8) (undo-tree-id214 . -8) (undo-tree-id215 . -8) (undo-tree-id216 . -8) (undo-tree-id217 . -8) (undo-tree-id218 . -8) (undo-tree-id219 . -8) (undo-tree-id220 . -8) (undo-tree-id221 . -8) (undo-tree-id222 . -8) (undo-tree-id223 . -8) (undo-tree-id224 . -8) (undo-tree-id225 . -8) (undo-tree-id226 . -8) (undo-tree-id227 . -8) (undo-tree-id228 . -8) (undo-tree-id229 . -20) (undo-tree-id230 . -20)) nil (26045 20041 615882 635000) 0 nil] [nil nil ((#("        logger.info(" 0 15 (fontified t) 15 20 (fontified t)) . 3281) (undo-tree-id143 . -8) (undo-tree-id144 . -8) (undo-tree-id145 . -9) (undo-tree-id146 . -10) (undo-tree-id147 . -11) (undo-tree-id148 . -12) (undo-tree-id149 . -13) (undo-tree-id150 . -14) (undo-tree-id151 . -15) (undo-tree-id152 . -16) (undo-tree-id153 . -17) (undo-tree-id154 . -18) (undo-tree-id155 . -19) (undo-tree-id156 . -20) (undo-tree-id157 . -20)) ((3281 . 3301)) (26045 20030 806351 228000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3280) (undo-tree-id158 . -1) (undo-tree-id159 . 1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) 3281) nil (26045 20041 615751 67000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3280) (undo-tree-id125 . -1) (undo-tree-id126 . 1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) 3281) ((3280 . 3281)) (26045 20030 806307 390000) 0 nil])
([nil nil ((#("DISK" 0 4 (face font-lock-variable-name-face fontified t)) . 239) (t 26045 20041 621958 159000)) nil (26045 20671 787385 578000) 0 nil])
nil
([nil nil ((239 . 247)) nil (26045 20671 787385 402000) 0 nil])
([nil nil ((245 . 246)) nil (26045 20671 787385 184000) 0 nil])
([nil nil ((199 . 200)) nil (26045 20671 787384 894000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -199) (undo-tree-id252 . -1) 200) nil (26045 20671 787384 733000) 0 nil])
([nil nil ((238 . 239)) nil (26045 20671 787384 328000) 0 nil])
([nil nil ((239 . 242)) nil (26045 20671 787384 206000) 0 nil])
([nil nil ((242 . 255)) nil (26045 20671 787384 83000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-doc-face fontified t)) . -253) (undo-tree-id250 . -1) (#("e" 0 1 (face font-lock-doc-face fontified t)) . -254) (undo-tree-id251 . -1) 255) nil (26045 20671 787383 881000) 0 nil])
([nil nil ((#("serial " 0 7 (face font-lock-doc-face fontified t)) . 246)) nil (26045 20671 787383 320000) 0 nil])
([nil nil ((246 . 267)) nil (26045 20671 787383 202000) 0 nil])
([nil nil ((267 . 274)) nil (26045 20671 787383 80000) 0 nil])
([nil nil ((274 . 275)) nil (26045 20671 787382 958000) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-doc-face fontified t)) . -270) (undo-tree-id249 . -1) 271) nil (26045 20671 787382 678000) 0 nil])
([nil nil ((270 . 277)) nil (26045 20671 787382 331000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-doc-face fontified t)) . -270) (undo-tree-id242 . -1) (#("(" 0 1 (face font-lock-doc-face fontified t)) . -271) (undo-tree-id243 . -1) (#("m" 0 1 (face font-lock-doc-face fontified t)) . -272) (undo-tree-id244 . -1) (#("i" 0 1 (face font-lock-doc-face fontified t)) . -273) (undo-tree-id245 . -1) (#("g" 0 1 (face font-lock-doc-face fontified t)) . -274) (undo-tree-id246 . -1) (#("h" 0 1 (face font-lock-doc-face fontified t)) . -275) (undo-tree-id247 . -1) (#("t" 0 1 (face font-lock-doc-face fontified t)) . -276) (undo-tree-id248 . -1) 277) nil (26045 20671 787381 932000) 0 nil])
([nil nil ((270 . 271)) nil (26045 20671 787380 511000) 0 nil])
([nil nil ((271 . 281)) nil (26045 20671 787380 377000) 0 nil])
([nil nil ((#("b" 0 1 (face font-lock-doc-face fontified t)) . -278) (undo-tree-id239 . -1) (#("e" 0 1 (face font-lock-doc-face fontified t)) . -279) (undo-tree-id240 . -1) (#(" " 0 1 (face font-lock-doc-face fontified t)) . -280) (undo-tree-id241 . -1) 281) nil (26045 20671 787380 53000) 0 nil])
([nil nil ((278 . 299)) nil (26045 20671 787377 856000) 0 nil])
([nil nil ((299 . 310)) nil (26045 20671 787377 738000) 0 nil])
([nil nil ((354 . 355)) nil (26045 20671 787377 616000) 0 nil])
([nil nil ((355 . 359)) nil (26045 20671 787377 477000) 0 nil])
([nil nil ((359 . 380)) nil (26045 20671 787377 325000) 0 nil])
([nil nil ((380 . 390)) nil (26045 20671 787377 203000) 0 nil])
([nil nil ((#("All" 0 3 (face font-lock-doc-face fontified t)) . 358)) nil (26045 20671 787377 63000) 0 nil])
([nil nil ((358 . 364)) nil (26045 20671 787376 933000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-doc-face fontified t)) . -363) (undo-tree-id238 . -1) 364) nil (26045 20671 787376 766000) 0 nil])
([nil nil ((363 . 370)) nil (26045 20671 787376 371000) 0 nil])
([nil nil ((#("All" 0 3 (face font-lock-doc-face fontified t)) . 242)) nil (26045 20671 787376 234000) 0 nil])
([nil nil ((#(" connected" 0 10 (face font-lock-doc-face fontified t)) . 242)) nil (26045 20671 787376 88000) 0 nil])
([nil nil ((242 . 254)) nil (26045 20671 787375 858000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-doc-face fontified t)) . -251) (undo-tree-id235 . -1) (#("a" 0 1 (face font-lock-doc-face fontified t)) . -252) (undo-tree-id236 . -1) (#("l" 0 1 (face font-lock-doc-face fontified t)) . -253) (undo-tree-id237 . -1) 254) nil (26045 20671 787375 603000) 0 nil])
([nil nil ((251 . 254)) nil (26045 20671 787374 556000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-doc-face fontified t)) . -379) (undo-tree-id234 . -1) 380) nil (26045 20671 787374 278000) 0 nil])
([nil nil ((379 . 387)) nil (26045 20671 787373 763000) 0 nil])
([nil nil ((271 . 281)) nil (26045 20671 787373 554000) 0 nil])
([nil nil ((#("M" 0 1 (face font-lock-doc-face fontified t)) . -281) (undo-tree-id232 . -1) (undo-tree-id233 . -1) 282) nil (26045 20671 787373 260000) 0 nil])
([nil nil ((281 . 282)) nil (26045 20671 787371 732000) 0 nil])
([nil nil ((#("DISK" 0 4 (fontified t)) . 2202) (undo-tree-id231 . -4)) nil (26045 20671 787371 299000) 0 nil])
([nil nil ((2202 . 2211)) nil (26045 20671 787361 478000) 0 nil])
([nil nil ((#("def udevadm_info_command(path: Path) -> str:
    return _run(\"udevadm info --query=property --name {path}\")


" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 24 (face font-lock-function-name-face fontified t) 24 37 (fontified t) 37 38 (face font-lock-operator-face fontified t) 38 39 (face font-lock-operator-face fontified t) 39 40 (fontified t) 40 43 (face font-lock-builtin-face fontified t) 43 45 (fontified t) 45 49 (fontified t) 49 55 (face font-lock-keyword-face fontified t) 55 61 (fontified t) 61 99 (face font-lock-string-face fontified t) 99 105 (face font-lock-string-face fontified t) 105 106 (face font-lock-string-face fontified t rear-nonsticky t) 106 107 (fontified t) 107 108 (fontified t) 108 109 (fontified t) 109 110 (fontified t)) . 2962) (undo-tree-id286 . -110) 3072 (t 26045 20671 790767 139000)) nil (26045 22360 491261 174000) 0 nil])
([nil nil ((3353 . 3355)) nil (26045 22360 491260 784000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3464 . 3465) (nil fontified nil 3464 . 3465) (nil fontified nil 3463 . 3464) (nil fontified nil 3462 . 3463) (nil fontified nil 3461 . 3462) (nil fontified nil 3460 . 3461) (nil fontified nil 3454 . 3460) (nil fontified nil 3416 . 3454) (nil fontified nil 3410 . 3416) (nil fontified nil 3404 . 3410) (nil fontified nil 3400 . 3404) (nil fontified nil 3398 . 3400) (nil fontified nil 3395 . 3398) (nil fontified nil 3394 . 3395) (nil fontified nil 3393 . 3394) (nil fontified nil 3392 . 3393) (nil fontified nil 3379 . 3392) (nil fontified nil 3359 . 3379) (nil fontified nil 3358 . 3359) (nil fontified nil 3355 . 3358) (3355 . 3465)) nil (26045 22360 491260 446000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3462) (undo-tree-id283 . -1) (#("
" 0 1 (fontified t)) . -3463) (undo-tree-id284 . -1) (#("
" 0 1 (rear-nonsticky t fontified t)) . -3464) (undo-tree-id285 . -1) 3465) nil (26045 22360 491259 633000) 0 nil])
([nil nil ((3399 . 3404)) nil (26045 22360 491258 728000) 0 nil])
([nil nil ((3404 . 3407)) nil (26045 22360 491258 480000) 0 nil])
([nil nil ((3407 . 3425)) nil (26045 22360 491258 295000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-doc-face fontified t)) . -3424) (undo-tree-id281 . -1) (undo-tree-id282 . -1) 3425) nil (26045 22360 491257 882000) 0 nil])
([nil nil ((3424 . 3428)) nil (26045 22360 491257 115000) 0 nil])
([nil nil ((#("omfg I love you steph" 0 21 (face font-lock-doc-face fontified t)) . 3407) (undo-tree-id253 . -1) (undo-tree-id254 . -2) (undo-tree-id255 . -3) (undo-tree-id256 . -4) (undo-tree-id257 . -5) (undo-tree-id258 . -6) (undo-tree-id259 . -7) (undo-tree-id260 . -8) (undo-tree-id261 . -9) (undo-tree-id262 . -10) (undo-tree-id263 . -11) (undo-tree-id264 . -12) (undo-tree-id265 . -13) (undo-tree-id266 . -14) (undo-tree-id267 . -15) (undo-tree-id268 . -16) (undo-tree-id269 . -17) (undo-tree-id270 . -17) (undo-tree-id271 . -17) (undo-tree-id272 . -18) (undo-tree-id273 . -19) (undo-tree-id274 . -20) (undo-tree-id275 . -21) (undo-tree-id276 . -16) (undo-tree-id277 . -12) (undo-tree-id278 . -7) (undo-tree-id279 . -5) (undo-tree-id280 . -21)) nil (26045 22360 491256 349000) 0 nil])
([nil nil ((3407 . 3410)) nil (26045 22360 491241 542000) 0 nil])
([nil nil ((3355 . 3356) (t 26045 22360 517709 827000)) nil (26045 22744 724153 369000) 0 nil])
([nil nil ((#("udevadm" 0 7 (face font-lock-function-name-face fontified t)) . 2966) (t 26045 22361 517752 150000)) nil (26045 22744 724153 189000) 0 nil])
([nil nil ((#("_info" 0 5 (face font-lock-function-name-face fontified t)) . 2966)) nil (26045 22744 724152 933000) 0 nil])
([nil nil ((2966 . 2982)) nil (26045 22744 724152 811000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-function-name-face fontified t)) . -2966) (undo-tree-id745 . -1) 2967) nil (26045 22744 724152 636000) 0 nil])
([nil nil ((#("_command" 0 8 (face font-lock-function-name-face fontified t)) . 3375)) nil (26045 22744 724152 293000) 0 nil])
([nil nil ((3403 . 3407)) nil (26045 22744 724152 97000) 0 nil])
([nil nil ((#("R" 0 1 (face font-lock-doc-face fontified t)) . -3403) (undo-tree-id741 . -1) (#("u" 0 1 (face font-lock-doc-face fontified t)) . -3404) (undo-tree-id742 . -1) (#("n" 0 1 (face font-lock-doc-face fontified t)) . -3405) (undo-tree-id743 . -1) (#("s" 0 1 (face font-lock-doc-face fontified t)) . -3406) (undo-tree-id744 . -1) 3407) nil (26045 22744 724151 646000) 0 nil])
([nil nil ((3403 . 3412)) nil (26045 22744 724150 804000) 0 nil])
([nil nil ((#("Executes \"\"\"" 0 9 (face font-lock-doc-face fontified t) 9 10 (face font-lock-doc-face syntax-table (15) fontified t) 10 12 (face font-lock-doc-face fontified t)) . 3403)) nil (26045 22744 724150 670000) 0 nil])
([nil nil ((3403 . 3404)) nil (26045 22744 724150 527000) 0 nil])
([nil nil ((#("R" 0 1 (face font-lock-doc-face fontified t)) . -3403) (undo-tree-id740 . -1) 3404) nil (26045 22744 724150 253000) 0 nil])
([nil nil ((3403 . 3408)) nil (26045 22744 724149 862000) 0 nil])
([nil nil ((#("E" 0 1 (face font-lock-doc-face fontified t)) . -3403) (undo-tree-id735 . -1) (#("x" 0 1 (face font-lock-doc-face fontified t)) . -3404) (undo-tree-id736 . -1) (#("c" 0 1 (face font-lock-doc-face fontified t)) . -3405) (undo-tree-id737 . -1) (#("v" 0 1 (face font-lock-doc-face fontified t)) . -3406) (undo-tree-id738 . -1) (#("u" 0 1 (face font-lock-doc-face fontified t)) . -3407) (undo-tree-id739 . -1) 3408) nil (26045 22744 724149 528000) 0 nil])
([nil nil ((3403 . 3405)) nil (26045 22744 724148 200000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-doc-face fontified t)) . -3404) (undo-tree-id734 . -1) 3405) nil (26045 22744 724148 28000) 0 nil])
([nil nil ((3404 . 3425)) nil (26045 22744 724147 689000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-doc-face fontified t)) . -3423) (undo-tree-id732 . -1) (#("o" 0 1 (face font-lock-doc-face fontified t)) . -3424) (undo-tree-id733 . -1) 3425) nil (26045 22744 724147 423000) 0 nil])
([nil nil ((3423 . 3441)) nil (26045 22744 724146 901000) 0 nil])
([nil nil ((3441 . 3462)) nil (26045 22744 724146 760000) 0 nil])
([nil nil ((3461 . 3465) (#("    " 0 4 (face font-lock-doc-face fontified nil)) . 3460) (undo-tree-id730 . -4) (undo-tree-id731 . -4) (3459 . 3465)) nil (26045 22744 724146 546000) 0 nil])
([nil nil ((3465 . 3471)) nil (26045 22744 724146 19000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-doc-face fontified t)) . -3468) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (#("p" 0 1 (face font-lock-doc-face fontified t)) . -3469) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (#("u" 0 1 (face font-lock-doc-face fontified t)) . -3470) (undo-tree-id728 . -1) (undo-tree-id729 . -1) 3471) nil (26045 22744 724145 746000) 0 nil])
([nil nil ((3468 . 3471)) nil (26045 22744 724139 131000) 0 nil])
([nil nil ((#("j" 0 1 (face font-lock-doc-face fontified t)) . -3467) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (#("t" 0 1 (face font-lock-doc-face fontified t)) . -3468) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (#("p" 0 1 (face font-lock-doc-face fontified t)) . -3469) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (#("u" 0 1 (face font-lock-doc-face fontified t)) . -3470) (undo-tree-id716 . -1) (undo-tree-id717 . -1) 3471) nil (26045 22744 724138 727000) 0 nil])
([nil nil ((3467 . 3485)) nil (26045 22744 724133 741000) 0 nil])
([nil nil ((#("list of \"\"\"" 0 8 (face font-lock-doc-face fontified t) 8 9 (face font-lock-doc-face syntax-table (15) fontified t) 9 11 (face font-lock-doc-face fontified t)) . 3477) (undo-tree-id633 . -11) (undo-tree-id634 . -11) (undo-tree-id635 . -11) (undo-tree-id636 . -11) (undo-tree-id637 . -11) (undo-tree-id638 . -11) (undo-tree-id639 . -11) (undo-tree-id640 . -11) (undo-tree-id641 . -11) (undo-tree-id642 . -11) (undo-tree-id643 . -11) (undo-tree-id644 . -11) (undo-tree-id645 . -11) (undo-tree-id646 . -11) (undo-tree-id647 . -11) (undo-tree-id648 . -11) (undo-tree-id649 . -11) (undo-tree-id650 . -11) (undo-tree-id651 . -11) (undo-tree-id652 . -11) (undo-tree-id653 . -11) (undo-tree-id654 . -11) (undo-tree-id655 . -11) (undo-tree-id656 . -11) (undo-tree-id657 . -11) (undo-tree-id658 . -11) (undo-tree-id659 . -11) (undo-tree-id660 . -11) (undo-tree-id661 . -11) (undo-tree-id662 . -11) (undo-tree-id663 . -11) (undo-tree-id664 . -11) (undo-tree-id665 . -11) (undo-tree-id666 . -11) (undo-tree-id667 . -11) (undo-tree-id668 . -11) (undo-tree-id669 . -1) (undo-tree-id670 . -11) (undo-tree-id671 . -11) (undo-tree-id672 . -2) (undo-tree-id673 . -11) (undo-tree-id674 . -11) (undo-tree-id675 . -3) (undo-tree-id676 . -11) (undo-tree-id677 . -11) (undo-tree-id678 . -4) (undo-tree-id679 . -11) (undo-tree-id680 . -11) (undo-tree-id681 . -5) (undo-tree-id682 . -11) (undo-tree-id683 . -11) (undo-tree-id684 . -6) (undo-tree-id685 . -11) (undo-tree-id686 . -11) (undo-tree-id687 . -7) (undo-tree-id688 . -11) (undo-tree-id689 . -11) (undo-tree-id690 . -8) (undo-tree-id691 . -5) (undo-tree-id692 . -11)) nil (26045 22744 724133 49000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-doc-face fontified t)) . -3472) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (#("s" 0 1 (face font-lock-doc-face fontified t)) . -3473) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (#(" " 0 1 (face font-lock-doc-face fontified t)) . -3474) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (#("a" 0 1 (face font-lock-doc-face fontified t)) . -3475) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (#(" " 0 1 (face font-lock-doc-face fontified t)) . -3476) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) 3477) nil (26045 22744 724120 503000) 0 nil])
([nil nil ((3472 . 3474)) nil (26045 22744 723973 761000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-doc-face fontified t)) . -3472) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (#("s" 0 1 (face font-lock-doc-face fontified t)) . -3473) (undo-tree-id301 . -1) (undo-tree-id302 . -1) 3474) nil (26045 22744 723973 522000) 0 nil])
([nil nil ((3472 . 3493)) nil (26045 22744 723972 198000) 0 nil])
([nil nil ((3493 . 3514)) nil (26045 22744 723972 67000) 0 nil])
([nil nil ((3514 . 3518)) nil (26045 22744 723971 912000) 0 nil])
([nil nil ((#("newline" 0 7 (face font-lock-doc-face fontified t)) . 3484) (undo-tree-id296 . -7)) nil (26045 22744 723971 651000) 0 nil])
([nil nil ((#("-separated" 0 10 (face font-lock-doc-face fontified t)) . 3484) (undo-tree-id291 . -8) (undo-tree-id292 . -9) (undo-tree-id293 . -10) (undo-tree-id294 . -1) (undo-tree-id295 . -10)) nil (26045 22744 723971 158000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-doc-face fontified t)) . -3484) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) 3485) nil (26045 22744 723968 552000) 0 nil])
([nil nil ((3500 . 3505)) nil (26045 22744 723961 179000) 0 nil])
([nil nil ((3505 . 3508)) nil (26045 22744 723958 613000) 0 nil])
([nil nil ((#("_command" 0 8 (fontified t)) . 3175) (undo-tree-id746 . -8) (t 26045 22744 730034 526000)) nil (26045 22764 385050 920000) 0 nil])
([nil nil ((#("udevadm" 0 7 (fontified t)) . 2242) (undo-tree-id760 . -7) (t 26045 22764 386871 13000)) nil (26045 22807 266545 482000) 0 nil])
([nil nil ((2242 . 2245)) nil (26045 22807 266544 907000) 0 nil])
([nil nil ((#("_info" 0 5 (fontified t)) . 2245)) nil (26045 22807 266544 762000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -2244) (undo-tree-id759 . -1) 2245) nil (26045 22807 266544 591000) 0 nil])
([nil nil ((2244 . 2245)) nil (26045 22807 266544 244000) 0 nil])
([nil nil ((2242 . 2257) (#("usb" 0 3 (fontified t)) . -2242) (undo-tree-id758 . -3) 2245) nil (26045 22807 266543 938000) 0 nil])
([nil nil ((#("udevadm" 0 7 (fontified t)) . 2717) (undo-tree-id752 . -7) (undo-tree-id753 . -7) (undo-tree-id754 . -7) (undo-tree-id755 . -7) (undo-tree-id756 . -7) (undo-tree-id757 . -7)) nil (26045 22807 266543 378000) 0 nil])
([nil nil ((#("_info" 0 5 (fontified t)) . 2717) (undo-tree-id751 . -5)) nil (26045 22807 266541 623000) 0 nil])
([nil nil ((2717 . 2720)) nil (26045 22807 266540 745000) 0 nil])
([nil nil ((2717 . 2732) (#("usb" 0 3 (fontified t)) . -2717) (undo-tree-id747 . -3) (undo-tree-id748 . -1) (undo-tree-id749 . -2) (undo-tree-id750 . -3) 2720) nil (26045 22807 266538 114000) 0 nil])
([nil nil ((#("info" 0 4 (fontified t)) . -1663) (t 26045 22807 296697 157000) (1667 . 1677) (t 26045 22807 296697 157000)) nil (26045 22857 79932 105000) 0 nil])
([nil nil ((#("info" 0 4 (fontified t)) . -1723) (1727 . 1737)) nil (26045 22857 79931 889000) 0 nil])
([nil nil ((#("info" 0 4 (fontified t)) . -1767) (1771 . 1781)) nil (26045 22857 79931 641000) 0 nil])
([nil nil ((#("info" 0 4 (fontified t)) . -1811) (1815 . 1825)) nil (26045 22857 79931 380000) 0 nil])
([nil nil ((nil fontified t 2265 . 2269) (nil face font-lock-variable-name-face 2265 . 2269) (#("info" 0 4 (face font-lock-variable-name-face fontified t)) . -2259) (2263 . 2273)) nil (26045 22857 79931 117000) 0 nil])
([nil nil ((#("info" 0 4 (fontified t)) . -2283) (2287 . 2297)) nil (26045 22857 79930 897000) 0 nil])
([nil nil ((#("info" 0 4 (fontified t)) . -2325) (2329 . 2339)) nil (26045 22857 79930 710000) 0 nil])
([nil nil ((#("info" 0 4 (fontified t)) . -2359) (2363 . 2373)) nil (26045 22857 79930 445000) 0 nil])
([nil nil ((#("info" 0 4 (fontified t)) . -2411) (2415 . 2425)) nil (26045 22857 79930 88000) 0 nil])
([nil nil ((#("info" 0 4 (fontified t)) . -2520) (2524 . 2534)) nil (26045 22857 79929 574000) 0 nil])
([nil nil ((nil fontified t 2776 . 2780) (nil face font-lock-variable-name-face 2776 . 2780) (#("info" 0 4 (face font-lock-variable-name-face fontified t)) . -2770) (2774 . 2784)) nil (26045 22857 79929 337000) 0 nil])
([nil nil ((#("info" 0 4 (fontified t)) . -2794) (2798 . 2808)) nil (26045 22857 79928 888000) 0 nil])
([nil nil ((#("info" 0 4 (fontified t)) . -2826) (2830 . 2840)) nil (26045 22857 79928 603000) 0 nil])
([nil nil ((#("info" 0 4 (fontified t)) . -2911) (2915 . 2925)) nil (26045 22857 79928 372000) 0 nil])
([nil nil ((#("info" 0 4 (face font-lock-function-name-face fontified t)) . -3067) (3071 . 3081)) nil (26045 22857 79928 63000) 0 nil])
([nil nil ((nil fontified t 3239 . 3243) (nil face font-lock-variable-name-face 3239 . 3243) (#("info" 0 4 (face font-lock-variable-name-face fontified t)) . -3233) (3237 . 3247)) nil (26045 22857 79927 813000) 0 nil])
([nil nil ((nil fontified t 3361 . 3365) (nil face font-lock-variable-name-face 3361 . 3365) (#("info" 0 4 (face font-lock-variable-name-face fontified t)) . -3355) (3359 . 3369)) nil (26045 22857 79927 400000) 0 nil])
([nil nil ((#("info" 0 4 (fontified t)) . -3386) (3390 . 3400)) nil (26045 22857 79926 857000) 0 nil])
([nil nil ((#("info" 0 4 (fontified t)) . -3458) (3462 . 3472)) nil (26045 22870 927492 932000) 0 nil])
([nil nil ((#("attributes" 0 10 (face font-lock-doc-face fontified t)) . 3143) (undo-tree-id762 . -10) (undo-tree-id763 . -10) (t 26045 22857 82816 75000)) nil (26045 22892 681199 644000) 0 nil] [nil nil ((160 . 161) (t 26045 22857 82816 75000)) ((#("M" 0 1 (fontified t)) . 160) (undo-tree-id761 . -1)) (26045 22870 927361 392000) 0 nil])
([nil nil ((3143 . 3153)) nil (26045 22892 681190 328000) 0 nil])
nil
([nil nil ((3614 . 3618) (#("    " 0 4 (face font-lock-doc-face fontified nil)) . 3613) (undo-tree-id826 . -4) (undo-tree-id827 . -4) (3612 . 3618) (t 26045 22892 684331 357000)) nil (26045 22954 202284 193000) 0 nil])
([nil nil ((3618 . 3620)) nil (26045 22954 202283 514000) 0 nil])
([nil nil ((#("S" 0 1 (face font-lock-doc-face fontified t)) . -3618) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (#("p" 0 1 (face font-lock-doc-face fontified t)) . -3619) (undo-tree-id824 . -1) (undo-tree-id825 . -1) 3620) nil (26045 22954 202283 280000) 0 nil])
([nil nil ((3618 . 3625)) nil (26045 22954 202281 864000) 0 nil])
([nil nil ((#("S" 0 1 (face font-lock-doc-face fontified t)) . -3618) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (#("E" 0 1 (face font-lock-doc-face fontified t)) . -3619) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (#("p" 0 1 (face font-lock-doc-face fontified t)) . -3620) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (#("a" 0 1 (face font-lock-doc-face fontified t)) . -3621) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (#("r" 0 1 (face font-lock-doc-face fontified t)) . -3622) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (#("a" 0 1 (face font-lock-doc-face fontified t)) . -3623) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (#("t" 0 1 (face font-lock-doc-face fontified t)) . -3624) (undo-tree-id818 . -1) (undo-tree-id819 . -1) 3625) nil (26045 22954 202280 942000) 0 nil])
([nil nil ((3618 . 3639)) nil (26045 22954 202256 389000) 0 nil])
([nil nil ((3639 . 3648)) nil (26045 22954 202256 10000) 0 nil])
([nil nil ((3648 . 3659)) nil (26045 22954 202253 426000) 0 nil])
([nil nil ((417 . 418) (t 26045 22954 226950 829000)) nil (26045 23122 622112 162000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -417) (undo-tree-id869 . -1) 418) nil (26045 23122 622111 927000) 0 nil])
([nil nil ((61 . 62)) nil (26045 23122 622111 590000) 0 nil])
([nil nil ((62 . 66)) nil (26045 23122 622111 388000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -65) (undo-tree-id867 . -1) (undo-tree-id868 . -1) 66) nil (26045 23122 622111 198000) 0 nil])
([nil nil ((65 . 71)) nil (26045 23122 622110 580000) 0 nil])
([nil nil ((71 . 92)) nil (26045 23122 622110 458000) 0 nil])
([nil nil ((92 . 95)) nil (26045 23122 622110 336000) 0 nil])
([nil nil ((451 . 461)) nil (26045 23122 622110 99000) 0 nil])
([nil nil ((#("@dataclass" 0 10 (face font-lock-type-face fontified t)) . 451) (undo-tree-id856 . -1) (undo-tree-id857 . -2) (undo-tree-id858 . -3) (undo-tree-id859 . -4) (undo-tree-id860 . -5) (undo-tree-id861 . -6) (undo-tree-id862 . -7) (undo-tree-id863 . -8) (undo-tree-id864 . -9) (undo-tree-id865 . -10) (undo-tree-id866 . -10)) nil (26045 23122 622109 546000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -450) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) 451) nil (26045 23122 622099 494000) 0 nil])
([nil nil ((62 . 450) (#("from dataclasses import dataclass
import logging
import shlex
import subprocess
from pathlib import Path

from .device import Device

logger = logging.getLogger(__name__)

SERIAL_DIR = Path(\"/dev/serial/by-id\")
\"\"\"Contains all serial devices. Directory might not exist if none are connected.\"\"\"

PARTITION_DIR = Path(\"/dev/disk/by-id\")
\"\"\"Contains all partition devices on the system.\"\"\"" 0 4 (face font-lock-keyword-face fontified t) 4 17 (fontified t) 17 23 (face font-lock-keyword-face fontified t) 23 33 (fontified t) 33 34 (fontified t) 34 40 (face font-lock-keyword-face fontified t) 40 49 (fontified t) 49 55 (face font-lock-keyword-face fontified t) 55 62 (fontified t) 62 68 (face font-lock-keyword-face fontified t) 68 80 (fontified t) 80 84 (face font-lock-keyword-face fontified t) 84 93 (fontified t) 93 99 (face font-lock-keyword-face fontified t) 99 106 (fontified t) 106 110 (face font-lock-keyword-face fontified t) 110 119 (fontified t) 119 125 (face font-lock-keyword-face fontified t) 125 133 (fontified t) 133 134 (fontified t) 134 140 (face font-lock-variable-name-face fontified t) 140 141 (fontified t) 141 142 (face font-lock-operator-face fontified t) 142 161 (fontified t) 161 169 (face font-lock-builtin-face fontified t) 169 171 (fontified t) 171 172 (fontified t) 172 182 (face font-lock-variable-name-face fontified t) 182 183 (fontified t) 183 184 (face font-lock-operator-face fontified t) 184 190 (fontified t) 190 209 (face font-lock-string-face fontified t) 209 211 (fontified t) 211 213 (face font-lock-doc-face fontified t) 213 214 (face font-lock-doc-face fontified t syntax-table (15)) 214 291 (face font-lock-doc-face fontified t) 291 292 (face font-lock-doc-face fontified t syntax-table (15)) 292 294 (face font-lock-doc-face fontified t) 294 295 (fontified t) 295 296 (fontified t) 296 305 (face font-lock-variable-name-face fontified t) 305 309 (face font-lock-variable-name-face fontified t) 309 310 (fontified t) 310 311 (face font-lock-operator-face fontified t) 311 317 (fontified t) 317 334 (face font-lock-string-face fontified t) 334 336 (fontified t) 336 338 (face font-lock-doc-face fontified t) 338 339 (face font-lock-doc-face fontified t syntax-table (15)) 339 384 (face font-lock-doc-face fontified t) 384 385 (face font-lock-doc-face fontified t syntax-table (15)) 385 387 (face font-lock-doc-face fontified t)) . 62) (undo-tree-id887 . -254) (undo-tree-id888 . -275) (undo-tree-id889 . -211) (undo-tree-id890 . -3) 450 (t 26045 23122 630118 919000)) nil (26045 23127 364199 27000) 0 nil])
([nil nil ((#("from dataclasses import dataclass" 0 4 (face font-lock-keyword-face fontified t) 4 17 (fontified t) 17 23 (face font-lock-keyword-face fontified t) 23 33 (fontified t)) . 108) (undo-tree-id880 . -33) (undo-tree-id881 . -33) (undo-tree-id882 . -33) (undo-tree-id883 . -33) (undo-tree-id884 . -33) (undo-tree-id885 . -33) (undo-tree-id886 . -33) (t 26045 23123 634161 657000)) nil (26045 23230 26965 283000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 107) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1)) ((107 . 108) (t 26045 23127 366320 515000)) (26045 23231 820490 976000) 0 nil])
([nil nil ((1599 . 1604) (t 26045 23127 366320 515000)) nil (26045 23763 6962 419000) 0 nil] [nil nil ((#("find" 0 4 (face font-lock-function-name-face fontified t)) . 1644) (undo-tree-id900 . -4) (undo-tree-id901 . -4) (t 26045 23127 366320 515000)) ((1644 . 1648)) (26045 23228 753247 706000) 0 nil])
([nil nil ((1604 . 1625)) nil (26045 23763 6962 235000) 0 nil])
([nil nil ((#("_or" 0 3 (face font-lock-function-name-face fontified t)) . 1644) (undo-tree-id899 . -3)) ((1644 . 1647)) (26045 23228 180104 247000) 0 nil])
([nil nil ((1625 . 1634)) nil (26045 23763 6962 112000) 0 nil])
([nil nil ((#("_add" 0 4 (face font-lock-function-name-face fontified t)) . 1644) (undo-tree-id898 . -4)) ((1644 . 1648)) (26045 23227 859899 840000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -1619) (undo-tree-id937 . -1) 1620) nil (26045 23763 6961 864000) 0 nil])
([nil nil ((1644 . 1645)) ((#("c" 0 1 (face font-lock-function-name-face fontified t)) . 1644) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1)) (26045 23227 515225 613000) 0 nil])
([nil nil ((1619 . 1625)) nil (26045 23763 6961 469000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-function-name-face fontified t)) . -1644) (undo-tree-id896 . -1) (undo-tree-id897 . -1) 1645) ((1644 . 1645)) (26045 23226 826071 267000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -1620) (undo-tree-id932 . -1) (#("u" 0 1 (fontified t)) . -1621) (undo-tree-id933 . -1) (#("p" 0 1 (fontified t)) . -1622) (undo-tree-id934 . -1) (#("l" 0 1 (fontified t)) . -1623) (undo-tree-id935 . -1) (#("e" 0 1 (fontified t)) . -1624) (undo-tree-id936 . -1) 1625) nil (26045 23763 6961 101000) 0 nil])
([nil nil ((#("_device" 0 6 (face font-lock-function-name-face fontified t) 6 7 (face font-lock-function-name-face fontified t)) . 1644) (undo-tree-id895 . -7)) ((1644 . 1651)) (26045 23225 917040 615000) 0 nil])
([nil nil ((1620 . 1621)) nil (26045 23763 6959 821000) 0 nil])
([nil nil ((1644 . 1659)) ((#("create_or_merge" 0 15 (face font-lock-function-name-face fontified t)) . 1644) (undo-tree-id902 . -15) (undo-tree-id903 . -15)) (26045 23225 717109 104000) 0 nil])
([nil nil ((1621 . 1622)) nil (26045 23763 6959 618000) 0 nil])
([nil nil ((1659 . 1666)) ((#("_device" 0 7 (face font-lock-function-name-face fontified t)) . 1659)) (26045 23225 581621 582000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -1621) (undo-tree-id931 . -1) 1622) nil (26045 23763 6959 425000) 0 nil])
([nil nil ((#("return device" 0 6 (face font-lock-keyword-face fontified t) 6 13 (fontified t)) . 2055) (undo-tree-id891 . -13) (undo-tree-id892 . -13) (undo-tree-id893 . -7) (undo-tree-id894 . -13)) ((2055 . 2068)) (26045 23225 581567 337000) 0 nil])
([nil nil ((1621 . 1624)) nil (26045 23763 6958 965000) 0 nil])
nil
([nil nil ((#("str, str, str)" 0 3 (fontified t) 3 5 (fontified t) 5 8 (face font-lock-builtin-face fontified t) 8 10 (fontified t) 10 13 (face font-lock-builtin-face fontified t) 13 14 (fontified t)) . 1624)) nil (26045 23763 6958 829000) 0 nil])
([nil nil ((1624 . 1626)) nil (26045 23763 6958 701000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -1625) (undo-tree-id930 . -1) 1626) nil (26045 23763 6958 566000) 0 nil])
([nil nil ((1625 . 1640)) nil (26045 23763 6958 179000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . -1639) (undo-tree-id929 . -1) 1640) nil (26045 23763 6957 964000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -1624) (undo-tree-id928 . -1) 1625) nil (26045 23763 6957 637000) 0 nil])
([nil nil ((1624 . 1625)) nil (26045 23763 6957 155000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -1638) (undo-tree-id927 . -1) 1639) nil (26045 23763 6957 1000) 0 nil])
([nil nil ((1638 . 1641)) nil (26045 23763 6956 613000) 0 nil])
([nil nil ((1641 . 1652)) nil (26045 23763 6956 495000) 0 nil])
([nil nil ((#("    devices: list[RealDevice] = []" 0 4 (fontified t) 4 7 (face font-lock-variable-name-face fontified t) 7 8 (face font-lock-variable-name-face fontified t) 8 11 (face font-lock-variable-name-face fontified t) 11 13 (fontified t) 13 17 (face font-lock-builtin-face fontified t) 17 30 (fontified t) 30 31 (face font-lock-operator-face fontified t) 31 34 (fontified t)) . 1653)) nil (26045 23763 6956 364000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1652) (undo-tree-id925 . -1) (undo-tree-id926 . -1) 1653) nil (26045 23763 6955 995000) 0 nil])
([nil nil ((1599 . 1604)) nil (26045 23763 6954 222000) 0 nil])
([nil nil ((1604 . 1605)) nil (26045 23763 6954 99000) 0 nil])
([nil nil ((#("$" 0 1 (fontified t)) . -1604) (undo-tree-id924 . -1) 1605) nil (26045 23763 6953 887000) 0 nil])
([nil nil ((1604 . 1625)) nil (26045 23763 6953 430000) 0 nil])
([nil nil ((1625 . 1636)) nil (26045 23763 6953 309000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-comment-face fontified t)) . -1635) (undo-tree-id923 . -1) 1636) nil (26045 23763 6953 158000) 0 nil])
([nil nil ((1635 . 1639)) nil (26045 23763 6952 844000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-comment-face fontified t)) . -1638) (undo-tree-id922 . -1) 1639) nil (26045 23763 6952 690000) 0 nil])
([nil nil ((1638 . 1643)) nil (26045 23763 6952 154000) 0 nil])
([nil nil ((1643 . 1659)) nil (26045 23763 6952 47000) 0 nil])
([nil nil ((1599 . 1604)) nil (26045 23763 6951 857000) 0 nil])
([nil nil ((#("RealDevice:" 0 11 (fontified t)) . 1777)) nil (26045 23763 6951 633000) 0 nil])
([nil nil ((1777 . 1798)) nil (26045 23763 6951 517000) 0 nil])
([nil nil ((1719 . 1723) (#("    " 0 4 (fontified nil)) . 1718) (undo-tree-id921 . -4) (1717 . 1723)) nil (26045 23763 6951 259000) 0 nil])
([nil nil ((1723 . 1740)) nil (26045 23763 6950 795000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -1739) (undo-tree-id920 . -1) 1740) nil (26045 23763 6950 545000) 0 nil])
([nil nil ((1739 . 1743)) nil (26045 23763 6950 60000) 0 nil])
([nil nil ((#("real_device)" 0 12 (fontified t)) . 1731)) nil (26045 23763 6949 871000) 0 nil])
([nil nil ((1731 . 1750)) nil (26045 23763 6949 689000) 0 nil])
([nil nil ((1750 . 1751)) nil (26045 23763 6949 486000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -1750) (undo-tree-id919 . -1) 1751) nil (26045 23763 6949 334000) 0 nil])
([nil nil ((1750 . 1771)) nil (26045 23763 6948 874000) 0 nil])
([nil nil ((1771 . 1775)) nil (26045 23763 6948 750000) 0 nil])
([nil nil ((1775 . 1784)) nil (26045 23763 6948 628000) 0 nil])
([nil nil ((1664 . 1669)) nil (26045 23763 6948 507000) 0 nil])
([nil nil ((132 . 133)) nil (26045 23763 6948 293000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -132) (undo-tree-id917 . -1) (undo-tree-id918 . -1) 133) nil (26045 23763 6948 27000) 0 nil])
([nil nil ((132 . 133)) nil (26045 23763 6947 513000) 0 nil])
([nil nil ((133 . 142)) nil (26045 23763 6947 290000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -140) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (#("[" 0 1 (fontified t)) . -141) (undo-tree-id915 . -1) (undo-tree-id916 . -1) 142) nil (26045 23763 6946 894000) 0 nil])
([nil nil ((140 . 161)) nil (26045 23763 6999 389000) 0 nil])
([nil nil ((1809 . 1818)) nil (26045 24084 292806 873000) 0 nil] [nil nil ((nil rear-nonsticky nil 172 . 173) (nil fontified nil 161 . 173) (161 . 173)) ((#("real_device)" 0 11 (fontified nil) 11 12 (rear-nonsticky nil fontified nil)) . 161) (undo-tree-id938 . -12) (undo-tree-id939 . -12) (undo-tree-id940 . -12) (nil rear-nonsticky t 172 . 173)) (26045 23763 6936 538000) 0 nil])
([nil nil ((1818 . 1822)) nil (26045 24084 292806 657000) 0 nil])
nil
([nil nil ((1695 . 1699) (#("    " 0 4 (fontified nil)) . 1694) (undo-tree-id973 . -4) (1698 . 1699)) nil (26045 24084 292806 421000) 0 nil])
([nil nil ((1699 . 1705)) nil (26045 24084 292806 54000) 0 nil])
([nil nil ((#("=" 0 1 (face font-lock-operator-face fontified t)) . -1703) (undo-tree-id971 . -1) (#(" " 0 1 (fontified t)) . -1704) (undo-tree-id972 . -1) 1705) nil (26045 24084 292805 889000) 0 nil])
([nil nil ((1703 . 1715)) nil (26045 24084 292805 319000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -1714) (undo-tree-id970 . -1) 1715) nil (26045 24084 292805 114000) 0 nil])
([nil nil ((#("TypeAlias" 0 9 (fontified t)) . 1705)) nil (26045 24084 292804 295000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1702) (undo-tree-id967 . -1) (#("=" 0 1 (face font-lock-operator-face fontified t)) . -1703) (undo-tree-id968 . -1) (#(" " 0 1 (fontified t)) . -1704) (undo-tree-id969 . -1) 1705) nil (26045 24084 292804 106000) 0 nil])
([nil nil ((1702 . 1716)) nil (26045 24084 292803 365000) 0 nil])
([nil nil ((1716 . 1721)) nil (26045 24084 292803 184000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -1717) (undo-tree-id963 . -1) (#("p" 0 1 (fontified t)) . -1718) (undo-tree-id964 . -1) (#("e" 0 1 (face font-lock-builtin-face fontified t)) . -1719) (undo-tree-id965 . -1) (#("p" 0 1 (fontified t)) . -1720) (undo-tree-id966 . -1) 1721) nil (26045 24084 292802 838000) 0 nil])
([nil nil ((1717 . 1736)) nil (26045 24084 292801 861000) 0 nil])
([nil nil ((1736 . 1741)) nil (26045 24084 292801 619000) 0 nil])
([nil nil ((1804 . 1808)) nil (26045 24084 292801 454000) 0 nil])
([nil nil ((#("tuple" 0 5 (face font-lock-builtin-face fontified t)) . 1761)) nil (26045 24084 292801 274000) 0 nil])
([nil nil ((#("[str" 0 1 (fontified t) 1 4 (face font-lock-builtin-face fontified t)) . 1761)) nil (26045 24084 292801 75000) 0 nil])
([nil nil ((#(", str" 0 2 (fontified t) 2 5 (face font-lock-builtin-face fontified t)) . 1761)) nil (26045 24084 292800 874000) 0 nil])
([nil nil ((#(", str" 0 2 (fontified t) 2 5 (face font-lock-builtin-face fontified t)) . 1761)) nil (26045 24084 292800 682000) 0 nil])
([nil nil ((1761 . 1763)) nil (26045 24084 292800 479000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . -1763) (undo-tree-id962 . -1) 1764) nil (26045 24084 292800 242000) 0 nil])
([nil nil ((1763 . 1764)) nil (26045 24084 292799 843000) 0 nil])
([nil nil ((#("tuple[str, str, str]:" 0 5 (face font-lock-builtin-face fontified t) 5 6 (fontified t) 6 9 (face font-lock-builtin-face fontified t) 9 11 (fontified t) 11 14 (face font-lock-builtin-face fontified t) 14 16 (fontified t) 16 19 (face font-lock-builtin-face fontified t) 19 21 (fontified t)) . 1818)) nil (26045 24084 292799 422000) 0 nil])
([nil nil ((1818 . 1822)) nil (26045 24084 292799 139000) 0 nil])
([nil nil ((#("pass" 0 4 (face font-lock-keyword-face fontified t)) . 1831)) nil (26045 24084 292798 906000) 0 nil])
([nil nil ((1831 . 1838)) nil (26045 24084 292798 710000) 0 nil])
([nil nil ((1838 . 1839)) nil (26045 24084 292798 406000) 0 nil])
([nil nil ((#("device" 0 6 (fontified t)) . 1795)) nil (26045 24084 292798 187000) 0 nil])
([nil nil ((1795 . 1796)) nil (26045 24084 292797 986000) 0 nil])
([nil nil ((1834 . 1855)) nil (26045 24084 292797 752000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1853) (undo-tree-id960 . -1) (#("." 0 1 (fontified t)) . -1854) (undo-tree-id961 . -1) 1855) nil (26045 24084 292797 462000) 0 nil])
([nil nil ((1853 . 1862)) nil (26045 24084 292796 845000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1867) (undo-tree-id959 . -4) 1871) nil (26045 24084 292796 712000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1863) (undo-tree-id958 . -4) 1867) nil (26045 24084 292796 271000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1862) (undo-tree-id957 . -1) 1863) nil (26045 24084 292795 894000) 0 nil])
([nil nil ((#("get" 0 3 (face font-lock-function-name-face fontified t)) . 1787)) nil (26045 24084 292795 332000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-function-name-face fontified t)) . -1787) (undo-tree-id956 . -1) 1788) nil (26045 24084 292795 115000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -1938) (undo-tree-id955 . -1) 1939) nil (26045 24084 292794 647000) 0 nil])
([nil nil ((1938 . 1939)) nil (26045 24084 292794 284000) 0 nil])
([nil nil ((#("tuple[str, str, str] " 0 5 (face font-lock-builtin-face fontified t) 5 6 (fontified t) 6 9 (face font-lock-builtin-face fontified t) 9 11 (fontified t) 11 14 (face font-lock-builtin-face fontified t) 14 16 (fontified t) 16 19 (face font-lock-builtin-face fontified t) 19 21 (fontified t)) . 1918)) nil (26045 24084 292793 734000) 0 nil])
([nil nil ((1918 . 1929)) nil (26045 24084 292793 552000) 0 nil])
([nil nil ((#("        device.partition_path = path.resolve()" 0 15 (fontified t) 15 29 (face font-lock-variable-name-face fontified t) 29 30 (fontified t) 30 31 (face font-lock-operator-face fontified t) 31 46 (fontified t)) . 2756)) nil (26045 24084 292793 231000) 0 nil])
([nil nil ((2756 . 2764)) nil (26045 24084 292792 736000) 0 nil])
([nil nil ((2764 . 2785)) nil (26045 24084 292792 374000) 0 nil])
([nil nil ((2785 . 2794)) nil (26045 24084 292791 978000) 0 nil])
([nil nil ((2794 . 2805)) nil (26045 24084 292791 770000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -2804) (undo-tree-id954 . -1) 2805) nil (26045 24084 292791 459000) 0 nil])
([nil nil ((2804 . 2823)) nil (26045 24084 292791 72000) 0 nil])
([nil nil ((2787 . 2792)) nil (26045 24084 292790 878000) 0 nil])
([nil nil ((#("replcdevice.partition_path = path.resolve" 0 27 (fontified t) 27 28 (face font-lock-operator-face fontified t) 28 41 (fontified t)) . 2787) (undo-tree-id951 . -5) (undo-tree-id952 . -5) (undo-tree-id953 . -5)) nil (26045 24084 292790 588000) 0 nil])
([nil nil ((2787 . 2808)) nil (26045 24084 292789 807000) 0 nil])
([nil nil ((2808 . 2814)) nil (26045 24084 292789 608000) 0 nil])
([nil nil ((2814 . 2823)) nil (26045 24084 292789 423000) 0 nil])
([nil nil ((162 . 163)) nil (26045 24084 292789 49000) 0 nil])
([nil nil ((163 . 184)) nil (26045 24084 292788 833000) 0 nil])
([nil nil ((184 . 185)) nil (26045 24084 292788 411000) 0 nil])
([nil nil ((185 . 194)) nil (26045 24084 292788 211000) 0 nil])
([nil nil ((3199 . 3212)) nil (26045 24084 292787 995000) 0 nil])
([nil nil ((3212 . 3233)) nil (26045 24084 292787 359000) 0 nil])
([nil nil ((3233 . 3242)) nil (26045 24084 292787 159000) 0 nil])
([nil nil ((3242 . 3263)) nil (26045 24084 292787 45000) 0 nil])
([nil nil ((3263 . 3264)) nil (26045 24084 292786 857000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -3263) (undo-tree-id950 . -1) 3264) nil (26045 24084 292786 608000) 0 nil])
([nil nil ((3263 . 3268)) nil (26045 24084 292786 194000) 0 nil])
([nil nil ((#("            device.serial_path = path.resolve()" 0 4 (fontified t) 4 8 (fontified t) 8 12 (fontified t) 12 19 (fontified t) 19 30 (face font-lock-variable-name-face fontified t) 30 31 (fontified t) 31 32 (face font-lock-operator-face fontified t) 32 47 (fontified t)) . 3269)) nil (26045 24084 292786 57000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3268) (undo-tree-id949 . -1) 3269) nil (26045 24084 292785 839000) 0 nil])
([nil nil ((3340 . 3345)) nil (26045 24084 292784 739000) 0 nil])
([nil nil ((#("devices" 0 3 (fontified t) 3 7 (fontified t)) . 3345) (undo-tree-id941 . -7) (undo-tree-id942 . -7) (undo-tree-id943 . -7) (undo-tree-id944 . -7) (undo-tree-id945 . -7) (undo-tree-id946 . -7) (undo-tree-id947 . -7) (undo-tree-id948 . -7)) nil (26045 24084 292784 423000) 0 nil])
([nil nil ((3345 . 3362)) nil (26045 24084 292776 315000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 1765) (#("    " 0 4 (fontified t)) . 1661) 3362) nil (26045 24084 292773 21000) 0 nil])
([nil nil ((113 . 194) (#("pathlib import Path
from typing import TypeAlias

from dataclasses import replace" 0 8 (fontified t) 8 14 (face font-lock-keyword-face fontified t) 14 20 (fontified t) 20 24 (face font-lock-keyword-face fontified t) 24 32 (fontified t) 32 38 (face font-lock-keyword-face fontified t) 38 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t) 50 54 (face font-lock-keyword-face fontified t) 54 67 (fontified t) 67 73 (face font-lock-keyword-face fontified t) 73 81 (fontified t)) . 113) (undo-tree-id976 . -48) 3362 (t 26045 24084 295848 610000)) nil (26045 24100 201944 142000) 0 nil])
([nil nil ((#("=" 0 1 (face font-lock-operator-face fontified t)) . -1778) (undo-tree-id974 . -1) (undo-tree-id975 . -1) 1779 (t 26045 24085 179848 156000)) nil (26045 24100 201942 995000) 0 nil])
([nil nil ((1778 . 1779)) nil (26045 24100 201936 364000) 0 nil])
([nil nil ((1801 . 1806)) nil (26045 24100 201933 373000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1777) (undo-tree-id985 . -1) 1806 (t 26045 24100 199844 776000)) nil (26045 24104 269998 324000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1764) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) 1765 (t 26045 24101 271844 842000)) nil (26045 24104 269997 374000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . -1721) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) 1722) nil (26045 24104 269993 353000) 0 nil])
([nil nil ((2314 . 2327) (t 26045 24104 271845 237000)) nil (26045 24288 248491 2000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2323) (undo-tree-id1037 . -4) 2327) nil (26045 24288 248490 669000) 0 nil])
([nil nil ((2323 . 2344)) nil (26045 24288 248490 37000) 0 nil])
([nil nil ((2344 . 2349)) nil (26045 24288 248489 745000) 0 nil])
([nil nil ((2094 . 2103)) nil (26045 24288 248489 357000) 0 nil])
([nil nil ((2103 . 2106)) nil (26045 24288 248488 995000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -2103) (undo-tree-id1034 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -2104) (undo-tree-id1035 . -1) (#(" " 0 1 (fontified t)) . -2105) (undo-tree-id1036 . -1) 2106) nil (26045 24288 248488 618000) 0 nil])
([nil nil ((1955 . 1964)) nil (26045 24288 248487 374000) 0 nil])
([nil nil ((1964 . 1968)) nil (26045 24288 248487 177000) 0 nil])
([nil nil ((#("        Real" 0 12 (fontified t)) . 1956)) nil (26045 24288 248486 898000) 0 nil])
([nil nil ((1956 . 1964)) nil (26045 24288 248486 686000) 0 nil])
([nil nil ((1964 . 1984)) nil (26045 24288 248486 435000) 0 nil])
([nil nil ((1993 . 1997) (2029 . 2030)) nil (26045 24288 248486 221000) 0 nil])
([nil nil ((2043 . 2047) (2077 . 2078)) nil (26045 24288 248485 951000) 0 nil])
([nil nil ((2091 . 2095) (2133 . 2134)) nil (26045 24288 248485 574000) 0 nil])
([nil nil ((2138 . 2151)) nil (26045 24288 248485 286000) 0 nil])
([nil nil ((2151 . 2152)) nil (26045 24288 248485 44000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2147) 2139) nil (26045 24288 248484 730000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2143) (undo-tree-id1033 . -4) 2147) nil (26045 24288 248484 311000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -2139) (undo-tree-id1032 . -4) 2143) nil (26045 24288 248482 974000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -2137) (undo-tree-id1030 . -1) (#("
" 0 1 (fontified t)) . -2138) (undo-tree-id1031 . -1) 2139) nil (26045 24288 248481 857000) 0 nil])
([nil nil ((2140 . 2148) (#("        " 0 8 (fontified nil)) . 2139) (undo-tree-id1029 . -8) (2147 . 2148)) nil (26045 24288 248480 752000) 0 nil])
([nil nil ((2148 . 2162)) nil (26045 24288 248479 888000) 0 nil])
([nil nil ((#("        if key(device)" 0 8 (fontified t) 8 10 (face font-lock-keyword-face fontified t) 10 22 (fontified t)) . 2140)) nil (26045 24288 248479 661000) 0 nil])
([nil nil ((2140 . 2148)) nil (26045 24288 248479 439000) 0 nil])
([nil nil ((2148 . 2155)) nil (26045 24288 248479 256000) 0 nil])
([nil nil ((1964 . 1968)) nil (26045 24288 248478 974000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-variable-name-face fontified t)) . -1964) (undo-tree-id1025 . -1) (#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -1965) (undo-tree-id1026 . -1) (#("w" 0 1 (face font-lock-variable-name-face fontified t)) . -1966) (undo-tree-id1027 . -1) (#("_" 0 1 (face font-lock-variable-name-face fontified t)) . -1967) (undo-tree-id1028 . -1) 1968) nil (26045 24288 248478 468000) 0 nil])
([nil nil ((2155 . 2168)) nil (26045 24288 248476 918000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -2166) (undo-tree-id1023 . -1) (#("d" 0 1 (fontified t)) . -2167) (undo-tree-id1024 . -1) 2168) nil (26045 24288 248476 510000) 0 nil])
([nil nil ((2166 . 2187)) nil (26045 24288 248475 149000) 0 nil])
([nil nil ((2187 . 2192)) nil (26045 24288 248474 805000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -2187) (undo-tree-id1018 . -1) (#("e" 0 1 (fontified t)) . -2188) (undo-tree-id1019 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -2189) (undo-tree-id1020 . -1) (#("a" 0 1 (fontified t)) . -2190) (undo-tree-id1021 . -1) (#("u" 0 1 (fontified t)) . -2191) (undo-tree-id1022 . -1) 2192) nil (26045 24288 248474 51000) 0 nil])
([nil nil ((2187 . 2194)) nil (26045 24288 248471 807000) 0 nil])
([nil nil ((#("
        for device in devices:
            if (
                device.vendor == vendor
                and device.model == model
                and device.serial == serial
            ):
                return device
        return devices.setdefault(
        device = RealDevice(vendor, model, serial)
        devices.append(device)
        return device
" 0 1 (fontified t) 1 2 (fontified t) 2 9 (fontified t) 9 12 (face font-lock-keyword-face fontified t) 12 20 (fontified t) 20 22 (face font-lock-keyword-face fontified t) 22 32 (fontified t) 32 44 (fontified t) 44 46 (face font-lock-keyword-face fontified t) 46 49 (fontified t) 49 51 (fontified t) 51 54 (fontified t) 54 55 (fontified t) 55 71 (fontified t) 71 73 (fontified t) 73 79 (fontified t) 79 81 (face font-lock-operator-face fontified t) 81 89 (fontified t) 89 93 (fontified t) 93 95 (fontified t) 95 105 (fontified t) 105 108 (face font-lock-keyword-face fontified t) 108 122 (fontified t) 122 124 (face font-lock-operator-face fontified t) 124 131 (fontified t) 131 147 (fontified t) 147 150 (face font-lock-keyword-face fontified t) 150 165 (fontified t) 165 167 (face font-lock-operator-face fontified t) 167 190 (fontified t) 190 206 (fontified t) 206 212 (face font-lock-keyword-face fontified t) 212 220 (fontified t) 220 228 (fontified t) 228 234 (face font-lock-keyword-face fontified t) 234 243 (fontified t) 243 254 (fontified t) 254 255 (fontified t) 255 263 (fontified t) 263 269 (fontified t) 269 270 (fontified t) 270 271 (face font-lock-operator-face fontified t) 271 306 (fontified t) 306 337 (fontified t) 337 345 (fontified t) 345 351 (face font-lock-keyword-face fontified t) 351 359 (fontified t)) . 2195) (undo-tree-id986 . -359) (undo-tree-id987 . -336) (undo-tree-id988 . -228) (undo-tree-id989 . -228) (undo-tree-id990 . -228) (undo-tree-id991 . -228) (undo-tree-id992 . -228) (undo-tree-id993 . -228) (undo-tree-id994 . -228) (undo-tree-id995 . -228) (undo-tree-id996 . -228) (undo-tree-id997 . -228) (undo-tree-id998 . -228) (undo-tree-id999 . -228) (undo-tree-id1000 . -228) (undo-tree-id1001 . -228) (undo-tree-id1002 . -228) (undo-tree-id1003 . -228) (undo-tree-id1004 . -228) (undo-tree-id1005 . -228) (undo-tree-id1006 . -228) (undo-tree-id1007 . -228) (undo-tree-id1008 . -228) (undo-tree-id1009 . -228) (undo-tree-id1010 . -228) (undo-tree-id1011 . -228) (undo-tree-id1012 . -228) (undo-tree-id1013 . -228) (undo-tree-id1014 . -228) (undo-tree-id1015 . -228) (undo-tree-id1016 . -359) (undo-tree-id1017 . -359) 2554) nil (26045 24358 846370 630000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2138) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) 2139) nil (26045 24361 487194 890000) 0 nil] [nil nil ((2003 . 2141) (#(" = properties[\"ID_USB_VENDOR\"],
            model = properties[\"ID_USB_MODEL\"],
            serial = properties[\"ID_USB_SERIAL_SHORT\"]" 0 1 (fontified t) 1 2 (face font-lock-operator-face fontified t) 2 3 (fontified t) 3 13 (fontified t) 13 14 (fontified t) 14 29 (face font-lock-string-face fontified t) 29 32 (fontified t) 32 44 (fontified t) 44 49 (fontified t) 49 50 (fontified t) 50 51 (face font-lock-operator-face fontified t) 51 52 (fontified t) 52 62 (fontified t) 62 63 (fontified t) 63 77 (face font-lock-string-face fontified t) 77 80 (fontified t) 80 92 (fontified t) 92 98 (fontified t) 98 99 (fontified t) 99 100 (face font-lock-operator-face fontified t) 100 101 (fontified t) 101 111 (fontified t) 111 112 (fontified t) 112 133 (face font-lock-string-face fontified t) 133 134 (fontified t)) . 2003) 2194 (t 26045 24288 251667 35000)) ((2003 . 2137) (#("=properties[\"ID_USB_VENDOR\"],
            model=properties[\"ID_USB_MODEL\"],
            serial=properties[\"ID_USB_SERIAL_SHORT\"],
        " 0 1 (face font-lock-operator-face fontified t) 1 12 (fontified t) 12 27 (face font-lock-string-face fontified t) 27 47 (fontified t) 47 48 (face font-lock-operator-face fontified t) 48 59 (fontified t) 59 73 (face font-lock-string-face fontified t) 73 94 (fontified t) 94 95 (face font-lock-operator-face fontified t) 95 106 (fontified t) 106 127 (face font-lock-string-face fontified t) 127 130 (fontified t) 130 138 (fontified t)) . 2003)) (26045 24358 187092 483000) 0 nil])
([nil nil ((2003 . 2141) (#(" = properties[\"ID_USB_VENDOR\"],
            model = properties[\"ID_USB_MODEL\"],
            serial = properties[\"ID_USB_SERIAL_SHORT\"]" 0 1 (fontified t) 1 2 (face font-lock-operator-face fontified t) 2 3 (fontified t) 3 13 (fontified t) 13 14 (fontified t) 14 29 (face font-lock-string-face fontified t) 29 32 (fontified t) 32 44 (fontified t) 44 49 (fontified t) 49 50 (fontified t) 50 51 (face font-lock-operator-face fontified t) 51 52 (fontified t) 52 62 (fontified t) 62 63 (fontified t) 63 77 (face font-lock-string-face fontified t) 77 80 (fontified t) 80 92 (fontified t) 92 98 (fontified t) 98 99 (fontified t) 99 100 (face font-lock-operator-face fontified t) 100 101 (fontified t) 101 111 (fontified t) 111 112 (fontified t) 112 133 (face font-lock-string-face fontified t) 133 134 (fontified t)) . 2003) 2193 (t 26045 24361 490740 448000)) nil (26045 24464 574815 497000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2142) (undo-tree-id1038 . -1) (undo-tree-id1040 . -1) (undo-tree-id1042 . -1) (undo-tree-id1044 . -1) 2143 (t 26045 24289 247653 75000)) ((2142 . 2143)) (26045 24358 29092 257000) 0 nil])
([nil nil ((#("list" 0 4 (face font-lock-builtin-face fontified t)) . 1596) (undo-tree-id29 . -4) (t 26045 24362 542728 546000)) nil (26045 24464 574814 912000) 0 nil])
([nil nil ((#("RealDevice(
            vendor=properties[\"ID_USB_VENDOR\"],
            model=properties[\"ID_USB_MODEL\"],
            serial=properties[\"ID_USB_SERIAL_SHORT\"],
        )" 0 11 (fontified t) 11 12 (fontified t) 12 24 (fontified t) 24 30 (fontified t) 30 31 (face font-lock-operator-face fontified t) 31 42 (fontified t) 42 57 (face font-lock-string-face fontified t) 57 77 (fontified t) 77 78 (face font-lock-operator-face fontified t) 78 89 (fontified t) 89 103 (face font-lock-string-face fontified t) 103 124 (fontified t) 124 125 (face font-lock-operator-face fontified t) 125 136 (fontified t) 136 157 (face font-lock-string-face fontified t) 157 160 (fontified t) 160 168 (fontified t) 168 169 (fontified t)) . 1973) (undo-tree-id1162 . -169) (undo-tree-id1164 . -169) (undo-tree-id1166 . -169) (undo-tree-id1168 . -169) (undo-tree-id1170 . -169) (undo-tree-id1172 . -169) (undo-tree-id1174 . -169) (undo-tree-id1176 . -160) (undo-tree-id1178 . -169) 2142 (t 26045 24317 43279 31000)) ((1973 . 2142)) (26045 24357 832558 397000) 0 nil])
([nil nil ((1596 . 1599)) nil (26045 24464 574803 849000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2020) (undo-tree-id1118 . -1) (undo-tree-id1120 . -1) (undo-tree-id1122 . -1) (undo-tree-id1124 . -1) (undo-tree-id1126 . -1) (#("d" 0 1 (fontified t)) . -2021) (undo-tree-id1127 . -1) (undo-tree-id1129 . -1) (undo-tree-id1131 . -1) (undo-tree-id1133 . -1) (#("e" 0 1 (fontified t)) . -2022) (undo-tree-id1135 . -1) (undo-tree-id1137 . -1) (undo-tree-id1139 . -1) (undo-tree-id1141 . -1) (#("v" 0 1 (fontified t)) . -2023) (undo-tree-id1142 . -1) (undo-tree-id1144 . -1) (undo-tree-id1146 . -1) (#("i" 0 1 (fontified t)) . -2024) (undo-tree-id1148 . -1) (undo-tree-id1150 . -1) (undo-tree-id1152 . -1) (#("c" 0 1 (fontified t)) . -2025) (undo-tree-id1153 . -1) (undo-tree-id1155 . -1) (#("e" 0 1 (fontified t)) . -2026) (undo-tree-id1157 . -1) (undo-tree-id1159 . -1) (#(")" 0 1 (fontified t)) . -2027) (undo-tree-id1160 . -1) 2028) ((2020 . 2028)) (26045 24357 492754 292000) 0 nil])
([nil nil ((#("list" 0 1 (face font-lock-builtin-face fontified t) 1 4 (fontified t face font-lock-builtin-face)) . 3112) (undo-tree-id30 . -4) (t 26045 24464 577743 143000)) nil (26045 24522 269914 309000) 0 nil])
([nil nil ((2020 . 2055)) ((#("
                                  " 0 1 (fontified t) 1 35 (fontified t)) . 2020) (undo-tree-id15 . -35) (undo-tree-id16 . -35) (undo-tree-id17 . -35) (undo-tree-id18 . -35) (undo-tree-id19 . -35) (undo-tree-id20 . -35) (undo-tree-id21 . -35) (undo-tree-id22 . -35) (undo-tree-id23 . -1) (undo-tree-id24 . -35)) (26045 24357 333201 379000) 0 nil])
([nil nil ((3112 . 3115)) nil (26045 24522 269903 704000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2223 . 2224) (nil fontified nil 2223 . 2224) (nil fontified nil 2215 . 2223) (nil fontified nil 2212 . 2215) (nil fontified nil 2191 . 2212) (nil fontified nil 2180 . 2191) (nil fontified nil 2179 . 2180) (nil fontified nil 2158 . 2179) (nil fontified nil 2144 . 2158) (nil fontified nil 2133 . 2144) (nil fontified nil 2132 . 2133) (nil fontified nil 2112 . 2132) (nil fontified nil 2097 . 2112) (nil fontified nil 2086 . 2097) (nil fontified nil 2085 . 2086) (nil fontified nil 2079 . 2085) (nil fontified nil 2067 . 2079) (nil fontified nil 2066 . 2067) (nil fontified nil 2055 . 2066) (2055 . 2224)) ((#("RealDevice(
            vendor=properties[\"ID_USB_VENDOR\"],
            model=properties[\"ID_USB_MODEL\"],
            serial=properties[\"ID_USB_SERIAL_SHORT\"],
        )" 0 11 (fontified nil) 11 12 (fontified nil) 12 24 (fontified nil) 24 30 (fontified nil) 30 31 (face font-lock-operator-face fontified nil) 31 42 (fontified nil) 42 57 (face font-lock-string-face fontified nil) 57 60 (fontified nil) 60 77 (fontified nil) 77 78 (face font-lock-operator-face fontified nil) 78 89 (fontified nil) 89 103 (face font-lock-string-face fontified nil) 103 106 (fontified nil) 106 124 (fontified nil) 124 125 (face font-lock-operator-face fontified nil) 125 136 (fontified nil) 136 157 (face font-lock-string-face fontified nil) 157 160 (fontified nil) 160 168 (fontified nil) 168 169 (fontified nil rear-nonsticky nil)) . 2055) (undo-tree-id10 . -169) (undo-tree-id11 . -169) (undo-tree-id12 . -169) (undo-tree-id13 . -169) (undo-tree-id14 . -169) (nil fontified t 2066 . 2067) (nil fontified t 2112 . 2115) (nil fontified t 2158 . 2161) (nil fontified t 2212 . 2215) (nil rear-nonsticky t 2223 . 2224)) (26045 24357 33523 986000) 0 nil])
([nil nil ((61 . 62) (t 26045 24522 273319 409000)) nil (26049 1173 916688 524000) 0 nil])
([nil nil ((#("        device = " 0 8 (fontified t) 8 14 (face font-lock-variable-name-face fontified t) 14 15 (fontified t) 15 16 (face font-lock-operator-face fontified t) 16 17 (fontified t)) . 1956) (undo-tree-id1084 . -17) (undo-tree-id1086 . -17) (undo-tree-id1088 . -17) (undo-tree-id1090 . -17) (undo-tree-id1092 . -17) (undo-tree-id1094 . -17) (undo-tree-id1096 . -8) (undo-tree-id1098 . -8) (undo-tree-id1100 . -8) (undo-tree-id1102 . -8) (undo-tree-id1104 . -15) (undo-tree-id1106 . -15) (undo-tree-id1108 . -16) (undo-tree-id1110 . -17) (undo-tree-id1112 . -17) (undo-tree-id1114 . -17) (undo-tree-id1116 . -17)) ((1956 . 1973)) (26045 24356 843736 157000) 0 nil])
([nil nil ((62 . 76)) nil (26049 1173 916688 319000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1955) (undo-tree-id1046 . -1) (undo-tree-id1048 . -1) (undo-tree-id1050 . -1) (undo-tree-id1052 . -1) (undo-tree-id1054 . -1) (undo-tree-id1056 . -1) (undo-tree-id1058 . -1) (undo-tree-id1060 . -1) (undo-tree-id1062 . -1) (undo-tree-id1064 . -1) (undo-tree-id1066 . -1) (undo-tree-id1068 . -1) (undo-tree-id1070 . -1) (undo-tree-id1072 . -1) (undo-tree-id1074 . -1) (undo-tree-id1076 . -1) (undo-tree-id1078 . -1) (undo-tree-id1080 . -1) (undo-tree-id1082 . -1) 1956) ((1955 . 1956)) (26045 24356 689647 205000) 0 nil])
([nil nil ((1589 . 1597) (#("        " 0 8 (fontified nil)) . 1588) (undo-tree-id18 . -8) (1587 . 1597)) nil (26049 1173 916688 155000) 0 nil])
([nil nil ((2206 . 2207)) ((#(")" 0 1 (fontified t)) . 2206) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1)) (26045 24356 564144 333000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1593) (undo-tree-id17 . -4) 1597) nil (26049 1173 916687 758000) 0 nil])
([nil nil ((1990 . 2223) (#("key(device),
                                  RealDevice(
            vendor=properties[\"ID_USB_VENDOR\"],
            model=properties[\"ID_USB_MODEL\"],
            serial=properties[\"ID_USB_SERIAL_SHORT\"],
        )" 0 13 (fontified t) 13 47 (fontified t) 47 58 (fontified t) 58 59 (fontified t) 59 71 (fontified t) 71 77 (fontified t) 77 78 (face font-lock-operator-face fontified t) 78 89 (fontified t) 89 104 (face font-lock-string-face fontified t) 104 124 (fontified t) 124 125 (face font-lock-operator-face fontified t) 125 136 (fontified t) 136 150 (face font-lock-string-face fontified t) 150 171 (fontified t) 171 172 (face font-lock-operator-face fontified t) 172 183 (fontified t) 183 204 (face font-lock-string-face fontified t) 204 207 (fontified t) 207 215 (fontified t) 215 216 (fontified t rear-nonsticky t)) . 1990) (undo-tree-id0 . -47) (undo-tree-id1 . -47) (t 26045 24346 494914 272000)) ((1990 . 2206) (#("
            key(device),
            RealDevice(
                vendor=properties[\"ID_USB_VENDOR\"],
                model=properties[\"ID_USB_MODEL\"],
                serial=properties[\"ID_USB_SERIAL_SHORT\"],
            ),
        " 0 72 (fontified t) 72 73 (face font-lock-operator-face fontified t) 73 84 (fontified t) 84 99 (face font-lock-string-face fontified t) 99 123 (fontified t) 123 124 (face font-lock-operator-face fontified t) 124 135 (fontified t) 135 149 (face font-lock-string-face fontified t) 149 174 (fontified t) 174 175 (face font-lock-operator-face fontified t) 175 186 (fontified t) 186 207 (face font-lock-string-face fontified t) 207 233 (fontified t)) . 1990) (undo-tree-id2 . -25) (undo-tree-id3 . -25) (undo-tree-id4 . -25) (undo-tree-id5 . -1) (t 26045 24347 482902 577000)) (26045 24356 564001 433000) 0 nil])
([nil nil ((1593 . 1614)) nil (26049 1173 916687 455000) 0 nil])
nil
([nil nil ((1614 . 1615)) nil (26049 1173 916687 351000) 0 nil])
([nil nil ((1615 . 1616)) nil (26049 1173 916687 248000) 0 nil])
([nil nil ((1616 . 1621)) nil (26049 1173 916687 109000) 0 nil])
([nil nil ((1621 . 1630)) nil (26049 1173 916687 6000) 0 nil])
([nil nil ((1630 . 1639)) nil (26049 1173 916686 837000) 0 nil])
([nil nil ((1639 . 1648)) nil (26049 1173 916686 650000) 0 nil])
([nil nil ((1642 . 1652) (#("serial" 0 6 (fontified t)) . -1642) (undo-tree-id16 . -6) 1648) nil (26049 1173 916686 440000) 0 nil])
([nil nil ((1642 . 1653) (#("SERIAL_DIR" 0 10 (fontified t)) . -1642) (undo-tree-id15 . -10) 1652) nil (26049 1173 916685 930000) 0 nil])
([nil nil ((#("assert self.serial_path" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 23 (fontified t)) . 1630)) nil (26049 1173 916685 578000) 0 nil])
([nil nil ((1630 . 1633)) nil (26049 1173 916685 467000) 0 nil])
([nil nil ((1633 . 1645)) nil (26049 1173 916685 337000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1641) (undo-tree-id11 . -1) (#("s" 0 1 (fontified t)) . -1642) (undo-tree-id12 . -1) (#("e" 0 1 (fontified t)) . -1643) (undo-tree-id13 . -1) (#("r" 0 1 (fontified t)) . -1644) (undo-tree-id14 . -1) 1645) nil (26049 1173 916685 16000) 0 nil])
([nil nil ((1641 . 1654)) nil (26049 1173 916683 762000) 0 nil])
([nil nil ((576 . 580)) nil (26049 1173 916683 572000) 0 nil])
([nil nil ((#("is None:" 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t) 3 7 (face font-lock-constant-face fontified t) 7 8 (fontified t)) . 600) (undo-tree-id10 . -4)) nil (26049 1173 916683 359000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -599) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 600) nil (26049 1173 916682 958000) 0 nil])
([nil nil ((599 . 600)) nil (26049 1173 916682 394000) 0 nil])
([nil nil ((1650 . 1663)) nil (26049 1173 916682 229000) 0 nil])
([nil nil ((1663 . 1672)) nil (26049 1173 916682 23000) 0 nil])
([nil nil ((#("P" 0 1 (face nil fontified t)) . -1671) (undo-tree-id7 . -1) 1672) nil (26049 1173 916681 688000) 0 nil])
([nil nil ((1671 . 1688)) nil (26049 1173 916680 458000) 0 nil])
([nil nil ((#("self.serial_path}" 0 4 (face font-lock-keyword-face fontified t) 4 17 (face nil fontified t)) . 1671) (undo-tree-id4 . -12) (undo-tree-id5 . -5) (undo-tree-id6 . -17)) nil (26049 1173 916732 420000) 0 nil])
([nil nil ((#("            exit(f\"{" 0 12 (fontified t) 12 16 (face font-lock-constant-face fontified t) 16 18 (fontified t) 18 19 (face font-lock-string-face fontified t) 19 20 (face nil fontified t)) . 1651)) nil (26049 1472 875591 3000) 0 nil] [nil nil ((#("{" 0 1 (face nil fontified t)) . -1670) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 1671) ((1670 . 1671)) (26049 1173 916677 135000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1650) (undo-tree-id35 . -1) 1651) nil (26049 1472 875590 766000) 0 nil])
nil
([nil nil ((#("        if not self.serial_path:" 0 8 (fontified t) 8 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 14 (face font-lock-keyword-face fontified t) 14 15 (fontified t) 15 19 (face font-lock-keyword-face fontified t) 19 32 (fontified t)) . 1618)) nil (26049 1472 875590 423000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1617) (undo-tree-id34 . -1) 1618) nil (26049 1472 875590 272000) 0 nil])
([nil nil ((61 . 62)) nil (26049 1472 875589 964000) 0 nil])
([nil nil ((62 . 71)) nil (26049 1472 875589 767000) 0 nil])
([nil nil ((1627 . 1636)) nil (26049 1472 875589 573000) 0 nil])
([nil nil ((1636 . 1645)) nil (26049 1472 875589 382000) 0 nil])
([nil nil ((1641 . 1644)) nil (26049 1472 875589 257000) 0 nil])
([nil nil ((1648 . 1667)) nil (26049 1472 875589 143000) 0 nil])
([nil nil ((1667 . 1668)) nil (26049 1472 875588 952000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1666) (undo-tree-id32 . -1) (#("t" 0 1 (fontified t)) . -1667) (undo-tree-id33 . -1) 1668) nil (26049 1472 875588 717000) 0 nil])
([nil nil ((1666 . 1667)) nil (26049 1472 875588 104000) 0 nil])
([nil nil ((1667 . 1675)) nil (26049 1472 875587 990000) 0 nil])
([nil nil ((1627 . 1636)) nil (26049 1472 875587 867000) 0 nil])
([nil nil ((1636 . 1640)) nil (26049 1472 875587 763000) 0 nil])
([nil nil ((1649 . 1653) 1653) nil (26049 1472 875587 623000) 0 nil])
([nil nil ((1692 . 1705)) nil (26049 1472 875587 463000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -1701) (1705 . 1712)) nil (26049 1472 875587 230000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -1707) (undo-tree-id31 . -1) 1708) nil (26049 1472 875586 845000) 0 nil])
([nil nil ((#("except" 0 6 (face font-lock-keyword-face fontified t)) . 1701)) nil (26049 1472 875586 347000) 0 nil])
([nil nil ((1701 . 1709)) nil (26049 1472 875586 234000) 0 nil])
([nil nil ((1709 . 1722)) nil (26049 1472 875586 125000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1718) (undo-tree-id30 . -4) 1722) nil (26049 1472 875585 968000) 0 nil])
([nil nil ((1718 . 1722)) nil (26049 1472 875585 573000) 0 nil])
([nil nil ((1722 . 1734)) nil (26049 1472 875585 458000) 0 nil])
([nil nil ((1692 . 1705)) nil (26049 1472 875585 215000) 0 nil])
([nil nil ((1705 . 1706)) nil (26049 1472 875585 100000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1705) (undo-tree-id29 . -1) 1706) nil (26049 1472 875584 894000) 0 nil])
([nil nil ((1705 . 1726)) nil (26049 1472 875584 579000) 0 nil])
([nil nil ((1726 . 1727)) nil (26049 1472 875584 382000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . -1726) (undo-tree-id28 . -1) 1727) nil (26049 1472 875584 211000) 0 nil])
([nil nil ((1726 . 1739)) nil (26049 1472 875583 182000) 0 nil])
([nil nil ((1739 . 1752)) nil (26049 1472 875582 969000) 0 nil])
([nil nil ((1752 . 1755)) nil (26049 1472 875582 556000) 0 nil])
([nil nil ((#("            att" 0 15 (fontified t)) . 1740)) nil (26049 1472 875582 317000) 0 nil])
([nil nil ((1740 . 1752)) nil (26049 1472 875581 885000) 0 nil])
([nil nil ((1752 . 1764)) nil (26049 1472 875581 754000) 0 nil])
([nil nil ((#("4" 0 1 (fontified t)) . -1763) (undo-tree-id27 . -1) 1764) nil (26049 1472 875581 524000) 0 nil])
([nil nil ((1763 . 1768)) nil (26049 1472 875581 28000) 0 nil])
([nil nil ((1768 . 1781)) nil (26049 1472 875580 809000) 0 nil])
([nil nil ((#("attributes[4] = termios.B1200" 0 10 (face font-lock-variable-name-face fontified t) 10 14 (fontified t) 14 15 (face font-lock-operator-face fontified t) 15 29 (fontified t)) . 1752)) nil (26049 1472 875580 609000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1780 . 1781) (nil fontified nil 1767 . 1781) (nil fontified nil 1766 . 1767) (nil fontified nil 1762 . 1766) (nil fontified nil 1752 . 1762) (1752 . 1781)) nil (26049 1472 875580 376000) 0 nil])
([nil nil ((1781 . 1794)) nil (26049 1472 875580 156000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1822 . 1823) (nil fontified nil 1809 . 1823) (nil fontified nil 1808 . 1809) (nil fontified nil 1804 . 1808) (nil fontified nil 1794 . 1804) (1794 . 1823)) nil (26049 1472 875579 917000) 0 nil])
([nil nil ((#("4" 0 1 (fontified t)) . -1805) (undo-tree-id26 . -1) 1806) nil (26049 1472 875579 607000) 0 nil])
([nil nil ((1805 . 1806)) nil (26049 1472 875579 276000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . -1805) (undo-tree-id25 . -1) 1806) nil (26049 1472 875579 124000) 0 nil])
([nil nil ((1805 . 1806)) nil (26049 1472 875578 706000) 0 nil])
([nil nil ((1764 . 1766)) nil (26049 1472 875578 522000) 0 nil])
([nil nil ((1770 . 1771)) nil (26049 1472 875578 253000) 0 nil])
([nil nil ((1784 . 1787)) nil (26049 1472 875578 95000) 0 nil])
([nil nil ((1787 . 1790)) nil (26049 1472 875577 689000) 0 nil])
([nil nil ((1786 . 1793) (#("term" 0 4 (fontified t)) . -1786) (undo-tree-id24 . -4) 1790) nil (26049 1472 875577 451000) 0 nil])
([nil nil ((1793 . 1800)) nil (26049 1472 875576 941000) 0 nil])
([nil nil ((#("            attributes[4] = termios.B1200" 0 12 (fontified t) 12 22 (face font-lock-variable-name-face fontified t) 22 26 (fontified t) 26 27 (face font-lock-operator-face fontified t) 27 40 (fontified t) 40 41 (fontified t rear-nonsticky t)) . 1801) (undo-tree-id22 . -12) (undo-tree-id23 . -12)) nil (26049 1472 875576 506000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1800) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) 1801) nil (26049 1472 875573 882000) 0 nil])
([nil nil ((69 . 131) (#("os
import termios
import logging
import shlex
import subproces" 0 2 (fontified t) 2 3 (fontified t) 3 9 (face font-lock-keyword-face fontified t) 9 17 (fontified t) 17 18 (fontified t) 18 24 (face font-lock-keyword-face fontified t) 24 33 (fontified t) 33 39 (face font-lock-keyword-face fontified t) 39 46 (fontified t) 46 52 (face font-lock-keyword-face fontified t) 52 62 (fontified t)) . 69) (undo-tree-id77 . -17) (undo-tree-id78 . -2) (t 26049 1472 904735 315000)) nil (26049 1646 1576 294000) 0 nil])
([nil nil ((1627 . 1636) (t 26049 1473 832733 466000)) nil (26049 1646 1575 585000) 0 nil])
([nil nil ((1636 . 1657)) nil (26049 1646 1575 414000) 0 nil])
([nil nil ((1657 . 1660)) nil (26049 1646 1575 305000) 0 nil])
([nil nil ((1660 . 1673)) nil (26049 1646 1575 183000) 0 nil])
([nil nil ((1660 . 1673)) nil (26049 1646 1575 73000) 0 nil])
([nil nil ((1673 . 1679)) nil (26049 1646 1574 951000) 0 nil])
([nil nil ((#("return" 0 6 (face font-lock-keyword-face fontified t)) . 1673)) nil (26049 1646 1574 826000) 0 nil])
([nil nil ((1673 . 1680)) nil (26049 1646 1574 699000) 0 nil])
([nil nil ((1680 . 1687)) nil (26049 1646 1574 580000) 0 nil])
([nil nil ((#("            exit(f\"Device " 0 12 (fontified t) 12 16 (face font-lock-constant-face fontified t) 16 18 (fontified t) 18 26 (face font-lock-string-face fontified t)) . 1661) (undo-tree-id75 . -19) (undo-tree-id76 . -19)) nil (26049 1646 1574 374000) 0 nil])
([nil nil ((1661 . 1673)) nil (26049 1646 1573 892000) 0 nil])
([nil nil ((1673 . 1694)) nil (26049 1646 1573 703000) 0 nil])
([nil nil ((1694 . 1710)) nil (26049 1646 1573 583000) 0 nil])
([nil nil ((#("No serial device" 0 16 (face font-lock-string-face fontified t)) . 1694)) nil (26049 1646 1573 446000) 0 nil])
([nil nil ((1694 . 1706)) nil (26049 1646 1573 324000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-string-face fontified t)) . -1705) (undo-tree-id74 . -1) 1706) nil (26049 1646 1573 72000) 0 nil])
([nil nil ((1705 . 1710)) nil (26049 1646 1572 697000) 0 nil])
([nil nil ((#("real device f" 0 13 (face font-lock-string-face fontified t)) . 1697) (undo-tree-id69 . -12) (undo-tree-id70 . -13) (undo-tree-id71 . -12) (undo-tree-id72 . -5) (undo-tree-id73 . -13)) nil (26049 1646 1572 482000) 0 nil])
([nil nil ((#("No " 0 3 (face font-lock-string-face fontified t)) . 1694) (undo-tree-id63 . -3) (undo-tree-id64 . -3) (undo-tree-id65 . -3) (undo-tree-id66 . -3) (undo-tree-id67 . -3) (undo-tree-id68 . -3)) nil (26049 1646 1570 90000) 0 nil])
([nil nil ((1694 . 1705)) nil (26049 1646 1568 792000) 0 nil])
([nil nil ((#("Device has " 0 11 (face font-lock-string-face fontified t)) . 1694) (undo-tree-id50 . -1) (undo-tree-id51 . -2) (undo-tree-id52 . -3) (undo-tree-id53 . -4) (undo-tree-id54 . -5) (undo-tree-id55 . -6) (undo-tree-id56 . -7) (undo-tree-id57 . -8) (undo-tree-id58 . -9) (undo-tree-id59 . -10) (undo-tree-id60 . -11) (undo-tree-id61 . -7) (undo-tree-id62 . -11)) nil (26049 1646 1568 546000) 0 nil])
([nil nil ((1694 . 1707)) nil (26049 1646 1566 153000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-string-face fontified t)) . -1706) (undo-tree-id48 . -1) (undo-tree-id49 . -1) 1707) nil (26049 1646 1565 968000) 0 nil])
([nil nil ((1706 . 1727)) nil (26049 1646 1564 583000) 0 nil])
([nil nil ((1727 . 1732)) nil (26049 1646 1564 459000) 0 nil])
([nil nil ((#("deivce:" 0 7 (face font-lock-string-face fontified t)) . 1725) (undo-tree-id40 . -1) (undo-tree-id41 . -2) (undo-tree-id42 . -3) (undo-tree-id43 . -4) (undo-tree-id44 . -5) (undo-tree-id45 . -6) (undo-tree-id46 . -7) (undo-tree-id47 . -7)) nil (26049 1646 1564 176000) 0 nil])
([nil nil ((1725 . 1738)) nil (26049 1646 1562 373000) 0 nil])
([nil nil ((1738 . 1741)) nil (26049 1646 1562 155000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1741) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) 1742) nil (26049 1646 1561 693000) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . 1741) (undo-tree-id36 . -12)) nil (26049 1646 1558 172000) 0 nil])
([nil nil ((#("NotFoundError" 0 13 (fontified t)) . 1679) (undo-tree-id79 . -13) (undo-tree-id80 . -13) (t 26049 1646 4390 434000)) nil (26049 1677 123336 925000) 0 nil])
([nil nil ((1679 . 1689)) nil (26049 1677 123327 839000) 0 nil])
([nil nil ((1798 . 1800) (t 26049 1677 124328 417000)) nil (26049 1841 517278 160000) 0 nil])
([nil nil ((1913 . 1926) (t 26049 1841 521329 785000)) nil (26049 1848 875115 219000) 0 nil])
([nil nil ((#("R" 0 1 (fontified t)) . -1802) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (#("W" 0 1 (fontified t)) . -1803) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) 1804) nil (26049 1851 477060 64000) 0 nil] [nil nil ((#("fd = os.open(self.serial_path, os.O_RDRW)
            attributes = termios.tcgetattr(fd)
            attributes[4:5] = (termios.B1200, termios.B1200)
            
        finally:
            os.close(fd)


def all_devices() -> set[RealDevice]:
    \"\"\"Finds all USB CircuitPython devices.\"\"\"

    # Maps (vendor, model, serial) to RealDevice instances.
    Key: TypeAlias = tuple[str, str, str]
    devices: dict[Key, RealDevice] = {}

    def key(d: RealDevice) -> Key:
        return (d.vendor, d.model, d.serial)

    def find_or_add_device(properties: dict[str, str]) -> RealDevice:
        device = RealDevice(" 0 2 (face font-lock-variable-name-face fontified t) 2 3 (fontified t) 3 4 (face font-lock-operator-face fontified t) 4 8 (fontified t) 8 12 (face font-lock-builtin-face fontified t) 12 13 (fontified t) 13 17 (face font-lock-keyword-face fontified t) 17 42 (fontified t) 42 54 (fontified t) 54 64 (face font-lock-variable-name-face fontified t) 64 65 (fontified t) 65 66 (face font-lock-operator-face fontified t) 66 89 (fontified t) 89 101 (fontified t) 101 111 (face font-lock-variable-name-face fontified t) 111 117 (fontified t) 117 118 (face font-lock-operator-face fontified t) 118 132 (fontified t) 132 133 (fontified t rear-nonsticky t) 133 135 (fontified t) 135 150 (fontified t) 150 162 (fontified t) 162 163 (fontified t) 163 171 (fontified t) 171 178 (face font-lock-keyword-face fontified t) 178 180 (fontified t) 180 204 (fontified t) 204 205 (fontified t) 205 207 (fontified t) 207 210 (face font-lock-keyword-face fontified t) 210 211 (fontified t) 211 222 (face font-lock-function-name-face fontified t) 222 225 (fontified t) 225 226 (face font-lock-operator-face fontified t) 226 227 (face font-lock-operator-face fontified t) 227 228 (fontified t) 228 231 (face font-lock-builtin-face fontified t) 231 245 (fontified t) 245 249 (fontified t) 249 250 (face font-lock-doc-face fontified t) 250 251 (face font-lock-doc-face fontified t) 251 252 (face font-lock-doc-face fontified t syntax-table (15)) 252 288 (face font-lock-doc-face fontified t) 288 289 (face font-lock-doc-face fontified t syntax-table (15)) 289 290 (face font-lock-doc-face fontified t) 290 291 (face font-lock-doc-face fontified t) 291 292 (fontified t) 292 297 (fontified t) 297 299 (face font-lock-comment-delimiter-face fontified t) 299 353 (face font-lock-comment-face fontified t) 353 357 (fontified t) 357 360 (face font-lock-variable-name-face fontified t) 360 372 (fontified t) 372 373 (face font-lock-operator-face fontified t) 373 374 (fontified t) 374 379 (face font-lock-builtin-face fontified t) 379 380 (fontified t) 380 383 (face font-lock-builtin-face fontified t) 383 385 (fontified t) 385 388 (face font-lock-builtin-face fontified t) 388 390 (fontified t) 390 393 (face font-lock-builtin-face fontified t) 393 395 (fontified t) 395 399 (fontified t) 399 406 (face font-lock-variable-name-face fontified t) 406 408 (fontified t) 408 412 (face font-lock-builtin-face fontified t) 412 413 (fontified t) 413 416 (face font-lock-variable-name-face fontified t) 416 418 (fontified t) 418 428 (face font-lock-variable-name-face fontified t) 428 430 (fontified t) 430 431 (face font-lock-operator-face fontified t) 431 435 (fontified t) 435 436 (fontified t) 436 440 (fontified t) 440 443 (face font-lock-keyword-face fontified t) 443 444 (fontified t) 444 447 (face font-lock-function-name-face fontified t) 447 463 (fontified t) 463 464 (face font-lock-operator-face fontified t) 464 465 (face font-lock-operator-face fontified t) 465 471 (fontified t) 471 479 (fontified t) 479 485 (face font-lock-keyword-face fontified t) 485 516 (fontified t) 516 517 (fontified t) 517 521 (fontified t) 521 524 (face font-lock-keyword-face fontified t) 524 525 (fontified t) 525 543 (face font-lock-function-name-face fontified t) 543 556 (fontified t) 556 560 (face font-lock-builtin-face fontified t) 560 561 (fontified t) 561 564 (face font-lock-builtin-face fontified t) 564 566 (fontified t) 566 569 (face font-lock-builtin-face fontified t) 569 572 (fontified t) 572 573 (face font-lock-operator-face fontified t) 573 574 (face font-lock-operator-face fontified t) 574 587 (fontified t) 587 595 (fontified t) 595 601 (face font-lock-variable-name-face fontified t) 601 602 (fontified t) 602 603 (face font-lock-operator-face fontified t) 603 615 (fontified t)) . 1764) (undo-tree-id82 . -615) (undo-tree-id83 . -41) (undo-tree-id84 . -41) (undo-tree-id85 . -38) (undo-tree-id86 . -41) (undo-tree-id87 . -54) (undo-tree-id88 . -101) (undo-tree-id89 . -149) (undo-tree-id90 . -149) (undo-tree-id91 . -18) (undo-tree-id92 . -149) (undo-tree-id93 . -37) (undo-tree-id94 . -37) (undo-tree-id95 . -162) (undo-tree-id96 . -162) (undo-tree-id97 . -249) (undo-tree-id98 . -249) (undo-tree-id99 . -249) (undo-tree-id100 . -249) (undo-tree-id101 . -291) (undo-tree-id102 . -249) (undo-tree-id103 . -207) (undo-tree-id104 . -244) (undo-tree-id105 . -207) (undo-tree-id106 . -244) (undo-tree-id107 . -207) (undo-tree-id108 . -207) (undo-tree-id109 . -207) (undo-tree-id110 . -207) (undo-tree-id111 . -207) (undo-tree-id112 . -207) (undo-tree-id113 . -249) (undo-tree-id114 . -249) (undo-tree-id115 . -249) (undo-tree-id116 . -249) (undo-tree-id117 . -291) (undo-tree-id118 . -249) (undo-tree-id119 . -207) (undo-tree-id120 . -244) (undo-tree-id121 . -207) (undo-tree-id122 . -244) (undo-tree-id123 . -207) (undo-tree-id124 . -207) (undo-tree-id125 . -207) (undo-tree-id126 . -207) (undo-tree-id127 . -207) (undo-tree-id128 . -207) (undo-tree-id129 . -249) (undo-tree-id130 . -249) (undo-tree-id131 . -249) (undo-tree-id132 . -249) (undo-tree-id133 . -291) (undo-tree-id134 . -249) (undo-tree-id135 . -207) (undo-tree-id136 . -244) (undo-tree-id137 . -207) (undo-tree-id138 . -244) (undo-tree-id139 . -207) (undo-tree-id140 . -207) (undo-tree-id141 . -207) (undo-tree-id142 . -207) (undo-tree-id143 . -207) (undo-tree-id144 . -207) (undo-tree-id145 . -595) (undo-tree-id146 . -595) (undo-tree-id147 . -595) (undo-tree-id148 . -604) (undo-tree-id149 . -595) (undo-tree-id150 . -595) (undo-tree-id151 . -595) (undo-tree-id152 . -604) (undo-tree-id153 . -595) (undo-tree-id154 . -595) (undo-tree-id155 . -595) (undo-tree-id156 . -604)) ((1764 . 2379)) (26049 1848 875041 641000) 0 nil] [nil nil ((1926 . 1931)) ((#("termi" 0 5 (fontified t)) . 1926) (undo-tree-id81 . -5)) (26049 1845 533778 893000) 0 nil])
([nil nil ((1802 . 1804)) nil (26049 1851 477057 966000) 0 nil])
nil
nil
([nil nil ((#("            " 0 12 (fontified t)) . 1914) (undo-tree-id157 . -12) (undo-tree-id158 . -12) 1804) nil (26049 1851 477055 952000) 0 nil])
([nil nil ((1914 . 1926) (t 26049 1851 505900 13000)) nil (26049 1886 140897 396000) 0 nil])
([nil nil ((1926 . 1928)) nil (26049 1886 140897 210000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -1926) (undo-tree-id168 . -1) (#("t" 0 1 (fontified t)) . -1927) (undo-tree-id169 . -1) 1928) nil (26049 1886 140896 882000) 0 nil])
([nil nil ((1926 . 1939)) nil (26049 1886 140895 920000) 0 nil])
([nil nil ((1934 . 1939) (#("tcset" 0 5 (fontified t)) . -1934) (undo-tree-id167 . -5) 1939) nil (26049 1886 140895 623000) 0 nil])
([nil nil ((1939 . 1960)) nil (26049 1886 140888 475000) 0 nil])
([nil nil ((1960 . 1965)) nil (26049 1886 140888 78000) 0 nil])
([nil nil ((1965 . 1976)) nil (26049 1886 140884 121000) 0 nil])
([nil nil ((4214 . 4215) (t 26049 1886 145709 636000)) nil (26049 2048 989156 833000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . -1878) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) 1879 (t 26049 2048 996373 887000)) nil (26049 2185 911161 980000) 0 nil])
([nil nil ((1878 . 1879)) nil (26049 2185 911148 594000) 0 nil])
([nil nil ((1852 . 1865) (t 26049 2185 916236 640000)) nil (26049 2415 318361 378000) 0 nil])
([nil nil ((1865 . 1867)) nil (26049 2415 318361 209000) 0 nil])
([nil nil ((1867 . 1888)) nil (26049 2415 318361 86000) 0 nil])
([nil nil ((1888 . 1891)) nil (26049 2415 318360 857000) 0 nil])
([nil nil ((1627 . 1636)) nil (26049 2415 318360 731000) 0 nil])
([nil nil ((1636 . 1638)) nil (26049 2415 318360 599000) 0 nil])
([nil nil ((1638 . 1656)) nil (26049 2415 318360 474000) 0 nil])
([nil nil ((#("RP2040 bootloaders" 0 18 (face font-lock-comment-face fontified t)) . 1638)) nil (26049 2415 318360 136000) 0 nil])
([nil nil ((1638 . 1640)) nil (26049 2415 318359 999000) 0 nil])
([nil nil ((#("P" 0 1 (face font-lock-comment-face fontified t)) . -1638) (undo-tree-id209 . -1) (#("R" 0 1 (face font-lock-comment-face fontified t)) . -1639) (undo-tree-id210 . -1) 1640) nil (26049 2415 318359 797000) 0 nil])
([nil nil ((1638 . 1650)) nil (26049 2415 318359 252000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -1649) (undo-tree-id208 . -1) 1650) nil (26049 2415 318358 940000) 0 nil])
([nil nil ((1649 . 1657)) nil (26049 2415 318358 554000) 0 nil])
([nil nil ((1657 . 1660)) nil (26049 2415 318358 400000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-comment-face fontified t)) . -1652) (undo-tree-id200 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -1653) (undo-tree-id201 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t)) . -1654) (undo-tree-id202 . -1) (#("d" 0 1 (face font-lock-comment-face fontified t)) . -1655) (undo-tree-id203 . -1) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -1656) (undo-tree-id204 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -1657) (undo-tree-id205 . -1) (#("=" 0 1 (face font-lock-comment-face fontified t)) . -1658) (undo-tree-id206 . -1) (#("=" 0 1 (face font-lock-comment-face fontified t)) . -1659) (undo-tree-id207 . -1) 1660) nil (26049 2415 318357 855000) 0 nil])
([nil nil ((1652 . 1665)) nil (26049 2415 318355 998000) 0 nil])
([nil nil ((1665 . 1673)) nil (26049 2415 318355 746000) 0 nil])
([nil nil ((#("enterr" 0 6 (face font-lock-comment-face fontified t)) . 1658)) nil (26049 2415 318355 582000) 0 nil])
([nil nil ((1658 . 1663)) nil (26049 2415 318355 448000) 0 nil])
([nil nil ((1672 . 1674)) nil (26049 2415 318355 232000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -1672) (undo-tree-id198 . -1) (#("b" 0 1 (face font-lock-comment-face fontified t)) . -1673) (undo-tree-id199 . -1) 1674) nil (26049 2415 318355 16000) 0 nil])
([nil nil ((1672 . 1693)) nil (26049 2415 318354 425000) 0 nil])
([nil nil ((1693 . 1710)) nil (26049 2415 318354 280000) 0 nil])
([nil nil ((#("serial terminal is" 0 18 (face font-lock-comment-face fontified t)) . 1692)) nil (26049 2415 318353 999000) 0 nil])
([nil nil ((1692 . 1713)) nil (26049 2415 318353 853000) 0 nil])
([nil nil ((1713 . 1734)) nil (26049 2415 318353 638000) 0 nil])
([nil nil ((1734 . 1741)) nil (26049 2415 318353 467000) 0 nil])
([nil nil ((#("q" 0 1 (face font-lock-comment-face fontified t)) . -1735) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (#("1" 0 1 (face font-lock-comment-face fontified t)) . -1736) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (#("2" 0 1 (face font-lock-comment-face fontified t)) . -1737) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (#("0" 0 1 (face font-lock-comment-face fontified t)) . -1738) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (#("0" 0 1 (face font-lock-comment-face fontified t)) . -1739) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (#("." 0 1 (face font-lock-comment-face fontified t)) . -1740) (undo-tree-id197 . -1) 1741) nil (26049 2415 318352 457000) 0 nil])
([nil nil ((1735 . 1740)) nil (26049 2415 318339 96000) 0 nil])
([nil current ((1700 . 1710) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . -1700) (nil face nil 1699 . 1700) (1699 . 1700) 1740) nil (26049 2415 318335 646000) 0 nil])
nil
