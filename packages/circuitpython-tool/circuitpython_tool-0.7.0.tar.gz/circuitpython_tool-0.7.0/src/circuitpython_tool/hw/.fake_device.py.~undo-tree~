(undo-tree-save-format-version . 1)
"aa253e1fe764fe19dfeb5595c98cc995614e28cf"
[nil nil nil nil (26049 8763 586100 421000) 0 nil]
([nil nil ((2269 . 2274) (t 26046 49388 239686 59000)) nil (26049 8763 586099 868000) 0 nil])
([nil nil ((2274 . 2295)) nil (26049 8763 586099 586000) 0 nil])
([nil nil ((2295 . 2296)) nil (26049 8763 586099 54000) 0 nil])
([nil nil ((#("    devices = set(devices)" 0 4 (fontified t) 4 11 (face font-lock-variable-name-face fontified t) 11 12 (fontified t) 12 13 (face font-lock-operator-face fontified t) 13 14 (fontified t) 14 17 (face font-lock-builtin-face fontified t) 17 26 (fontified t)) . 2270) (undo-tree-id24 . -13) (undo-tree-id25 . -14) (undo-tree-id26 . -15) (undo-tree-id27 . -16) (undo-tree-id28 . -17) (undo-tree-id29 . -18) (undo-tree-id30 . -19) (undo-tree-id31 . -20) (undo-tree-id32 . -21) (undo-tree-id33 . -22) (undo-tree-id34 . -23) (undo-tree-id35 . -24) (undo-tree-id36 . -25) (undo-tree-id37 . -26) (undo-tree-id38 . -26)) nil (26049 8763 586098 491000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2269) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) 2270) nil (26049 8763 586094 404000) 0 nil])
([nil nil ((#("astuple):" 0 9 (fontified t)) . 2303) (undo-tree-id6 . -7) (undo-tree-id7 . -9)) nil (26049 8763 586090 702000) 0 nil])
([nil nil ((2303 . 2305)) nil (26049 8763 586089 833000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -2303) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("a" 0 1 (fontified t)) . -2304) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 2305) nil (26049 8763 586089 380000) 0 nil])
([nil nil ((2303 . 2313)) nil (26049 8763 586072 540000) 0 nil])
([nil nil ((2313 . 2320)) nil (26049 8769 724652 586000) 0 nil])
([nil nil ((#("astuple" 0 7 (fontified t)) . 119) (undo-tree-id60 . -4) (undo-tree-id61 . -4) (undo-tree-id62 . -4) (undo-tree-id63 . -4) (undo-tree-id64 . -4) (undo-tree-id65 . -7) (undo-tree-id66 . -7)) nil (26049 8772 850428 463000) 0 nil] [nil nil ((#("from dataclasses import astuple, dataclass" 0 4 (face font-lock-keyword-face fontified t) 4 17 (fontified t) 17 23 (face font-lock-keyword-face fontified t) 23 42 (fontified t)) . 95) (undo-tree-id48 . -28) (undo-tree-id49 . -28) (undo-tree-id50 . -28) (undo-tree-id51 . -28) (undo-tree-id52 . -28) (undo-tree-id53 . -42) (t 26049 8763 589321 873000)) ((95 . 137)) (26049 8769 439985 809000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -119) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#(" " 0 1 (fontified t)) . -120) (undo-tree-id58 . -1) (undo-tree-id59 . -1) 121) nil (26049 8772 850424 500000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -94) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) 95) ((94 . 95) (t 26049 8768 925332 591000)) (26049 8768 921050 701000) 0 nil])
([nil nil ((#("def all_devices(toml: str | Path) -> set[FakeDevice]:
    \"\"\"Load FakeDevice objects from a TOML file.\"\"\"
    if isinstance(toml, Path):
        toml = toml.read_text()
    document = tomlkit.loads(toml)
    tables = document.get(\"devices\", tomlkit.aot())
    assert isinstance(tables, list)
    return {FakeDevice.from_toml(t) for t in tables}
" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 15 (face font-lock-function-name-face fontified t) 15 22 (fontified t) 22 25 (face font-lock-builtin-face fontified t) 25 26 (fontified t) 26 27 (face font-lock-operator-face fontified t) 27 34 (fontified t) 34 35 (face font-lock-operator-face fontified t) 35 36 (face font-lock-operator-face fontified t) 36 37 (fontified t) 37 40 (face font-lock-builtin-face fontified t) 40 58 (fontified t) 58 60 (face font-lock-doc-face fontified t) 60 61 (face font-lock-doc-face fontified t syntax-table (15)) 61 102 (face font-lock-doc-face fontified t) 102 103 (face font-lock-doc-face fontified t syntax-table (15)) 103 105 (face font-lock-doc-face fontified t) 105 110 (fontified t) 110 112 (face font-lock-keyword-face fontified t) 112 113 (fontified t) 113 123 (face font-lock-builtin-face fontified t) 123 145 (fontified t) 145 149 (face font-lock-variable-name-face fontified t) 149 150 (fontified t) 150 151 (face font-lock-operator-face fontified t) 151 173 (fontified t) 173 181 (face font-lock-variable-name-face fontified t) 181 182 (fontified t) 182 183 (face font-lock-operator-face fontified t) 183 208 (fontified t) 208 214 (face font-lock-variable-name-face fontified t) 214 215 (fontified t) 215 216 (face font-lock-operator-face fontified t) 216 230 (fontified t) 230 239 (face font-lock-string-face fontified t) 239 260 (fontified t) 260 266 (face font-lock-keyword-face fontified t) 266 267 (fontified t) 267 277 (face font-lock-builtin-face fontified t) 277 286 (fontified t) 286 290 (face font-lock-builtin-face fontified t) 290 296 (fontified t) 296 302 (face font-lock-keyword-face fontified t) 302 328 (fontified t) 328 331 (face font-lock-keyword-face fontified t) 331 334 (fontified t) 334 336 (face font-lock-keyword-face fontified t) 336 345 (fontified t)) . 1748) (undo-tree-id206 . -291) (undo-tree-id207 . -58) (undo-tree-id208 . -58) (undo-tree-id209 . -58) (undo-tree-id210 . -58) (undo-tree-id211 . -105) (undo-tree-id212 . -58) (undo-tree-id213 . -53) (undo-tree-id214 . -53) (undo-tree-id215 . -58) (undo-tree-id216 . -58) (undo-tree-id217 . -58) (undo-tree-id218 . -58) (undo-tree-id219 . -105) (undo-tree-id220 . -58) (undo-tree-id221 . -53) (undo-tree-id222 . -53) (undo-tree-id223 . -58) (undo-tree-id224 . -58) (undo-tree-id225 . -58) (undo-tree-id226 . -58) (undo-tree-id227 . -105) (undo-tree-id228 . -58) (undo-tree-id229 . -53) (undo-tree-id230 . -53) (undo-tree-id231 . -208) (undo-tree-id232 . -208) (undo-tree-id233 . -217) (undo-tree-id234 . -8) (undo-tree-id235 . -345) (undo-tree-id236 . -8) (undo-tree-id237 . -8) (undo-tree-id238 . -8) (undo-tree-id239 . -8) (undo-tree-id240 . -345) (undo-tree-id241 . -345) 2093 (t 26049 8772 877340 661000)) nil (26049 8852 701618 807000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . -1746) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (#("
" 0 1 (fontified t)) . -1747) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) 1748) nil (26049 8852 701611 638000) 0 nil])
([nil nil ((578 . 582) (#("    " 0 4 (fontified nil)) . 577) (undo-tree-id71 . -4) (undo-tree-id72 . -4) (undo-tree-id73 . -4) (576 . 582)) nil (26049 8852 701487 826000) 0 nil])
([nil nil ((nil rear-nonsticky nil 926 . 927) (nil fontified nil 918 . 927) (nil fontified nil 916 . 918) (nil fontified nil 913 . 916) (nil fontified nil 910 . 913) (nil fontified nil 884 . 910) (nil fontified nil 878 . 884) (nil fontified nil 872 . 878) (nil fontified nil 868 . 872) (nil fontified nil 859 . 868) (nil fontified nil 849 . 859) (nil fontified nil 848 . 849) (nil fontified nil 842 . 848) (nil fontified nil 821 . 842) (nil fontified nil 812 . 821) (nil fontified nil 798 . 812) (nil fontified nil 797 . 798) (nil fontified nil 796 . 797) (nil fontified nil 790 . 796) (nil fontified nil 765 . 790) (nil fontified nil 764 . 765) (nil fontified nil 763 . 764) (nil fontified nil 755 . 763) (nil fontified nil 733 . 755) (nil fontified nil 732 . 733) (nil fontified nil 731 . 732) (nil fontified nil 727 . 731) (nil fontified nil 705 . 727) (nil fontified nil 695 . 705) (nil fontified nil 694 . 695) (nil fontified nil 692 . 694) (nil fontified nil 687 . 692) (nil fontified nil 685 . 687) (nil fontified nil 684 . 685) (nil fontified nil 643 . 684) (nil fontified nil 642 . 643) (nil fontified nil 640 . 642) (nil fontified nil 622 . 640) (nil fontified nil 619 . 622) (nil fontified nil 618 . 619) (nil fontified nil 617 . 618) (nil fontified nil 616 . 617) (nil fontified nil 609 . 616) (nil fontified nil 608 . 609) (nil fontified nil 607 . 608) (nil fontified nil 604 . 607) (nil fontified nil 597 . 604) (nil fontified nil 586 . 597) (nil fontified nil 585 . 586) (nil fontified nil 582 . 585) (582 . 927)) nil (26049 8852 701486 654000) 0 nil])
([nil nil ((577 . 582)) nil (26049 8852 701484 333000) 0 nil])
([nil nil ((582 . 585)) nil (26049 8852 701484 133000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-type-face fontified t)) . -584) (undo-tree-id69 . -1) (undo-tree-id70 . -1) 585) nil (26049 8852 701483 845000) 0 nil])
([nil nil ((584 . 595)) nil (26049 8852 701483 105000) 0 nil])
([nil nil ((641 . 642)) nil (26049 8852 701482 648000) 0 nil])
([nil nil ((652 . 653)) nil (26049 8852 701482 234000) 0 nil])
([nil nil ((918 . 922) (878 . 882) (822 . 826) (783 . 787) (747 . 751) (712 . 716) (656 . 660) 894) nil (26049 8852 701481 513000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -975) (undo-tree-id67 . -1) (undo-tree-id68 . -1) 976) nil (26049 8852 701478 390000) 0 nil])
([nil nil ((641 . 653) (#("'FakeDevice'" 0 12 (face font-lock-string-face fontified t)) . 641) (t 26049 8852 705525 725000)) nil (26049 8895 374742 617000) 0 nil])
([nil nil ((#("devices" 0 7 (face font-lock-function-name-face fontified t)) . 608) (undo-tree-id245 . -7) (t 26049 8853 681528 234000)) nil (26049 8895 374741 835000) 0 nil])
([nil current ((#("_" 0 1 (face font-lock-function-name-face fontified t)) . -607) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) 608) nil (26049 8895 374738 794000) 0 nil])
nil
