(undo-tree-save-format-version . 1)
"f43d796422c54dbc9b5ed437e8a81c9cd4dee2c6"
[nil nil nil nil (26038 46657 641877 134000) 0 nil]
([nil nil ((3085 . 3090) (t 26028 9073 486441 639000)) nil (26038 46657 641876 414000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3086) (undo-tree-id59 . -4) (undo-tree-id60 . -4) (undo-tree-id61 . -4) (undo-tree-id62 . -4) (undo-tree-id63 . -4) 3090) nil (26038 46657 641876 11000) 0 nil])
([nil nil ((3086 . 3102)) nil (26038 46657 641874 665000) 0 nil])
([nil nil ((#("u" 0 1 (face font-lock-function-name-face fontified t)) . -3095) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#("p" 0 1 (face font-lock-function-name-face fontified t)) . -3096) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#("l" 0 1 (face font-lock-function-name-face fontified t)) . -3097) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#("o" 0 1 (face font-lock-function-name-face fontified t)) . -3098) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#("a" 0 1 (face font-lock-function-name-face fontified t)) . -3099) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#("d" 0 1 (face font-lock-function-name-face fontified t)) . -3100) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (#("_" 0 1 (face font-lock-function-name-face fontified t)) . -3101) (undo-tree-id57 . -1) (undo-tree-id58 . -1) 3102) nil (26038 46657 641873 189000) 0 nil])
([nil nil ((3095 . 3108)) nil (26038 46657 641861 191000) 0 nil])
([nil nil ((3108 . 3129)) nil (26038 46657 641921 647000) 0 nil])
([nil nil ((3129 . 3134)) nil (26038 46702 996894 784000) 0 nil] [nil nil ((3131 . 3135) (#("    " 0 4 (fontified nil)) . 3130) (undo-tree-id0 . -4) (undo-tree-id1 . -4) (undo-tree-id2 . -4) (3129 . 3135)) ((#("
    
" 0 1 (fontified t) 1 5 (fontified nil) 5 6 (fontified nil)) . 3129) (undo-tree-id64 . -6) (undo-tree-id65 . -5) (undo-tree-id66 . -5) (undo-tree-id67 . -6) (3130 . 3134) (#("    " 0 4 (fontified t)) . 3131) (undo-tree-id68 . -4)) (26038 46657 641858 516000) 0 nil])
([nil nil ((25 . 26)) nil (26038 46702 996894 446000) 0 nil])
nil
([nil nil ((26 . 40)) nil (26038 46702 996893 976000) 0 nil])
([nil nil ((3149 . 3166)) nil (26038 46702 996893 508000) 0 nil])
([nil nil ((3166 . 3175)) nil (26038 46702 996892 991000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -3165) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) 3166) nil (26038 46702 996892 703000) 0 nil])
([nil nil ((3165 . 3174)) nil (26038 46702 996891 757000) 0 nil])
([nil nil ((3183 . 3187)) nil (26038 46702 996891 376000) 0 nil])
([nil nil ((3189 . 3193) (#("    " 0 4 (fontified nil)) . 3188) (undo-tree-id69 . -4) (undo-tree-id70 . -4) (undo-tree-id71 . -4) (3187 . 3193)) nil (26038 46702 996891 2000) 0 nil])
([nil nil ((3193 . 3196)) nil (26038 46702 996882 280000) 0 nil])
([nil nil ((3196 . 3212)) nil (26038 46702 996881 778000) 0 nil])
([nil nil ((3212 . 3213)) nil (26038 46702 996878 854000) 0 nil])
([nil nil ((1 . 3100) (#("from pathlib import Path
import asyncio

from circuitpython_tool.fs import guess_source_dir, upload, walk


def test_guess_source_dir_empty_dir(tmp_path: Path) -> None:
    assert guess_source_dir(tmp_path) is None


def test_guess_source_dir_code_in_top_dir(tmp_path: Path) -> None:
    (tmp_path / \"code.py\").touch()
    assert guess_source_dir(tmp_path) == tmp_path


def test_guess_source_dir_code_in_sub_dir(tmp_path: Path) -> None:
    subdir = tmp_path / \"a\" / \"b\"
    subdir.mkdir(parents=True)
    (subdir / \"code.py\").touch()

    assert guess_source_dir(tmp_path) == subdir


def test_guess_source_dir_code_txt(tmp_path: Path) -> None:
    (tmp_path / \"code.txt\").touch()
    assert guess_source_dir(tmp_path) == tmp_path


def test_guess_source_dir_main_py(tmp_path: Path) -> None:
    (tmp_path / \"main.py\").touch()
    assert guess_source_dir(tmp_path) == tmp_path


def test_guess_source_dir_main_txt(tmp_path: Path) -> None:
    (tmp_path / \"main.txt\").touch()
    assert guess_source_dir(tmp_path) == tmp_path


def test_guess_source_dir_no_code_file(tmp_path: Path) -> None:
    (tmp_path / \"code.js\").touch()
    assert guess_source_dir(tmp_path) is None


def create_file(base_dir: Path, path_str: str) -> None:
    path = base_dir / path_str
    path.parent.mkdir(exist_ok=True)
    path.touch()


def test_walk(tmp_path: Path) -> None:
    for p in (
        \"file.txt\",
        \"a/file1.txt\",
        \"a/file2.txt\",
        \"a/b/file.txt\",
        \"c/file.txt\",
    ):
        create_file(tmp_path, p)

    # Strip off temporary path prefix for stable output for failure messages and simpler assertions.
    entries = [str(p.relative_to(tmp_path)) for p in walk(tmp_path)]

    assert sorted(entries) == sorted(
        [
            \".\",
            \"file.txt\",
            \"a\",
            \"a/file1.txt\",
            \"a/file2.txt\",
            \"a/b\",
            \"a/b/file.txt\",
            \"c\",
            \"c/file.txt\",
        ]
    )


def test_upload_single_dir(tmp_path: Path) -> None:
    source_dir = tmp_path / \"source_dir\"
    source_dir.mkdir()
    mountpoint = tmp_path / \"mountpoint\"
    mountpoint.mkdir()

    create_file(source_dir, \"top.txt\")
    create_file(source_dir, \"sub/sub.txt\")

    upload([source_dir], mountpoint)

    entries = [str(p.relative_to(mountpoint)) for p in walk(mountpoint) if p.is_file()]

    assert sorted(entries) == sorted(
        [
            \"top.txt\",
            \"sub/sub.txt\",
        ]
    )


def test_upload_multiple_dirs(tmp_path: Path) -> None:
    source_dir_a = tmp_path / \"source_a\"
    source_dir_a.mkdir()
    (source_dir_a / \"a.txt\").touch()

    source_dir_b = tmp_path / \"source_b\"
    source_dir_b.mkdir()
    (source_dir_b / \"b.txt\").touch()

    mountpoint = tmp_path / \"mountpoint\"
    mountpoint.mkdir()

    upload([source_dir_a, source_dir_b], mountpoint)

    entries = [str(p.relative_to(mountpoint)) for p in walk(mountpoint) if p.is_file()]

    # Source directory contents should be merged.
    assert sorted(entries) == sorted(
        [
            \"a.txt\",
            \"b.txt\",
        ]
    )" 0 4 (face font-lock-keyword-face fontified t) 4 13 (fontified t) 13 19 (face font-lock-keyword-face fontified t) 19 25 (fontified t) 25 31 (face font-lock-keyword-face fontified t) 31 32 (fontified t) 32 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 45 (face font-lock-keyword-face fontified t) 45 68 (fontified t) 68 74 (face font-lock-keyword-face fontified t) 74 108 (fontified t) 108 111 (face font-lock-keyword-face fontified t) 111 112 (fontified t) 112 143 (face font-lock-function-name-face fontified t) 143 160 (fontified t) 160 161 (face font-lock-operator-face fontified t) 161 162 (face font-lock-operator-face fontified t) 162 163 (fontified t) 163 167 (face font-lock-constant-face fontified t) 167 173 (fontified t) 173 179 (face font-lock-keyword-face fontified t) 179 207 (fontified t) 207 209 (face font-lock-keyword-face fontified t) 209 210 (fontified t) 210 214 (face font-lock-constant-face fontified t) 214 217 (fontified t) 217 220 (face font-lock-keyword-face fontified t) 220 221 (fontified t) 221 258 (face font-lock-function-name-face fontified t) 258 275 (fontified t) 275 276 (face font-lock-operator-face fontified t) 276 277 (face font-lock-operator-face fontified t) 277 278 (fontified t) 278 282 (face font-lock-constant-face fontified t) 282 298 (fontified t) 298 299 (face font-lock-operator-face fontified t) 299 300 (fontified t) 300 309 (face font-lock-string-face fontified t) 309 323 (fontified t) 323 329 (face font-lock-keyword-face fontified t) 329 357 (fontified t) 357 359 (face font-lock-operator-face fontified t) 359 371 (fontified t) 371 374 (face font-lock-keyword-face fontified t) 374 375 (fontified t) 375 412 (face font-lock-function-name-face fontified t) 412 429 (fontified t) 429 430 (face font-lock-operator-face fontified t) 430 431 (face font-lock-operator-face fontified t) 431 432 (fontified t) 432 436 (face font-lock-constant-face fontified t) 436 442 (fontified t) 442 448 (face font-lock-variable-name-face fontified t) 448 449 (fontified t) 449 450 (face font-lock-operator-face fontified t) 450 460 (fontified t) 460 461 (face font-lock-operator-face fontified t) 461 462 (fontified t) 462 465 (face font-lock-string-face fontified t) 465 466 (fontified t) 466 467 (face font-lock-operator-face fontified t) 467 468 (fontified t) 468 471 (face font-lock-string-face fontified t) 471 496 (fontified t) 496 497 (face font-lock-operator-face fontified t) 497 501 (face font-lock-constant-face fontified t) 501 515 (fontified t) 515 516 (face font-lock-operator-face fontified t) 516 517 (fontified t) 517 526 (face font-lock-string-face fontified t) 526 541 (fontified t) 541 547 (face font-lock-keyword-face fontified t) 547 575 (fontified t) 575 577 (face font-lock-operator-face fontified t) 577 587 (fontified t) 587 590 (face font-lock-keyword-face fontified t) 590 591 (fontified t) 591 621 (face font-lock-function-name-face fontified t) 621 638 (fontified t) 638 639 (face font-lock-operator-face fontified t) 639 640 (face font-lock-operator-face fontified t) 640 641 (fontified t) 641 645 (face font-lock-constant-face fontified t) 645 661 (fontified t) 661 662 (face font-lock-operator-face fontified t) 662 663 (fontified t) 663 673 (face font-lock-string-face fontified t) 673 687 (fontified t) 687 693 (face font-lock-keyword-face fontified t) 693 721 (fontified t) 721 723 (face font-lock-operator-face fontified t) 723 735 (fontified t) 735 738 (face font-lock-keyword-face fontified t) 738 739 (fontified t) 739 768 (face font-lock-function-name-face fontified t) 768 785 (fontified t) 785 786 (face font-lock-operator-face fontified t) 786 787 (face font-lock-operator-face fontified t) 787 788 (fontified t) 788 792 (face font-lock-constant-face fontified t) 792 808 (fontified t) 808 809 (face font-lock-operator-face fontified t) 809 810 (fontified t) 810 819 (face font-lock-string-face fontified t) 819 833 (fontified t) 833 839 (face font-lock-keyword-face fontified t) 839 867 (fontified t) 867 869 (face font-lock-operator-face fontified t) 869 881 (fontified t) 881 884 (face font-lock-keyword-face fontified t) 884 885 (fontified t) 885 915 (face font-lock-function-name-face fontified t) 915 932 (fontified t) 932 933 (face font-lock-operator-face fontified t) 933 934 (face font-lock-operator-face fontified t) 934 935 (fontified t) 935 939 (face font-lock-constant-face fontified t) 939 955 (fontified t) 955 956 (face font-lock-operator-face fontified t) 956 957 (fontified t) 957 967 (face font-lock-string-face fontified t) 967 981 (fontified t) 981 987 (face font-lock-keyword-face fontified t) 987 1015 (fontified t) 1015 1017 (face font-lock-operator-face fontified t) 1017 1029 (fontified t) 1029 1032 (face font-lock-keyword-face fontified t) 1032 1033 (fontified t) 1033 1067 (face font-lock-function-name-face fontified t) 1067 1084 (fontified t) 1084 1085 (face font-lock-operator-face fontified t) 1085 1086 (face font-lock-operator-face fontified t) 1086 1087 (fontified t) 1087 1091 (face font-lock-constant-face fontified t) 1091 1107 (fontified t) 1107 1108 (face font-lock-operator-face fontified t) 1108 1109 (fontified t) 1109 1118 (face font-lock-string-face fontified t) 1118 1132 (fontified t) 1132 1138 (face font-lock-keyword-face fontified t) 1138 1166 (fontified t) 1166 1168 (face font-lock-keyword-face fontified t) 1168 1169 (fontified t) 1169 1173 (face font-lock-constant-face fontified t) 1173 1176 (fontified t) 1176 1179 (face font-lock-keyword-face fontified t) 1179 1180 (fontified t) 1180 1191 (face font-lock-function-name-face fontified t) 1191 1218 (fontified t) 1218 1221 (face font-lock-builtin-face fontified t) 1221 1223 (fontified t) 1223 1224 (face font-lock-operator-face fontified t) 1224 1225 (face font-lock-operator-face fontified t) 1225 1226 (fontified t) 1226 1230 (face font-lock-constant-face fontified t) 1230 1236 (fontified t) 1236 1240 (face font-lock-variable-name-face fontified t) 1240 1241 (fontified t) 1241 1242 (face font-lock-operator-face fontified t) 1242 1252 (fontified t) 1252 1253 (face font-lock-operator-face fontified t) 1253 1293 (fontified t) 1293 1294 (face font-lock-operator-face fontified t) 1294 1298 (face font-lock-constant-face fontified t) 1298 1319 (fontified t) 1319 1322 (face font-lock-keyword-face fontified t) 1322 1323 (fontified t) 1323 1332 (face font-lock-function-name-face fontified t) 1332 1349 (fontified t) 1349 1350 (face font-lock-operator-face fontified t) 1350 1351 (face font-lock-operator-face fontified t) 1351 1352 (fontified t) 1352 1356 (face font-lock-constant-face fontified t) 1356 1362 (fontified t) 1362 1365 (face font-lock-keyword-face fontified t) 1365 1368 (fontified t) 1368 1370 (face font-lock-keyword-face fontified t) 1370 1381 (fontified t) 1381 1391 (face font-lock-string-face fontified t) 1391 1401 (fontified t) 1401 1414 (face font-lock-string-face fontified t) 1414 1424 (fontified t) 1424 1437 (face font-lock-string-face fontified t) 1437 1447 (fontified t) 1447 1461 (face font-lock-string-face fontified t) 1461 1471 (fontified t) 1471 1483 (face font-lock-string-face fontified t) 1483 1515 (fontified t) 1515 1525 (fontified t) 1525 1530 (fontified t) 1530 1532 (face font-lock-comment-delimiter-face fontified t) 1532 1540 (face font-lock-comment-face fontified t) 1540 1627 (fontified t face font-lock-comment-face) 2271 2278 (face font-lock-variable-name-face) 2279 2280 (face font-lock-operator-face) 2282 2285 (face font-lock-builtin-face) 2313 2316 (face font-lock-keyword-face) 2319 2321 (face font-lock-keyword-face) 2339 2341 (face font-lock-keyword-face) 2356 2360 (fontified t) 2360 2366 (face font-lock-keyword-face fontified t) 2366 2367 (fontified t) 2367 2373 (face font-lock-builtin-face fontified t) 2373 2383 (fontified t) 2383 2385 (face font-lock-operator-face fontified t) 2385 2386 (fontified t) 2386 2392 (face font-lock-builtin-face fontified t) 2392 2394 (fontified t) 2394 2416 (fontified t) 2416 2425 (face font-lock-string-face fontified t) 2425 2439 (fontified t) 2439 2452 (face font-lock-string-face fontified t) 2452 2472 (fontified t) 2472 2475 (face font-lock-keyword-face fontified t) 2475 2476 (fontified t) 2476 2501 (face font-lock-function-name-face fontified t) 2501 2518 (fontified t) 2518 2519 (face font-lock-operator-face fontified t) 2519 2520 (face font-lock-operator-face fontified t) 2520 2521 (fontified t) 2521 2525 (face font-lock-constant-face fontified t) 2525 2531 (fontified t) 2531 2543 (face font-lock-variable-name-face fontified t) 2543 2544 (fontified t) 2544 2545 (face font-lock-operator-face fontified t) 2545 2555 (fontified t) 2555 2556 (face font-lock-operator-face fontified t) 2556 2557 (fontified t) 2557 2567 (face font-lock-string-face fontified t) 2567 2611 (fontified t) 2611 2612 (face font-lock-operator-face fontified t) 2612 2613 (fontified t) 2613 2620 (face font-lock-string-face fontified t) 2620 2635 (fontified t) 2635 2647 (face font-lock-variable-name-face fontified t) 2647 2648 (fontified t) 2648 2649 (face font-lock-operator-face fontified t) 2649 2659 (fontified t) 2659 2660 (face font-lock-operator-face fontified t) 2660 2661 (fontified t) 2661 2671 (face font-lock-string-face fontified t) 2671 2715 (fontified t) 2715 2716 (face font-lock-operator-face fontified t) 2716 2717 (fontified t) 2717 2724 (face font-lock-string-face fontified t) 2724 2739 (fontified t) 2739 2749 (face font-lock-variable-name-face fontified t) 2749 2750 (fontified t) 2750 2751 (face font-lock-operator-face fontified t) 2751 2761 (fontified t) 2761 2762 (face font-lock-operator-face fontified t) 2762 2763 (fontified t) 2763 2775 (face font-lock-string-face fontified t) 2775 2858 (fontified t) 2858 2865 (face font-lock-variable-name-face fontified t) 2865 2866 (fontified t) 2866 2867 (face font-lock-operator-face fontified t) 2867 2869 (fontified t) 2869 2872 (face font-lock-builtin-face fontified t) 2872 2900 (fontified t) 2900 2903 (face font-lock-keyword-face fontified t) 2903 2906 (fontified t) 2906 2908 (face font-lock-keyword-face fontified t) 2908 2926 (fontified t) 2926 2928 (face font-lock-keyword-face fontified t) 2928 2947 (fontified t) 2947 2949 (face font-lock-comment-delimiter-face fontified t) 2949 2993 (face font-lock-comment-face fontified t) 2993 2997 (fontified t) 2997 3003 (face font-lock-keyword-face fontified t) 3003 3004 (fontified t) 3004 3010 (face font-lock-builtin-face fontified t) 3010 3020 (fontified t) 3020 3022 (face font-lock-operator-face fontified t) 3022 3023 (fontified t) 3023 3029 (face font-lock-builtin-face fontified t) 3029 3053 (fontified t) 3053 3060 (face font-lock-string-face fontified t) 3060 3074 (fontified t) 3074 3081 (face font-lock-string-face fontified t) 3081 3093 (fontified t) 3093 3098 (fontified t)) . 1) (undo-tree-id399 . -2776) (undo-tree-id400 . -39) 3187 (t 26038 46702 995852 312000)) nil (26038 46867 382217 885000) 0 nil])
([nil nil ((3145 . 3150) (t 26038 46704 27873 790000)) nil (26038 46867 382216 881000) 0 nil])
([nil nil ((3150 . 3152)) nil (26038 46867 382216 452000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -3150) (undo-tree-id397 . -1) (#("w" 0 1 (fontified t)) . -3151) (undo-tree-id398 . -1) 3152) nil (26038 46867 382215 981000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3146) (undo-tree-id396 . -4) 3150) nil (26038 46867 382214 935000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3145) (undo-tree-id395 . -1) 3146) nil (26038 46867 382214 456000) 0 nil])
([nil nil ((3145 . 3150)) nil (26038 46867 382214 33000) 0 nil])
([nil nil ((3150 . 3171)) nil (26038 46867 382213 859000) 0 nil])
([nil nil ((3171 . 3172)) nil (26038 46867 382213 738000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-string-face fontified t)) . -3171) (undo-tree-id394 . -1) 3172) nil (26038 46867 382213 484000) 0 nil])
([nil nil ((3171 . 3174)) nil (26038 46867 382213 67000) 0 nil])
([nil nil ((3174 . 3179)) nil (26038 46867 382212 953000) 0 nil])
([nil nil ((3179 . 3189)) nil (26038 46867 382212 835000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -3187) (undo-tree-id392 . -1) (#("r" 0 1 (fontified t)) . -3188) (undo-tree-id393 . -1) 3189) nil (26038 46867 382212 650000) 0 nil])
([nil nil ((3187 . 3191)) nil (26038 46867 382212 80000) 0 nil])
([nil nil ((#("        pass" 0 8 (fontified t) 8 12 (face font-lock-keyword-face fontified t)) . 3222)) nil (26038 46867 382211 950000) 0 nil])
([nil nil ((3222 . 3230)) nil (26038 46867 382211 828000) 0 nil])
([nil nil ((3230 . 3233)) nil (26038 46867 382211 712000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -3230) (undo-tree-id389 . -1) (#("v" 0 1 (fontified t)) . -3231) (undo-tree-id390 . -1) (#("e" 0 1 (fontified t)) . -3232) (undo-tree-id391 . -1) 3233) nil (26038 46867 382211 386000) 0 nil])
([nil nil ((3230 . 3231)) nil (26038 46867 382210 471000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -3230) (undo-tree-id388 . -1) 3231) nil (26038 46867 382210 258000) 0 nil])
([nil nil ((3230 . 3235)) nil (26038 46867 382209 211000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -3230) (undo-tree-id383 . -1) (#("a" 0 1 (fontified t)) . -3231) (undo-tree-id384 . -1) (#("t" 0 1 (fontified t)) . -3232) (undo-tree-id385 . -1) (#("c" 0 1 (fontified t)) . -3233) (undo-tree-id386 . -1) (#("h" 0 1 (fontified t)) . -3234) (undo-tree-id387 . -1) 3235) nil (26038 46867 382208 814000) 0 nil])
([nil nil ((3230 . 3235)) nil (26038 46867 382203 308000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -3230) (undo-tree-id378 . -1) (#("a" 0 1 (fontified t)) . -3231) (undo-tree-id379 . -1) (#("t" 0 1 (fontified t)) . -3232) (undo-tree-id380 . -1) (#("c" 0 1 (fontified t)) . -3233) (undo-tree-id381 . -1) (#("h" 0 1 (fontified t)) . -3234) (undo-tree-id382 . -1) 3235) nil (26038 46867 382202 911000) 0 nil])
([nil nil ((3230 . 3233)) nil (26038 46867 382201 738000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -3232) (undo-tree-id377 . -1) 3233) nil (26038 46867 382201 587000) 0 nil])
([nil nil ((3232 . 3244)) nil (26038 46867 382201 261000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -3243) (undo-tree-id376 . -1) 3244) nil (26038 46867 382201 115000) 0 nil])
([nil nil ((3243 . 3257)) nil (26038 46867 382200 760000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -3254) (undo-tree-id373 . -1) (#("m" 0 1 (fontified t)) . -3255) (undo-tree-id374 . -1) (#("p" 0 1 (fontified t)) . -3256) (undo-tree-id375 . -1) 3257) nil (26038 46867 382200 436000) 0 nil])
([nil nil ((3254 . 3258)) nil (26038 46867 382199 312000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . -3254) (undo-tree-id369 . -1) (#("r" 0 1 (fontified t)) . -3255) (undo-tree-id370 . -1) (#("p" 0 1 (fontified t)) . -3256) (undo-tree-id371 . -1) (#("p" 0 1 (fontified t)) . -3257) (undo-tree-id372 . -1) 3258) nil (26038 46867 382199 45000) 0 nil])
([nil nil ((3254 . 3265)) nil (26038 46867 382198 38000) 0 nil])
([nil nil ((3265 . 3275)) nil (26038 46867 382197 921000) 0 nil])
([nil nil ((3275 . 3284)) nil (26038 46867 382197 794000) 0 nil])
([nil nil ((3284 . 3286)) nil (26038 46867 382197 668000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -3284) (undo-tree-id367 . -1) (#("o" 0 1 (fontified t)) . -3285) (undo-tree-id368 . -1) 3286) nil (26038 46867 382197 279000) 0 nil])
([nil nil ((3284 . 3301)) nil (26038 46867 382195 946000) 0 nil])
([nil nil ((#("async.wait(" 0 11 (fontified t)) . 3290)) nil (26038 46867 382195 761000) 0 nil])
([nil nil ((3290 . 3295)) nil (26038 46867 382195 528000) 0 nil])
([nil nil ((3275 . 3284)) nil (26038 46867 382195 323000) 0 nil])
([nil nil ((3284 . 3292)) nil (26038 46867 382194 918000) 0 nil])
([nil nil ((3284 . 3285)) nil (26038 46867 382194 721000) 0 nil])
([nil nil ((3293 . 3296)) nil (26038 46867 382194 511000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-string-face fontified t)) . -3293) (undo-tree-id364 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -3294) (undo-tree-id365 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -3295) (undo-tree-id366 . -1) 3296) nil (26038 46867 382194 94000) 0 nil])
([nil nil ((3293 . 3303)) nil (26038 46867 382193 377000) 0 nil])
([nil nil ((#("file" 0 4 (face font-lock-string-face fontified t)) . 3293)) nil (26038 46867 382193 237000) 0 nil])
([nil nil ((3293 . 3294)) nil (26038 46867 382193 5000) 0 nil])
([nil nil ((3300 . 3307)) nil (26038 46867 382192 604000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -3302) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (#("e" 0 1 (fontified t)) . -3303) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (#("a" 0 1 (fontified t)) . -3304) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (#("t" 0 1 (fontified t)) . -3305) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (#("e" 0 1 (fontified t)) . -3306) (undo-tree-id362 . -1) (undo-tree-id363 . -1) 3307) nil (26038 46867 382192 51000) 0 nil])
([nil nil ((3302 . 3303)) nil (26038 46867 382186 755000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -3301) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (#("t" 0 1 (fontified t)) . -3302) (undo-tree-id332 . -1) (undo-tree-id333 . -1) 3303) nil (26038 46867 382186 261000) 0 nil])
([nil nil ((3301 . 3308)) nil (26038 46867 382182 787000) 0 nil])
([nil nil ((#("(root / \"a.txt\").touch()" 0 6 (fontified t) 6 7 (face font-lock-operator-face fontified t) 7 8 (fontified t) 8 15 (face font-lock-string-face fontified t) 15 24 (fontified t)) . 3284) (undo-tree-id296 . -17) (undo-tree-id297 . -17) (undo-tree-id298 . -17) (undo-tree-id299 . -17) (undo-tree-id300 . -17) (undo-tree-id301 . -17) (undo-tree-id302 . -17) (undo-tree-id303 . -17) (undo-tree-id304 . -17) (undo-tree-id305 . -17) (undo-tree-id306 . -17) (undo-tree-id307 . -17) (undo-tree-id308 . -17) (undo-tree-id309 . -17) (undo-tree-id310 . -18) (undo-tree-id311 . -19) (undo-tree-id312 . -20) (undo-tree-id313 . -21) (undo-tree-id314 . -22) (undo-tree-id315 . -23) (undo-tree-id316 . -24) (undo-tree-id317 . -24)) nil (26038 46867 382182 411000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3307 . 3308) (nil fontified nil 3299 . 3308) (nil fontified nil 3292 . 3299) (nil fontified nil 3291 . 3292) (nil fontified nil 3290 . 3291) (nil fontified nil 3284 . 3290) (3284 . 3308)) nil (26038 46867 382178 88000) 0 nil])
([nil nil ((3308 . 3317)) nil (26038 46867 382177 656000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3340 . 3341) (nil fontified nil 3332 . 3341) (nil fontified nil 3325 . 3332) (nil fontified nil 3324 . 3325) (nil fontified nil 3323 . 3324) (nil fontified nil 3317 . 3323) (3317 . 3341)) nil (26038 46867 382177 467000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-string-face fontified t)) . -3326) (undo-tree-id294 . -1) (undo-tree-id295 . -1) 3327) nil (26038 46867 382176 900000) 0 nil])
([nil nil ((3326 . 3327)) nil (26038 46867 382176 136000) 0 nil])
([nil nil ((#("        event_iter = watch_all2([root], read_delay=0)" 0 8 (fontified t) 8 18 (face font-lock-variable-name-face fontified t) 18 19 (fontified t) 19 20 (face font-lock-operator-face fontified t) 20 50 (fontified t) 50 51 (face font-lock-operator-face fontified t) 51 53 (fontified t)) . 3222) (undo-tree-id290 . -8) (undo-tree-id291 . -8) (undo-tree-id292 . -32) (undo-tree-id293 . -53)) nil (26038 46867 382175 913000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3221) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) 3222) nil (26038 46868 727164 950000) 0 nil])
([nil nil ((3145 . 3150)) nil (26038 46870 673760 827000) 0 nil] [nil nil ((#("Path) -> None:
    root = tmp_path / \"root\"
    root.mkdir()
    async def body() -> None:
        (root / \"a.txt\").touch()
        (root / \"b.txt\").touch()" 0 6 (fontified t) 6 7 (face font-lock-operator-face fontified t) 7 8 (face font-lock-operator-face fontified t) 8 9 (fontified t) 9 13 (face font-lock-constant-face fontified t) 13 15 (fontified t) 15 19 (fontified t) 19 23 (face font-lock-variable-name-face fontified t) 23 24 (fontified t) 24 25 (face font-lock-operator-face fontified t) 25 35 (fontified t) 35 36 (face font-lock-operator-face fontified t) 36 37 (fontified t) 37 43 (face font-lock-string-face fontified t) 43 44 (fontified t) 44 60 (fontified t) 60 61 (fontified t) 61 65 (fontified t) 65 74 (face font-lock-keyword-face fontified t) 74 75 (fontified t) 75 79 (face font-lock-function-name-face fontified t) 79 82 (fontified t) 82 83 (face font-lock-operator-face fontified t) 83 84 (face font-lock-operator-face fontified t) 84 85 (fontified t) 85 89 (face font-lock-constant-face fontified t) 89 90 (fontified t) 90 91 (fontified t) 91 99 (fontified t) 99 105 (fontified t) 105 106 (face font-lock-operator-face fontified t) 106 107 (fontified t) 107 114 (face font-lock-string-face fontified t) 114 122 (fontified t) 122 123 (rear-nonsticky t fontified t) 123 124 (fontified t) 124 132 (fontified t) 132 138 (fontified t) 138 139 (face font-lock-operator-face fontified t) 139 140 (fontified t) 140 147 (face font-lock-string-face fontified t) 147 155 (fontified t) 155 156 (rear-nonsticky t fontified t)) . 3131) (undo-tree-id404 . -156) (undo-tree-id405 . -65) (undo-tree-id406 . -99) (undo-tree-id407 . -99) (undo-tree-id408 . -99) (undo-tree-id409 . -99) (undo-tree-id410 . -99) (undo-tree-id411 . -99) (undo-tree-id412 . -99) (undo-tree-id413 . -99) (undo-tree-id414 . -99) (undo-tree-id415 . -99) (undo-tree-id416 . -99) (undo-tree-id417 . -99) (undo-tree-id418 . -99) (undo-tree-id419 . -99) (undo-tree-id420 . -99) (undo-tree-id421 . -99) (undo-tree-id422 . -99) (undo-tree-id423 . -99) (undo-tree-id424 . -99) (undo-tree-id425 . -99) (undo-tree-id426 . -99) (undo-tree-id427 . -99) (undo-tree-id428 . -99) (undo-tree-id429 . -99) (undo-tree-id430 . -99) (undo-tree-id431 . -99) (undo-tree-id432 . -99) (undo-tree-id433 . -99) (undo-tree-id434 . -99) (undo-tree-id435 . -99) (undo-tree-id436 . -99) (undo-tree-id437 . -99) (undo-tree-id438 . -99) (undo-tree-id439 . -99) (undo-tree-id440 . -99) (undo-tree-id441 . -99) (undo-tree-id442 . -99) (undo-tree-id443 . -99) (undo-tree-id444 . -99) (undo-tree-id445 . -99) (undo-tree-id446 . -99) (undo-tree-id447 . -99) (undo-tree-id448 . -99) (undo-tree-id449 . -99) (undo-tree-id450 . -99) (undo-tree-id451 . -99) (undo-tree-id452 . -99) (undo-tree-id453 . -99) (undo-tree-id454 . -99) (undo-tree-id455 . -99) (undo-tree-id456 . -99) (undo-tree-id457 . -99) (undo-tree-id458 . -99) (undo-tree-id459 . -99) (undo-tree-id460 . -99) (undo-tree-id461 . -99) (undo-tree-id462 . -99) (undo-tree-id463 . -99) (undo-tree-id464 . -99) (undo-tree-id465 . -99) (undo-tree-id466 . -99) (undo-tree-id467 . -99) (undo-tree-id468 . -99) (undo-tree-id469 . -91) (undo-tree-id470 . -99) (undo-tree-id471 . -90) (undo-tree-id472 . -90) (undo-tree-id473 . -99) (undo-tree-id474 . -99) (undo-tree-id475 . -99) (undo-tree-id476 . -99) (undo-tree-id477 . -99) (undo-tree-id478 . -123) (undo-tree-id479 . 33) (undo-tree-id480 . -124) (undo-tree-id481 . -99) (undo-tree-id482 . -99) (undo-tree-id483 . -132) (undo-tree-id484 . -99) (undo-tree-id485 . -99) (undo-tree-id486 . -132) (undo-tree-id487 . -99) (undo-tree-id488 . -132) (undo-tree-id489 . -132) (undo-tree-id490 . -132) (undo-tree-id491 . -137) (undo-tree-id492 . -141) (undo-tree-id493 . -132) (undo-tree-id494 . -132) (undo-tree-id495 . -141) (undo-tree-id496 . -132) (undo-tree-id497 . -132) (undo-tree-id498 . -142) (undo-tree-id499 . -156) (undo-tree-id500 . -90) (undo-tree-id501 . -60) (undo-tree-id502 . -90) (undo-tree-id503 . -90) (undo-tree-id504 . -90) (undo-tree-id505 . -90) (undo-tree-id506 . -60) (undo-tree-id507 . -43) (undo-tree-id508 . -19) (undo-tree-id509 . -19) (undo-tree-id510 . -26) (undo-tree-id511 . -99) (undo-tree-id512 . -99) (undo-tree-id513 . -132) (undo-tree-id514 . -132)) ((3131 . 3287)) (26038 46868 727090 259000) 0 nil] [nil nil ((#("Path) -> None:
    root = tmp_path / \"root\"
    root.mkdir()
    async def body() -> None:
        (root / \"a.txt\").touch()
        (root / \"b.txt\").touch()" 0 6 (fontified t) 6 7 (face font-lock-operator-face fontified t) 7 8 (face font-lock-operator-face fontified t) 8 9 (fontified t) 9 13 (face font-lock-constant-face fontified t) 13 15 (fontified t) 15 19 (fontified t) 19 23 (face font-lock-variable-name-face fontified t) 23 24 (fontified t) 24 25 (face font-lock-operator-face fontified t) 25 35 (fontified t) 35 36 (face font-lock-operator-face fontified t) 36 37 (fontified t) 37 43 (face font-lock-string-face fontified t) 43 44 (fontified t) 44 60 (fontified t) 60 61 (fontified t) 61 65 (fontified t) 65 74 (face font-lock-keyword-face fontified t) 74 75 (fontified t) 75 79 (face font-lock-function-name-face fontified t) 79 82 (fontified t) 82 83 (face font-lock-operator-face fontified t) 83 84 (face font-lock-operator-face fontified t) 84 85 (fontified t) 85 89 (face font-lock-constant-face fontified t) 89 90 (fontified t) 90 91 (fontified t) 91 99 (fontified t) 99 105 (fontified t) 105 106 (face font-lock-operator-face fontified t) 106 107 (fontified t) 107 114 (face font-lock-string-face fontified t) 114 122 (fontified t) 122 123 (rear-nonsticky t fontified t) 123 124 (fontified t) 124 132 (fontified t) 132 138 (fontified t) 138 139 (face font-lock-operator-face fontified t) 139 140 (fontified t) 140 147 (face font-lock-string-face fontified t) 147 155 (fontified t) 155 156 (rear-nonsticky t fontified t)) . 3131) (undo-tree-id180 . -156) (undo-tree-id181 . -65) (undo-tree-id182 . -99) (undo-tree-id183 . -99) (undo-tree-id184 . -99) (undo-tree-id185 . -99) (undo-tree-id186 . -99) (undo-tree-id187 . -99) (undo-tree-id188 . -99) (undo-tree-id189 . -99) (undo-tree-id190 . -99) (undo-tree-id191 . -99) (undo-tree-id192 . -99) (undo-tree-id193 . -99) (undo-tree-id194 . -99) (undo-tree-id195 . -99) (undo-tree-id196 . -99) (undo-tree-id197 . -99) (undo-tree-id198 . -99) (undo-tree-id199 . -99) (undo-tree-id200 . -99) (undo-tree-id201 . -99) (undo-tree-id202 . -99) (undo-tree-id203 . -99) (undo-tree-id204 . -99) (undo-tree-id205 . -99) (undo-tree-id206 . -99) (undo-tree-id207 . -99) (undo-tree-id208 . -99) (undo-tree-id209 . -99) (undo-tree-id210 . -99) (undo-tree-id211 . -99) (undo-tree-id212 . -99) (undo-tree-id213 . -99) (undo-tree-id214 . -99) (undo-tree-id215 . -99) (undo-tree-id216 . -99) (undo-tree-id217 . -99) (undo-tree-id218 . -99) (undo-tree-id219 . -99) (undo-tree-id220 . -99) (undo-tree-id221 . -99) (undo-tree-id222 . -99) (undo-tree-id223 . -99) (undo-tree-id224 . -99) (undo-tree-id225 . -99) (undo-tree-id226 . -99) (undo-tree-id227 . -99) (undo-tree-id228 . -99) (undo-tree-id229 . -99) (undo-tree-id230 . -99) (undo-tree-id231 . -99) (undo-tree-id232 . -99) (undo-tree-id233 . -99) (undo-tree-id234 . -99) (undo-tree-id235 . -99) (undo-tree-id236 . -99) (undo-tree-id237 . -99) (undo-tree-id238 . -99) (undo-tree-id239 . -99) (undo-tree-id240 . -99) (undo-tree-id241 . -99) (undo-tree-id242 . -99) (undo-tree-id243 . -99) (undo-tree-id244 . -99) (undo-tree-id245 . -91) (undo-tree-id246 . -99) (undo-tree-id247 . -90) (undo-tree-id248 . -90) (undo-tree-id249 . -99) (undo-tree-id250 . -99) (undo-tree-id251 . -99) (undo-tree-id252 . -99) (undo-tree-id253 . -99) (undo-tree-id254 . -123) (undo-tree-id255 . 33) (undo-tree-id256 . -124) (undo-tree-id257 . -99) (undo-tree-id258 . -99) (undo-tree-id259 . -132) (undo-tree-id260 . -99) (undo-tree-id261 . -99) (undo-tree-id262 . -132) (undo-tree-id263 . -99) (undo-tree-id264 . -132) (undo-tree-id265 . -132) (undo-tree-id266 . -132) (undo-tree-id267 . -137) (undo-tree-id268 . -141) (undo-tree-id269 . -132) (undo-tree-id270 . -132) (undo-tree-id271 . -141) (undo-tree-id272 . -132) (undo-tree-id273 . -132) (undo-tree-id274 . -142) (undo-tree-id275 . -156) (undo-tree-id276 . -90) (undo-tree-id277 . -60) (undo-tree-id278 . -90) (undo-tree-id279 . -90) (undo-tree-id280 . -90) (undo-tree-id281 . -90) (undo-tree-id282 . -60) (undo-tree-id283 . -43)) ((3131 . 3287)) (26038 46867 382299 90000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3202 . 3203) (nil fontified nil 3150 . 3203) (3150 . 3203)) nil (26038 46989 954819 942000) 0 nil] [nil nil ((nil fontified nil 3305 . 3306) (nil fontified nil 3297 . 3305) (nil fontified nil 3290 . 3297) (nil fontified nil 3289 . 3290) (nil fontified nil 3288 . 3289) (nil fontified nil 3282 . 3288) (nil fontified nil 3274 . 3282) (nil fontified nil 3273 . 3274) (nil fontified nil 3272 . 3273) (nil fontified nil 3264 . 3272) (nil fontified nil 3257 . 3264) (nil fontified nil 3256 . 3257) (nil fontified nil 3255 . 3256) (nil fontified nil 3249 . 3255) (nil fontified nil 3241 . 3249) (nil fontified nil 3240 . 3241) (nil fontified nil 3239 . 3240) (nil fontified nil 3235 . 3239) (nil fontified nil 3234 . 3235) (nil fontified nil 3233 . 3234) (nil fontified nil 3232 . 3233) (nil fontified nil 3229 . 3232) (nil fontified nil 3225 . 3229) (nil fontified nil 3224 . 3225) (nil fontified nil 3215 . 3224) (nil fontified nil 3211 . 3215) (nil fontified nil 3210 . 3211) (nil fontified nil 3194 . 3210) (nil fontified nil 3193 . 3194) (nil fontified nil 3187 . 3193) (nil fontified nil 3186 . 3187) (nil fontified nil 3185 . 3186) (nil fontified nil 3175 . 3185) (nil fontified nil 3174 . 3175) (nil fontified nil 3173 . 3174) (nil fontified nil 3169 . 3173) (nil fontified nil 3165 . 3169) (nil fontified nil 3163 . 3165) (nil fontified nil 3159 . 3163) (nil fontified nil 3158 . 3159) (nil fontified nil 3157 . 3158) (nil fontified nil 3156 . 3157) (nil fontified nil 3150 . 3156) (3150 . 3306)) ((#("Path) -> None:
    root = tmp_path / \"root\"
    root.mkdir()
    async def body() -> None:
        (root / \"a.txt\").touch()
        (root / \"b.txt\").touch()" 0 6 (fontified nil) 6 7 (face font-lock-operator-face fontified nil) 7 8 (face font-lock-operator-face fontified nil) 8 9 (fontified nil) 9 13 (face font-lock-constant-face fontified nil) 13 15 (fontified nil) 15 19 (fontified nil) 19 23 (face font-lock-variable-name-face fontified nil) 23 24 (fontified nil) 24 25 (face font-lock-operator-face fontified nil) 25 35 (fontified nil) 35 36 (face font-lock-operator-face fontified nil) 36 37 (fontified nil) 37 43 (face font-lock-string-face fontified nil) 43 44 (fontified nil) 44 60 (fontified nil) 60 61 (fontified nil) 61 65 (fontified nil) 65 74 (face font-lock-keyword-face fontified nil) 74 75 (fontified nil) 75 79 (face font-lock-function-name-face fontified nil) 79 82 (fontified nil) 82 83 (face font-lock-operator-face fontified nil) 83 84 (face font-lock-operator-face fontified nil) 84 85 (fontified nil) 85 89 (face font-lock-constant-face fontified nil) 89 90 (fontified nil) 90 91 (fontified nil) 91 99 (fontified nil) 99 105 (fontified nil) 105 106 (face font-lock-operator-face fontified nil) 106 107 (fontified nil) 107 114 (face font-lock-string-face fontified nil) 114 122 (fontified nil) 122 123 (fontified nil rear-nonsticky t) 123 124 (fontified nil) 124 132 (fontified nil) 132 138 (fontified nil) 138 139 (face font-lock-operator-face fontified nil) 139 140 (fontified nil) 140 147 (face font-lock-string-face fontified nil) 147 155 (fontified nil) 155 156 (fontified nil rear-nonsticky t)) . 3150) (undo-tree-id515 . -156) (undo-tree-id516 . -124) (nil fontified t 3163 . 3165) (nil fontified t 3193 . 3194) (nil fontified t 3210 . 3211) (nil fontified t 3240 . 3241) (nil fontified t 3273 . 3274) (nil fontified t 3305 . 3306)) (26038 46870 673649 500000) 0 nil])
nil
([nil nil ((3131 . 3150) (#(" " 0 1 (fontified nil)) . 3130) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (3131 . 3132)) ((#("
" 0 1 (fontified nil)) . 3131) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (3130 . 3131) (#("                   " 0 19 (fontified t)) . 3131) (undo-tree-id403 . -19)) (26038 46867 382142 35000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -3150) 3146) nil (26038 46989 954819 624000) 0 nil])
nil
nil
([nil nil ((#("event" 0 5 (face font-lock-variable-name-face fontified t)) . 3150)) nil (26038 46989 954819 457000) 0 nil])
([nil nil ((#("_iter" 0 5 (face font-lock-variable-name-face fontified t)) . 3150)) nil (26038 46989 954819 322000) 0 nil])
([nil nil ((3150 . 3151)) nil (26038 46989 954819 192000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-variable-name-face fontified t)) . -3150) (undo-tree-id604 . -1) 3151) nil (26038 46989 954819 45000) 0 nil])
([nil nil ((3150 . 3163)) nil (26038 46989 954818 722000) 0 nil])
([nil nil ((#("    root = tmp_path / \"root\"
    root.mkdir()" 0 4 (fontified t) 4 8 (face font-lock-variable-name-face fontified t) 8 9 (fontified t) 9 10 (face font-lock-operator-face fontified t) 10 20 (fontified t) 20 21 (face font-lock-operator-face fontified t) 21 22 (fontified t) 22 28 (face font-lock-string-face fontified t) 28 29 (fontified t) 29 45 (fontified t)) . 3199) (undo-tree-id603 . -45) 3244) nil (26038 46989 954818 552000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3198) (undo-tree-id601 . -1) (undo-tree-id602 . -1) 3199) nil (26038 46989 954818 173000) 0 nil])
([nil nil ((3228 . 3237)) nil (26038 46989 954817 672000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3281 . 3282) (nil fontified nil 3266 . 3282) (nil fontified nil 3265 . 3266) (nil fontified nil 3259 . 3265) (nil fontified nil 3258 . 3259) (nil fontified nil 3257 . 3258) (nil fontified nil 3247 . 3257) (nil fontified nil 3246 . 3247) (nil fontified nil 3245 . 3246) (nil fontified nil 3241 . 3245) (nil fontified nil 3237 . 3241) (3237 . 3282)) nil (26038 46989 954817 456000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3237) 3245) nil (26038 46989 954817 58000) 0 nil])
([nil nil ((3262 . 3270) (#("    " 0 4 (fontified t)) . 3262) 3274) nil (26038 46989 954816 736000) 0 nil])
([nil nil ((#("        root = tmp_path / \"root\"
        root.mkdir()" 0 8 (fontified t) 8 12 (face font-lock-variable-name-face fontified t) 12 13 (fontified t) 13 14 (face font-lock-operator-face fontified t) 14 24 (fontified t) 24 25 (face font-lock-operator-face fontified t) 25 26 (fontified t) 26 32 (face font-lock-string-face fontified t) 32 33 (fontified t) 33 41 (fontified t) 41 52 (fontified t) 52 53 (rear-nonsticky t fontified t)) . 3229) (undo-tree-id600 . -53) 3282) nil (26038 46989 954816 533000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3228) (undo-tree-id598 . -1) (undo-tree-id599 . -1) 3229) nil (26038 46989 954816 146000) 0 nil])
([nil nil ((3145 . 3150)) nil (26038 46989 954815 103000) 0 nil])
([nil nil ((nil fontified nil 3202 . 3203) (nil fontified nil 3191 . 3202) (nil fontified nil 3183 . 3191) (nil fontified nil 3182 . 3183) (nil fontified nil 3176 . 3182) (nil fontified nil 3175 . 3176) (nil fontified nil 3174 . 3175) (nil fontified nil 3164 . 3174) (nil fontified nil 3163 . 3164) (nil fontified nil 3162 . 3163) (nil fontified nil 3158 . 3162) (nil fontified nil 3150 . 3158) (3150 . 3203)) nil (26038 46989 954814 884000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -3150) 3166) nil (26038 46989 954814 432000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3179) 3187) nil (26038 46989 954814 241000) 0 nil])
([nil nil ((3191 . 3196)) nil (26038 46989 954814 71000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -3360) (undo-tree-id593 . -1) (#("v" 0 1 (fontified t)) . -3361) (undo-tree-id594 . -1) (#("e" 0 1 (fontified t)) . -3362) (undo-tree-id595 . -1) (#("n" 0 1 (fontified t)) . -3363) (undo-tree-id596 . -1) (#("t" 0 1 (fontified t)) . -3364) (undo-tree-id597 . -1) 3365) nil (26038 46989 954813 798000) 0 nil])
([nil nil ((3249 . 3254)) nil (26038 46989 954812 612000) 0 nil])
([nil nil ((3254 . 3255)) nil (26038 46989 954812 490000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -3254) (undo-tree-id592 . -1) 3255) nil (26038 46989 954812 251000) 0 nil])
([nil nil ((#("modify" 0 6 (face font-lock-variable-name-face fontified t)) . 3201)) nil (26038 46989 954811 842000) 0 nil])
([nil nil ((3201 . 3207)) nil (26038 46989 954811 633000) 0 nil])
([nil nil ((#("_events" 0 7 (face font-lock-variable-name-face fontified t)) . 3207)) nil (26038 46989 954811 489000) 0 nil])
([nil nil ((3244 . 3248) (#("    " 0 4 (fontified nil)) . 3243) (undo-tree-id591 . -4) (3247 . 3248)) nil (26038 46989 954811 313000) 0 nil])
([nil nil ((3243 . 3244)) nil (26038 46989 954810 927000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -3243) (undo-tree-id590 . -1) 3244) nil (26038 46989 954810 767000) 0 nil])
([nil nil ((3243 . 3247)) nil (26038 46989 954810 459000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3243) (undo-tree-id589 . -4) 3247) nil (26038 46989 954810 257000) 0 nil])
([nil nil ((3243 . 3244)) nil (26038 46989 954809 936000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -3243) (undo-tree-id588 . -1) 3244) nil (26038 46989 954809 769000) 0 nil])
([nil nil ((3243 . 3248)) nil (26038 46989 954809 444000) 0 nil])
([nil nil ((3248 . 3269)) nil (26038 46989 954809 323000) 0 nil])
([nil nil ((3269 . 3284)) nil (26038 46989 954809 207000) 0 nil])
([nil nil ((3284 . 3293)) nil (26038 46989 954809 63000) 0 nil])
([nil nil ((#("events" 0 6 (face font-lock-variable-name-face fontified t)) . 3201) (undo-tree-id586 . -4) (undo-tree-id587 . -6)) nil (26038 46989 954808 894000) 0 nil])
([nil nil ((3201 . 3203)) nil (26038 46989 954808 343000) 0 nil])
([nil nil ((3203 . 3214)) nil (26038 46989 954808 140000) 0 nil])
([nil nil ((#("event" 0 5 (face font-lock-function-name-face fontified t)) . 3270) (undo-tree-id584 . -5) (undo-tree-id585 . -5)) nil (26038 46989 954807 968000) 0 nil])
([nil nil ((3270 . 3273)) nil (26038 46989 954807 302000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-function-name-face fontified t)) . -3272) (undo-tree-id582 . -1) (undo-tree-id583 . -1) 3273) nil (26038 46989 954807 142000) 0 nil])
([nil nil ((3272 . 3282)) nil (26038 46989 954806 529000) 0 nil])
([nil nil ((3298 . 3307)) nil (26038 46989 954806 321000) 0 nil])
([nil nil ((3307 . 3321)) nil (26038 46989 954806 131000) 0 nil])
([nil nil ((3321 . 3336)) nil (26038 46989 954805 998000) 0 nil])
([nil nil ((3336 . 3351)) nil (26038 46989 954805 864000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -3350) (undo-tree-id580 . -1) (undo-tree-id581 . -1) 3351) nil (26038 46989 954805 704000) 0 nil])
([nil nil ((3350 . 3354)) nil (26038 46989 954805 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3359) (undo-tree-id574 . -4) (undo-tree-id575 . -4) (undo-tree-id576 . -4) (undo-tree-id577 . -4) (undo-tree-id578 . -4) (undo-tree-id579 . -4) 3363) nil (26038 46989 954804 803000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3355) (undo-tree-id565 . -4) (undo-tree-id566 . -4) (undo-tree-id567 . -4) (undo-tree-id568 . -4) (undo-tree-id569 . -4) (undo-tree-id570 . -4) (undo-tree-id571 . -4) (undo-tree-id572 . -4) (undo-tree-id573 . -4) 3359) nil (26038 46989 954802 600000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3354) (undo-tree-id553 . -1) (undo-tree-id554 . 1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) 3355) nil (26038 46989 954800 618000) 0 nil])
([nil nil ((3470 . 3480)) nil (26038 46989 954797 60000) 0 nil])
([nil nil ((3480 . 3489)) nil (26038 46989 954796 940000) 0 nil])
([nil nil ((3464 . 3472)) nil (26038 46989 954796 739000) 0 nil])
([nil nil ((3497 . 3503)) nil (26038 46989 954796 596000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -3502) (undo-tree-id551 . -1) (undo-tree-id552 . -1) 3503) nil (26038 46989 954796 236000) 0 nil])
([nil nil ((3502 . 3503)) nil (26038 46989 954795 667000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -3502) (undo-tree-id549 . -1) (undo-tree-id550 . -1) 3503) nil (26038 46989 954795 435000) 0 nil])
([nil nil ((3502 . 3503)) nil (26038 46989 954794 772000) 0 nil])
([nil nil ((#("=" 0 1 (face font-lock-operator-face fontified t)) . -3499) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (#("=" 0 1 (face font-lock-operator-face fontified t)) . -3500) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (#(" " 0 1 (fontified t)) . -3501) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (#("{" 0 1 (fontified t)) . -3502) (undo-tree-id547 . -1) (undo-tree-id548 . -1) 3503) nil (26038 46989 954794 141000) 0 nil])
([nil nil ((3499 . 3506)) nil (26038 46989 954780 287000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 3351) (#("    " 0 4 (fontified t)) . 3192) 3506) nil (26038 46989 954777 246000) 0 nil])
([nil nil ((106 . 118) (t 26038 46989 961182 455000)) nil (26038 46997 766174 109000) 0 nil])
([nil nil ((3315 . 3317) (t 26038 46997 768668 688000)) nil (26038 47008 110349 877000) 0 nil])
([nil nil ((3317 . 3322)) nil (26038 47008 110349 331000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3320) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (#("n" 0 1 (fontified t)) . -3321) (undo-tree-id609 . -1) (undo-tree-id610 . -1) 3322) nil (26038 47008 110348 683000) 0 nil])
([nil nil ((3320 . 3322)) nil (26038 47008 110337 859000) 0 nil])
([nil nil ((#("    modifications = watch_all2([root], read_delay=0)

    async def next_modification() -> set[Path]:
        return await asyncio.wait_for(anext(modifications), 1)

" 0 4 (fontified t) 4 17 (face font-lock-variable-name-face fontified t) 17 18 (fontified t) 18 19 (face font-lock-operator-face fontified t) 19 49 (fontified t) 49 50 (face font-lock-operator-face fontified t) 50 51 (fontified t) 51 52 (fontified t rear-nonsticky t) 52 53 (fontified t) 53 54 (fontified t) 54 58 (fontified t) 58 67 (face font-lock-keyword-face fontified t) 67 68 (fontified t) 68 85 (face font-lock-function-name-face fontified t) 85 88 (fontified t) 88 89 (face font-lock-operator-face fontified t) 89 90 (face font-lock-operator-face fontified t) 90 91 (fontified t) 91 94 (face font-lock-builtin-face fontified t) 94 102 (fontified t) 102 110 (fontified t) 110 116 (face font-lock-keyword-face fontified t) 116 117 (fontified t) 117 122 (face font-lock-keyword-face fontified t) 122 123 (fontified t) 123 164 (fontified t) 164 165 (fontified t) 165 166 (fontified t)) . 3205) (undo-tree-id612 . -53) (undo-tree-id613 . -4) (undo-tree-id614 . -52) (undo-tree-id615 . -131) (undo-tree-id616 . -109) (undo-tree-id617 . -53) (undo-tree-id618 . -53) (undo-tree-id619 . -53) (undo-tree-id620 . -53) (undo-tree-id621 . -53) (undo-tree-id622 . -53) (undo-tree-id623 . -166) (undo-tree-id624 . -53) (undo-tree-id625 . -53) (undo-tree-id626 . -166) (undo-tree-id627 . -166) 3371 (t 26038 47008 139979 159000)) nil (26038 47279 930427 344000) 0 nil])
([nil nil ((3234 . 3243)) nil (26038 47279 930422 751000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3408 . 3409) (nil fontified nil 3408 . 3409) (nil fontified nil 3407 . 3408) (nil fontified nil 3366 . 3407) (nil fontified nil 3365 . 3366) (nil fontified nil 3360 . 3365) (nil fontified nil 3359 . 3360) (nil fontified nil 3353 . 3359) (nil fontified nil 3345 . 3353) (nil fontified nil 3337 . 3345) (nil fontified nil 3334 . 3337) (nil fontified nil 3333 . 3334) (nil fontified nil 3332 . 3333) (nil fontified nil 3331 . 3332) (nil fontified nil 3328 . 3331) (nil fontified nil 3311 . 3328) (nil fontified nil 3310 . 3311) (nil fontified nil 3301 . 3310) (nil fontified nil 3297 . 3301) (nil fontified nil 3296 . 3297) (nil fontified nil 3295 . 3296) (nil fontified nil 3294 . 3295) (nil fontified nil 3293 . 3294) (nil fontified nil 3292 . 3293) (nil fontified nil 3262 . 3292) (nil fontified nil 3261 . 3262) (nil fontified nil 3260 . 3261) (nil fontified nil 3247 . 3260) (nil fontified nil 3243 . 3247) (3243 . 3409)) nil (26038 47279 930422 385000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3243) 3235) nil (26038 47279 930421 320000) 0 nil])
([nil nil ((3293 . 3301) (#("    " 0 4 (fontified t)) . 3293) (undo-tree-id611 . -4) 3301) nil (26038 47279 930420 638000) 0 nil])
([nil nil ((3353 . 3357) 3357) nil (26038 47279 930391 575000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3413) 3361 (t 26038 47279 935602 566000)) nil (26038 62753 176059 525000) 0 nil])
([nil nil ((3493 . 3494)) nil (26038 62761 851573 578000) 0 nil] [nil nil ((3412 . 3421)) ((#("
        " 0 9 (fontified t)) . 3412)) (26038 62753 176027 184000) 0 nil] [nil nil ((apply -6 3235 3418 undo--wrap-and-run-primitive-undo 3235 3418 ((3357 . 3359) (3303 . 3305) (3243 . 3245) 3411))) ((apply 6 3235 3412 undo--wrap-and-run-primitive-undo 3235 3412 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . 3243) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . 3303) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . 3357) 3417))) (26038 62598 677665 534000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -3493) (undo-tree-id628 . -1) (undo-tree-id629 . -1) 3494) nil (26038 62761 851610 216000) 0 nil])
nil
nil
([nil nil ((apply -4 3301 3416 undo--wrap-and-run-primitive-undo 3301 3416 (("        " . 3301) (3363 . 3365) (3301 . 3311) 3411))) nil (26038 63102 698929 158000) 0 nil] [nil nil ((3494 . 3504)) ((#("asyncio.cr" 0 10 (fontified t)) . 3494) (undo-tree-id630 . -10)) (26038 62761 851562 718000) 0 nil])
([nil nil ((3417 . 3425) (#("        " 0 8 (fontified nil)) . 3416) (undo-tree-id643 . -8) (3415 . 3425)) nil (26038 63102 698928 879000) 0 nil])
nil
([nil nil ((3425 . 3446)) nil (26038 63102 698928 477000) 0 nil])
([nil nil ((3446 . 3467)) nil (26038 63102 698928 274000) 0 nil])
([nil nil ((3467 . 3469)) nil (26038 63102 698928 125000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -3467) (undo-tree-id641 . -1) (#("s" 0 1 (fontified t)) . -3468) (undo-tree-id642 . -1) 3469) nil (26038 63102 698927 886000) 0 nil])
([nil nil ((3467 . 3471)) nil (26038 63102 698927 317000) 0 nil])
([nil nil ((3471 . 3472)) nil (26038 63102 698927 106000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . -3471) (undo-tree-id640 . -1) 3472) nil (26038 63102 698926 794000) 0 nil])
([nil nil ((3471 . 3482)) nil (26038 63102 698926 285000) 0 nil])
([nil nil ((3482 . 3495)) nil (26038 63102 698926 176000) 0 nil])
([nil nil ((3495 . 3516)) nil (26038 63102 698926 71000) 0 nil])
([nil nil ((3516 . 3522)) nil (26038 63102 698925 886000) 0 nil])
([nil nil ((3522 . 3543)) nil (26038 63102 698925 671000) 0 nil])
([nil nil ((3543 . 3546)) nil (26038 63102 698925 452000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -3545) (undo-tree-id639 . -1) 3546) nil (26038 63102 698925 199000) 0 nil])
([nil nil ((3545 . 3561)) nil (26038 63102 698924 625000) 0 nil])
([nil nil ((3563 . 3571) (#("        " 0 8 (fontified nil)) . 3562) (undo-tree-id638 . -8) (3561 . 3571)) nil (26038 63102 698924 362000) 0 nil])
([nil nil ((3571 . 3572)) nil (26038 63102 698923 815000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -3571) (undo-tree-id636 . -1) (undo-tree-id637 . -1) 3572) nil (26038 63102 698923 332000) 0 nil])
([nil nil ((3571 . 3592)) nil (26038 63102 698922 544000) 0 nil])
([nil nil ((3592 . 3597)) nil (26038 63102 698922 239000) 0 nil])
([nil nil ((#("await next_modification()) is None" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 27 (fontified t) 27 29 (face font-lock-keyword-face fontified t) 29 30 (fontified t) 30 34 (face font-lock-constant-face fontified t)) . 3681) (undo-tree-id631 . -5) (undo-tree-id632 . -18) (undo-tree-id633 . -11) (undo-tree-id634 . -6) (undo-tree-id635 . -34)) nil (26038 63102 698921 655000) 0 nil])
([nil nil ((3681 . 3700)) nil (26038 63102 698911 15000) 0 nil])
([nil nil ((3559 . 3562) (t 26038 63102 704560 288000)) nil (26038 63112 603881 953000) 0 nil])
([nil nil ((#("async" 0 5 (face font-lock-keyword-face fontified t)) . 3425) (undo-tree-id649 . -5) (t 26038 63112 608509 717000)) nil (26038 63126 69788 143000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3425) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) 3426) nil (26038 64534 663352 324000) 0 nil])
([nil nil ((3594 . 3603)) nil (26038 64550 548372 939000) 0 nil] [nil nil ((#("root" 0 4 (fontified t)) . 3271) (undo-tree-id651 . -4) (undo-tree-id652 . -4) (t 26038 63126 100440 839000)) ((3271 . 3275)) (26038 64534 252957 729000) 0 nil] [nil nil ((3262 . 3264) (t 26038 63126 100440 839000)) ((#(" g" 0 2 (fontified t)) . 3262) (undo-tree-id650 . -2)) (26038 64425 509186 712000) 0 nil])
([nil nil ((3603 . 3619)) nil (26038 64550 548372 246000) 0 nil])
([nil nil ((3271 . 3273)) ((#("tm" 0 2 (fontified t)) . 3271) (undo-tree-id655 . -2) (undo-tree-id656 . -2) (undo-tree-id657 . -2) (undo-tree-id658 . -2)) (26038 64534 33256 469000) 0 nil])
nil
([nil nil ((3603 . 3609)) nil (26038 64550 548371 989000) 0 nil])
([nil nil ((3273 . 3279)) ((#("p_path" 0 6 (fontified t)) . 3273) (undo-tree-id653 . -6) (undo-tree-id654 . -6) (t 26038 64503 897653 136000)) (26038 64503 891621 67000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -3623) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) 3624) nil (26038 64550 548371 370000) 0 nil])
nil
([nil nil ((3623 . 3627)) nil (26038 64550 548370 74000) 0 nil])
([nil nil ((#("await asyncio.sleep(0.25)" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 25 (fontified t)) . 3603) (undo-tree-id664 . -7) (undo-tree-id665 . -8) (undo-tree-id666 . -9) (undo-tree-id667 . -10) (undo-tree-id668 . -11) (undo-tree-id669 . -12) (undo-tree-id670 . -13) (undo-tree-id671 . -14) (undo-tree-id672 . -15) (undo-tree-id673 . -16) (undo-tree-id674 . -17) (undo-tree-id675 . -18) (undo-tree-id676 . -19) (undo-tree-id677 . -20) (undo-tree-id678 . -20) (undo-tree-id679 . -25) (undo-tree-id680 . -1) (undo-tree-id681 . -2) (undo-tree-id682 . -3) (undo-tree-id683 . -4) (undo-tree-id684 . -5) (undo-tree-id685 . -6) (undo-tree-id686 . -25) (undo-tree-id687 . -20) (undo-tree-id688 . -20) (undo-tree-id689 . -21) (undo-tree-id690 . -22) (undo-tree-id691 . -23) (undo-tree-id692 . -24) (undo-tree-id693 . -25)) nil (26038 64550 548369 321000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3627 . 3628) (nil fontified nil 3609 . 3628) (nil fontified nil 3608 . 3609) (nil fontified nil 3603 . 3608) (3603 . 3628)) nil (26038 64550 548360 54000) 0 nil])
([nil nil ((3695 . 3704)) nil (26038 64550 548359 398000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3728 . 3729) (nil fontified nil 3710 . 3729) (nil fontified nil 3709 . 3710) (nil fontified nil 3704 . 3709) (3704 . 3729)) nil (26038 64550 548358 688000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -3726) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (#("5" 0 1 (fontified t)) . -3727) (undo-tree-id662 . -1) (undo-tree-id663 . -1) 3728) nil (26038 64550 548357 551000) 0 nil])
([nil nil ((3726 . 3728)) nil (26038 64550 548344 985000) 0 nil])
([nil nil ((3559 . 3568) (t 26038 64550 550655 7000)) nil (26038 64584 327644 469000) 0 nil])
([nil nil ((3568 . 3573)) nil (26038 64584 327643 923000) 0 nil])
([nil nil ((#("        await" 0 8 (fontified t) 8 13 (face font-lock-keyword-face fontified t)) . 3560) (undo-tree-id812 . -8) (undo-tree-id813 . -8) (undo-tree-id814 . -9) (undo-tree-id815 . -10) (undo-tree-id816 . -11) (undo-tree-id817 . -12) (undo-tree-id818 . -13) (undo-tree-id819 . -13)) nil (26038 64584 327643 186000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3559) (undo-tree-id800 . -1) (undo-tree-id801 . 1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) 3560) nil (26038 64584 327640 673000) 0 nil])
([nil nil ((#("        await asyncio.sleep(0.25)" 0 8 (fontified t) 8 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 32 (fontified t) 32 33 (fontified t rear-nonsticky t)) . 3595) (undo-tree-id764 . -8) (undo-tree-id765 . -8) (undo-tree-id766 . -8) (undo-tree-id767 . -8) (undo-tree-id768 . -8) (undo-tree-id769 . -8) (undo-tree-id770 . -8) (undo-tree-id771 . -8) (undo-tree-id772 . -8) (undo-tree-id773 . -8) (undo-tree-id774 . -8) (undo-tree-id775 . -8) (undo-tree-id776 . -8) (undo-tree-id777 . -8) (undo-tree-id778 . -8) (undo-tree-id779 . -8) (undo-tree-id780 . -8) (undo-tree-id781 . -8) (undo-tree-id782 . -8) (undo-tree-id783 . -8) (undo-tree-id784 . -8) (undo-tree-id785 . -8) (undo-tree-id786 . -8) (undo-tree-id787 . -8) (undo-tree-id788 . -8) (undo-tree-id789 . -8) (undo-tree-id790 . -8) (undo-tree-id791 . -8) (undo-tree-id792 . -8) (undo-tree-id793 . -8) (undo-tree-id794 . -33) (undo-tree-id795 . -33) (undo-tree-id796 . -33) (undo-tree-id797 . -33) (undo-tree-id798 . -33) (undo-tree-id799 . -33)) nil (26038 64584 327637 650000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3594) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) 3595) nil (26038 64584 327628 642000) 0 nil])
([nil nil ((3594 . 3603)) nil (26038 64584 327618 165000) 0 nil])
([nil nil ((3603 . 3614)) nil (26038 64584 327617 376000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -3609) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (#("i" 0 1 (fontified t)) . -3610) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (#("m" 0 1 (fontified t)) . -3611) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (#("e" 0 1 (fontified t)) . -3612) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (#("." 0 1 (fontified t)) . -3613) (undo-tree-id725 . -1) (undo-tree-id726 . -1) 3614) nil (26038 64584 327616 377000) 0 nil])
([nil nil ((3609 . 3623)) nil (26038 64584 327599 140000) 0 nil])
([nil nil ((3623 . 3625)) nil (26038 64584 327595 351000) 0 nil])
([nil nil ((3624 . 3626) (t 26038 64584 330516 502000)) nil (26038 64591 512381 55000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3724) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (#("2" 0 1 (fontified t)) . -3725) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (#("5" 0 1 (fontified t)) . -3726) (undo-tree-id827 . -1) (undo-tree-id828 . -1) 3727 (t 26038 64591 544189 409000)) nil (26039 2984 497410 657000) 0 nil])
([nil nil ((#("        await asyncio.sleep(0)" 0 8 (fontified t) 8 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 29 (fontified t) 29 30 (fontified t rear-nonsticky t)) . 3695) (undo-tree-id847 . -8) (undo-tree-id848 . -29) (undo-tree-id849 . -29) (undo-tree-id850 . -29) (undo-tree-id851 . -29) (undo-tree-id852 . -29) (undo-tree-id853 . -30) (t 26039 2978 288749 966000)) nil (26039 2986 582353 172000) 0 nil] [nil nil ((#("        await asyncio.sleep(0)" 0 8 (fontified t) 8 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 29 (fontified t) 29 30 (fontified t rear-nonsticky t)) . 3695) (undo-tree-id829 . -8) (undo-tree-id830 . -29) (undo-tree-id831 . -29) (undo-tree-id832 . -29) (undo-tree-id833 . -29) (undo-tree-id834 . -29) (undo-tree-id835 . -30) (t 26039 2978 288749 966000)) ((3695 . 3725)) (26039 2984 497267 219000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3694) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) 3695) nil (26039 2986 582348 750000) 0 nil])
nil
([nil nil ((#("1" 0 1 (fontified t)) . -3625) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) 3626 (t 26039 2986 588832 194000)) nil (26039 2994 183144 127000) 0 nil])
([nil nil ((3625 . 3627)) nil (26039 2994 183141 114000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t)) . -3626) (undo-tree-id854 . -1) (undo-tree-id855 . -1) 3627) nil (26039 2994 183140 234000) 0 nil])
([nil nil ((3626 . 3627)) nil (26039 2994 183128 342000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -3626) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) 3627 (t 26039 2994 212909 45000)) nil (26039 3001 323853 256000) 0 nil])
([nil nil ((3626 . 3627)) nil (26039 3001 323842 713000) 0 nil])
([nil nil ((3291 . 3300) (t 26039 3001 328981 903000)) nil (26039 6459 493002 287000) 0 nil])
([nil nil ((3300 . 3314)) nil (26039 6459 493001 630000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t)) . -3310) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (#("r" 0 1 (fontified t)) . -3311) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (#("u" 0 1 (fontified t)) . -3312) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (#("e" 0 1 (face font-lock-constant-face fontified t)) . -3313) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) 3314) nil (26039 6459 493000 472000) 0 nil])
([nil nil ((3310 . 3323)) nil (26039 6459 492796 209000) 0 nil])
([nil nil ((3323 . 3325)) nil (26039 6459 492795 781000) 0 nil])
([nil nil ((3510 . 3523)) nil (26039 6459 492795 555000) 0 nil])
([nil nil ((3523 . 3525)) nil (26039 6459 492795 234000) 0 nil])
([nil nil ((3525 . 3536)) nil (26039 6459 492794 783000) 0 nil])
([nil nil ((3654 . 3663)) nil (26039 6459 492794 60000) 0 nil])
([nil nil ((3663 . 3664)) nil (26039 6459 492793 455000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -3663) (undo-tree-id872 . -1) (undo-tree-id873 . -1) 3664) nil (26039 6459 492792 843000) 0 nil])
([nil nil ((3663 . 3679)) nil (26039 6459 492791 881000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -3677) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . -3678) (undo-tree-id870 . -1) (undo-tree-id871 . -1) 3679) nil (26039 6459 492791 269000) 0 nil])
([nil nil ((3677 . 3683)) nil (26039 6459 492788 699000) 0 nil])
([nil nil ((#("        await asyncio.sleep(0.00)" 0 8 (fontified t) 8 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 33 (fontified t)) . 3684) (undo-tree-id865 . -33)) nil (26039 6459 492787 887000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3683) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) 3684) nil (26039 6701 362824 400000) 0 nil])
([nil nil ((118 . 119) (t 26039 6459 499108 295000)) nil (26039 6742 988439 799000) 0 nil] [nil nil ((3428 . 3429) (t 26039 6459 499108 295000)) ((#("x" 0 1 (face font-lock-comment-face fontified t)) . 3428) (undo-tree-id918 . -1)) (26039 6701 362686 983000) 0 nil])
([nil nil ((119 . 138)) nil (26039 6742 988439 359000) 0 nil])
nil
([nil nil ((#("from logging import" 0 4 (face font-lock-keyword-face fontified t) 4 13 (fontified t) 13 19 (face font-lock-keyword-face fontified t)) . 119) (undo-tree-id1073 . -1) (undo-tree-id1074 . -2) (undo-tree-id1075 . -3) (undo-tree-id1076 . -4) (undo-tree-id1077 . -5) (undo-tree-id1078 . -6) (undo-tree-id1079 . -7) (undo-tree-id1080 . -8) (undo-tree-id1081 . -9) (undo-tree-id1082 . -10) (undo-tree-id1083 . -11) (undo-tree-id1084 . -12) (undo-tree-id1085 . -13) (undo-tree-id1086 . -14) (undo-tree-id1087 . -15) (undo-tree-id1088 . -16) (undo-tree-id1089 . -17) (undo-tree-id1090 . -18) (undo-tree-id1091 . -19) (undo-tree-id1092 . -19)) nil (26039 6742 988438 731000) 0 nil])
([nil nil ((119 . 133)) nil (26039 6742 988292 691000) 0 nil])
([nil nil ((133 . 134)) nil (26039 6742 988292 412000) 0 nil])
([nil nil ((134 . 136)) nil (26039 6742 988292 295000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -134) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (#("o" 0 1 (fontified t)) . -135) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) 136) nil (26039 6742 988291 937000) 0 nil])
([nil nil ((134 . 135)) nil (26039 6742 988289 550000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -134) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) 135) nil (26039 6742 988289 296000) 0 nil])
([nil nil ((134 . 135)) nil (26039 6742 988288 828000) 0 nil])
([nil nil ((135 . 142)) nil (26039 6742 988288 712000) 0 nil])
([nil nil ((#("=" 0 1 (face font-lock-operator-face fontified t)) . -141) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) 142) nil (26039 6742 988288 416000) 0 nil])
([nil nil ((141 . 162)) nil (26039 6742 988287 858000) 0 nil])
([nil nil ((162 . 171)) nil (26039 6742 988287 750000) 0 nil])
([nil nil ((3672 . 3681)) nil (26039 6742 988287 537000) 0 nil])
([nil nil ((3681 . 3691)) nil (26039 6742 988287 418000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-keyword-face fontified t)) . -3689) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (#("n" 0 1 (fontified t)) . -3690) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) 3691) nil (26039 6742 988287 178000) 0 nil])
([nil nil ((3689 . 3700)) nil (26039 6742 988285 953000) 0 nil])
([nil nil ((#("start " 0 6 (face font-lock-string-face fontified t)) . 3694) (undo-tree-id1050 . -1) (undo-tree-id1051 . -2) (undo-tree-id1052 . -3) (undo-tree-id1053 . -4) (undo-tree-id1054 . -5) (undo-tree-id1055 . -6) (undo-tree-id1056 . -6)) nil (26039 6742 988285 639000) 0 nil])
([nil nil ((3694 . 3709)) nil (26039 6742 988284 213000) 0 nil])
([nil nil ((#("        logger.info(\"creating task\")" 0 15 (fontified t) 15 20 (fontified t) 20 35 (face font-lock-string-face fontified t) 35 36 (fontified t)) . 3673) (undo-tree-id962 . -8) (undo-tree-id963 . -8) (undo-tree-id964 . -9) (undo-tree-id965 . -10) (undo-tree-id966 . -11) (undo-tree-id967 . -12) (undo-tree-id968 . -13) (undo-tree-id969 . -14) (undo-tree-id970 . -15) (undo-tree-id971 . -16) (undo-tree-id972 . -16) (undo-tree-id973 . -16) (undo-tree-id974 . -16) (undo-tree-id975 . -16) (undo-tree-id976 . -17) (undo-tree-id977 . -18) (undo-tree-id978 . -19) (undo-tree-id979 . -20) (undo-tree-id980 . -8) (undo-tree-id981 . -8) (undo-tree-id982 . -21) (undo-tree-id983 . -8) (undo-tree-id984 . -8) (undo-tree-id985 . -21) (undo-tree-id986 . -8) (undo-tree-id987 . -8) (undo-tree-id988 . -21) (undo-tree-id989 . -8) (undo-tree-id990 . -8) (undo-tree-id991 . -21) (undo-tree-id992 . -8) (undo-tree-id993 . -8) (undo-tree-id994 . -21) (undo-tree-id995 . -8) (undo-tree-id996 . -8) (undo-tree-id997 . -21) (undo-tree-id998 . -8) (undo-tree-id999 . -8) (undo-tree-id1000 . -21) (undo-tree-id1001 . -21) (undo-tree-id1002 . -8) (undo-tree-id1003 . -8) (undo-tree-id1004 . -8) (undo-tree-id1005 . -8) (undo-tree-id1006 . -22) (undo-tree-id1007 . -8) (undo-tree-id1008 . -8) (undo-tree-id1009 . -23) (undo-tree-id1010 . -8) (undo-tree-id1011 . -8) (undo-tree-id1012 . -24) (undo-tree-id1013 . -8) (undo-tree-id1014 . -8) (undo-tree-id1015 . -25) (undo-tree-id1016 . -8) (undo-tree-id1017 . -8) (undo-tree-id1018 . -26) (undo-tree-id1019 . -8) (undo-tree-id1020 . -8) (undo-tree-id1021 . -27) (undo-tree-id1022 . -8) (undo-tree-id1023 . -8) (undo-tree-id1024 . -28) (undo-tree-id1025 . -8) (undo-tree-id1026 . -8) (undo-tree-id1027 . -29) (undo-tree-id1028 . -8) (undo-tree-id1029 . -8) (undo-tree-id1030 . -30) (undo-tree-id1031 . -8) (undo-tree-id1032 . -8) (undo-tree-id1033 . -31) (undo-tree-id1034 . -8) (undo-tree-id1035 . -8) (undo-tree-id1036 . -32) (undo-tree-id1037 . -8) (undo-tree-id1038 . -8) (undo-tree-id1039 . -33) (undo-tree-id1040 . -8) (undo-tree-id1041 . -8) (undo-tree-id1042 . -34) (undo-tree-id1043 . -8) (undo-tree-id1044 . -8) (undo-tree-id1045 . -35) (undo-tree-id1046 . -8) (undo-tree-id1047 . -8) (undo-tree-id1048 . -36) (undo-tree-id1049 . -36)) nil (26039 6742 988283 255000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3708 . 3709) (nil fontified nil 3708 . 3709) (nil fontified nil 3693 . 3708) (nil fontified nil 3688 . 3693) (nil fontified nil 3673 . 3688) (3673 . 3709)) nil (26039 6742 988262 530000) 0 nil])
([nil nil ((3744 . 3753)) nil (26039 6742 988262 189000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3788 . 3789) (nil fontified nil 3788 . 3789) (nil fontified nil 3773 . 3788) (nil fontified nil 3768 . 3773) (nil fontified nil 3753 . 3768) (3753 . 3789)) nil (26039 6742 988261 912000) 0 nil])
([nil nil ((#("creating" 0 8 (face font-lock-string-face fontified t)) . 3774) (undo-tree-id961 . -8)) nil (26039 6742 988261 569000) 0 nil])
([nil nil ((3774 . 3775)) nil (26039 6742 988260 951000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-string-face fontified t)) . -3774) (undo-tree-id959 . -1) (undo-tree-id960 . -1) 3775) nil (26039 6742 988260 776000) 0 nil])
([nil nil ((3774 . 3781)) nil (26039 6742 988260 193000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -3753) (undo-tree-id936 . -8) (undo-tree-id937 . -8) (undo-tree-id938 . -8) (undo-tree-id939 . -8) (undo-tree-id940 . -8) (undo-tree-id941 . -8) (undo-tree-id942 . -8) (undo-tree-id943 . -8) (undo-tree-id944 . -8) (undo-tree-id945 . -8) (undo-tree-id946 . -8) (undo-tree-id947 . -8) (undo-tree-id948 . -8) (undo-tree-id949 . -8) (undo-tree-id950 . -8) (undo-tree-id951 . -8) (undo-tree-id952 . -8) (undo-tree-id953 . -8) (undo-tree-id954 . -8) (undo-tree-id955 . -8) (undo-tree-id956 . -8) (undo-tree-id957 . -8) (undo-tree-id958 . -8) 3781) nil (26039 6742 988259 723000) 0 nil])
([nil nil ((#("logger.info(\"created task\")" 0 7 (fontified t) 7 12 (fontified t) 12 26 (face font-lock-string-face fontified t) 26 27 (rear-nonsticky t fontified t)) . 3753) (undo-tree-id922 . -27) (undo-tree-id923 . -21) (undo-tree-id924 . -13) (undo-tree-id925 . -13) (undo-tree-id926 . -13) (undo-tree-id927 . -14) (undo-tree-id928 . -15) (undo-tree-id929 . -16) (undo-tree-id930 . -17) (undo-tree-id931 . -18) (undo-tree-id932 . -19) (undo-tree-id933 . -20) (undo-tree-id934 . -20) (undo-tree-id935 . -27)) nil (26039 6742 988253 781000) 0 nil])
([nil nil ((nil fontified nil 3779 . 3780) (nil fontified nil 3765 . 3779) (nil fontified nil 3760 . 3765) (nil fontified nil 3753 . 3760) (3753 . 3780)) nil (26039 6742 988249 334000) 0 nil])
([nil nil ((3809 . 3818)) nil (26039 6742 988249 43000) 0 nil])
([nil nil ((nil fontified nil 3844 . 3845) (nil fontified nil 3830 . 3844) (nil fontified nil 3825 . 3830) (nil fontified nil 3818 . 3825) (3818 . 3845)) nil (26039 6742 988248 688000) 0 nil])
([nil nil ((#("created task\")" 0 13 (face font-lock-string-face fontified t) 13 14 (fontified t rear-nonsticky t)) . 3831) (undo-tree-id919 . -14) (undo-tree-id920 . -8) (undo-tree-id921 . -14)) nil (26039 6742 988247 880000) 0 nil])
([nil nil ((3831 . 3845)) nil (26039 6742 988235 132000) 0 nil])
([nil nil ((16 . 133) (#("from pathlib import Path

from circuitpython_tool.fs import guess_source_dir, upload, walk, watch_all2
import logging" 0 4 (face font-lock-keyword-face fontified t) 4 13 (fontified t) 13 19 (face font-lock-keyword-face fontified t) 19 26 (fontified t) 26 30 (face font-lock-keyword-face fontified t) 30 53 (fontified t) 53 59 (face font-lock-keyword-face fontified t) 59 103 (fontified t) 103 109 (face font-lock-keyword-face fontified t) 109 117 (fontified t)) . 16) (undo-tree-id1160 . -102) 3845 (t 26039 6742 992094 115000)) nil (26039 7086 900335 254000) 0 nil])
([nil nil ((#("        def next_modification() -> asyncio.Task[set[Path]]:
            started.set()
            return asyncio.create_task(asyncio.wait_for(anext(modifications), 1))
" 0 8 (fontified t) 8 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 29 (face font-lock-function-name-face fontified t) 29 32 (fontified t) 32 33 (face font-lock-operator-face fontified t) 33 34 (face font-lock-operator-face fontified t) 34 35 (fontified t) 35 48 (fontified t) 48 51 (face font-lock-builtin-face fontified t) 51 60 (fontified t) 60 80 (fontified t) 80 83 (face font-lock-builtin-face fontified t) 83 85 (fontified t) 85 86 (fontified t) 86 98 (fontified t) 98 104 (face font-lock-keyword-face fontified t) 104 105 (fontified t) 105 125 (fontified t) 125 168 (fontified t)) . 3504) (undo-tree-id1156 . -13) (undo-tree-id1157 . -168) (undo-tree-id1158 . -168) (undo-tree-id1159 . -168) 3672 (t 26039 6743 876110 458000)) nil (26039 7086 900334 267000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3503) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) 3504) nil (26039 7086 900333 54000) 0 nil])
([nil nil ((apply 4 3388 3498 undo--wrap-and-run-primitive-undo 3388 3498 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3440) (#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -3388) 3502))) nil (26039 7086 900331 403000) 0 nil])
([nil nil ((#("        logger.info(\"creating task\")
        task = next_modification()
        logger.info(\"created task\")
        await started.wait()
        logger.info(\"task started\")

" 0 15 (fontified t) 15 20 (fontified t) 20 35 (face font-lock-string-face fontified t) 35 36 (fontified t rear-nonsticky t) 36 37 (fontified t) 37 45 (fontified t) 45 49 (face font-lock-variable-name-face fontified t) 49 50 (fontified t) 50 51 (face font-lock-operator-face fontified t) 51 52 (fontified t) 52 72 (fontified t) 72 80 (fontified t) 80 87 (fontified t) 87 92 (fontified t) 92 106 (face font-lock-string-face fontified t) 106 107 (fontified t rear-nonsticky t) 107 108 (fontified t) 108 116 (fontified t) 116 121 (face font-lock-keyword-face fontified t) 121 137 (fontified t) 137 145 (fontified t) 145 152 (fontified t) 152 157 (fontified t) 157 171 (face font-lock-string-face fontified t) 171 172 (fontified t) 172 173 (fontified t) 173 174 (fontified t rear-nonsticky t)) . 3500) (undo-tree-id1125 . -71) (undo-tree-id1126 . -80) (undo-tree-id1127 . -174) (undo-tree-id1128 . -145) (undo-tree-id1129 . -8) (undo-tree-id1130 . -8) (undo-tree-id1131 . -80) (undo-tree-id1132 . -80) (undo-tree-id1133 . -145) (undo-tree-id1134 . -145) (undo-tree-id1135 . -8) (undo-tree-id1136 . -8) (undo-tree-id1137 . -80) (undo-tree-id1138 . -80) (undo-tree-id1139 . -145) (undo-tree-id1140 . -145) (undo-tree-id1141 . -71) (undo-tree-id1142 . -71) (undo-tree-id1143 . -71) (undo-tree-id1144 . -71) (undo-tree-id1145 . -71) (undo-tree-id1146 . -37) (undo-tree-id1147 . -174) (undo-tree-id1148 . -174) 3674) nil (26039 7086 900330 874000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3499) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) 3500) nil (26039 7086 900324 737000) 0 nil])
([nil nil ((3499 . 3500)) nil (26039 7086 900315 698000) 0 nil])
([nil nil ((#("task" 0 4 (fontified t)) . 3588) (undo-tree-id1093 . -4) (undo-tree-id1094 . -4)) nil (26039 7086 900314 975000) 0 nil])
([nil nil ((3588 . 3607)) nil (26039 7086 900302 342000) 0 nil])
([nil nil ((#("        (root / \"b.txt\").touch()" 0 8 (fontified t) 8 14 (fontified t) 14 15 (face font-lock-operator-face fontified t) 15 16 (fontified t) 16 23 (face font-lock-string-face fontified t) 23 31 (fontified t) 31 32 (fontified t rear-nonsticky t)) . 3533) (undo-tree-id1170 . -32) (undo-tree-id1171 . -32) (undo-tree-id1172 . -32) (undo-tree-id1173 . -32) (undo-tree-id1174 . -32) (undo-tree-id1175 . -32) (undo-tree-id1176 . -32) (undo-tree-id1177 . -32) (t 26039 7086 902701 121000)) nil (26039 7119 261691 361000) 0 nil])
([nil nil ((nil fontified nil 3564 . 3565) (nil fontified nil 3556 . 3564) (nil fontified nil 3549 . 3556) (nil fontified nil 3548 . 3549) (nil fontified nil 3547 . 3548) (nil fontified nil 3541 . 3547) (nil fontified nil 3533 . 3541) (3533 . 3565)) nil (26039 7119 261689 413000) 0 nil])
([nil nil ((3565 . 3574)) nil (26039 7119 261689 76000) 0 nil])
([nil nil ((nil fontified nil 3605 . 3606) (nil fontified nil 3597 . 3605) (nil fontified nil 3590 . 3597) (nil fontified nil 3589 . 3590) (nil fontified nil 3588 . 3589) (nil fontified nil 3582 . 3588) (nil fontified nil 3574 . 3582) (3574 . 3606)) nil (26039 7119 261688 800000) 0 nil])
([nil nil ((#("b" 0 1 (face font-lock-string-face fontified t)) . -3591) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) 3592) nil (26039 7119 261688 218000) 0 nil])
([nil nil ((3591 . 3592)) nil (26039 7119 261687 208000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -3574) (undo-tree-id1161 . -8) (undo-tree-id1162 . -8) (undo-tree-id1163 . -8) (undo-tree-id1164 . -8) (undo-tree-id1165 . -8) (undo-tree-id1166 . -8) (undo-tree-id1167 . -8) 3592) nil (26039 7119 261685 370000) 0 nil])
([nil nil ((#("        (root / \"c.txt\").touch()" 0 8 (fontified t) 8 14 (fontified t) 14 15 (face font-lock-operator-face fontified t) 15 16 (fontified t) 16 23 (face font-lock-string-face fontified t) 23 31 (fontified t) 31 32 (fontified t rear-nonsticky t)) . 3566) (undo-tree-id1202 . -8) (t 26039 7119 267343 60000)) nil (26039 7199 386396 777000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3565) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) 3566) nil (26039 7199 386395 506000) 0 nil])
([nil nil ((3451 . 3452)) nil (26039 7199 386394 853000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -3451) (undo-tree-id1199 . -1) 3452) nil (26039 7199 386394 696000) 0 nil])
([nil nil ((3451 . 3452)) nil (26039 7199 386394 195000) 0 nil])
([nil nil ((3452 . 3469)) nil (26039 7199 386394 64000) 0 nil])
([nil nil ((3469 . 3473)) nil (26039 7199 386393 804000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -3469) (undo-tree-id1195 . -1) (#("." 0 1 (fontified t)) . -3470) (undo-tree-id1196 . -1) (#("r" 0 1 (fontified t)) . -3471) (undo-tree-id1197 . -1) (#("e" 0 1 (fontified t)) . -3472) (undo-tree-id1198 . -1) 3473) nil (26039 7199 386393 476000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3465) (undo-tree-id1194 . -4) 3469) nil (26039 7199 386392 183000) 0 nil])
([nil nil ((3453 . 3469) (#("            " 0 12 (fontified t)) . 3453) (undo-tree-id1193 . -12) 3465) nil (26039 7199 386391 765000) 0 nil])
([nil nil ((3469 . 3475)) nil (26039 7199 386391 160000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -3472) (undo-tree-id1190 . -1) (#("l" 0 1 (fontified t)) . -3473) (undo-tree-id1191 . -1) (#("a" 0 1 (fontified t)) . -3474) (undo-tree-id1192 . -1) 3475) nil (26039 7199 386390 740000) 0 nil])
([nil nil ((3472 . 3473)) nil (26039 7199 386389 730000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -3472) (undo-tree-id1189 . -1) 3473) nil (26039 7199 386389 601000) 0 nil])
([nil nil ((3472 . 3473)) nil (26039 7199 386389 154000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -3472) (undo-tree-id1188 . -1) 3473) nil (26039 7199 386388 853000) 0 nil])
([nil nil ((3472 . 3478)) nil (26039 7199 386388 429000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -3472) (undo-tree-id1182 . -1) (#("e" 0 1 (fontified t)) . -3473) (undo-tree-id1183 . -1) (#("l" 0 1 (fontified t)) . -3474) (undo-tree-id1184 . -1) (#("a" 0 1 (fontified t)) . -3475) (undo-tree-id1185 . -1) (#("t" 0 1 (fontified t)) . -3476) (undo-tree-id1186 . -1) (#("i" 0 1 (fontified t)) . -3477) (undo-tree-id1187 . -1) 3478) nil (26039 7199 386388 145000) 0 nil])
([nil nil ((3472 . 3475)) nil (26039 7199 386386 543000) 0 nil])
([nil nil ((3475 . 3496)) nil (26039 7199 386386 414000) 0 nil])
([nil nil ((3496 . 3498)) nil (26039 7199 386386 209000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3497) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) 3498) nil (26039 7199 969421 839000) 0 nil])
([nil nil ((3497 . 3514)) nil (26039 7204 631154 492000) 0 nil] [nil nil ((3497 . 3498)) ((#(" " 0 1 (fontified t)) . 3497)) (26039 7199 499317 348000) 0 nil])
([nil nil ((3561 . 3562)) nil (26039 7204 631150 940000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -3469) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) 3470) ((3469 . 3470)) (26039 7199 386428 851000) 0 nil])
([nil nil ((3488 . 3574) (#(" for p in
                await asyncio.wait_for(anext(modifications), 1)" 0 1 (fontified t) 1 4 (face font-lock-keyword-face fontified t) 4 7 (fontified t) 7 9 (face font-lock-keyword-face fontified t) 9 10 (fontified t) 10 26 (fontified t) 26 31 (face font-lock-keyword-face fontified t) 31 32 (fontified t) 32 73 (fontified t)) . 3488) (undo-tree-id1224 . -73) 3562 (t 26039 7204 637048 509000)) nil (26039 7274 250670 153000) 0 nil])
([nil nil ((3469 . 3470)) ((#("e" 0 1 (fontified t)) . 3469) (undo-tree-id1203 . -1)) (26039 7199 386374 342000) 0 nil])
([nil nil ((#("is None" 0 2 (face font-lock-keyword-face fontified t) 2 3 (fontified t) 3 7 (face font-lock-constant-face fontified t)) . 3686) (undo-tree-id1216 . -7) (undo-tree-id1217 . -6) (undo-tree-id1218 . -5) (undo-tree-id1219 . -4) (undo-tree-id1220 . -3) (undo-tree-id1221 . -2) (undo-tree-id1222 . -1) (undo-tree-id1223 . -7) (t 26039 7205 693069 708000)) nil (26039 7274 250669 469000) 0 nil])
nil
([nil nil ((3686 . 3690)) nil (26039 7274 250666 219000) 0 nil])
([nil nil ((3690 . 3691)) nil (26039 7274 250665 825000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -3690) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) 3691) nil (26039 7274 250665 570000) 0 nil])
([nil nil ((3469 . 3473)) nil (26039 7274 250664 913000) 0 nil])
([nil nil ((3492 . 3493)) nil (26039 7274 250664 758000) 0 nil])
([nil nil ((#("Path" 0 4 (fontified t)) . 3425) (undo-tree-id1213 . -4)) nil (26039 7274 250664 602000) 0 nil])
([nil nil ((3425 . 3428)) nil (26039 7274 250664 183000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -3693) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) 3694) nil (26039 7274 250663 857000) 0 nil])
([nil nil ((3693 . 3694)) nil (26039 7274 250662 87000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -3693) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) 3694) nil (26039 7274 250661 822000) 0 nil])
([nil nil ((3693 . 3712)) nil (26039 7274 250660 630000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -3711) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) 3712) nil (26039 7274 250657 395000) 0 nil])
([nil nil ((3713 . 3721) (#("        " 0 8 (fontified nil)) . 3712) (undo-tree-id1228 . -8) (undo-tree-id1229 . -8) (undo-tree-id1230 . -8) (3711 . 3721) (t 26039 7274 254450 840000)) nil (26039 7295 628137 291000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-string-face fontified t)) . -3598) (undo-tree-id1295 . -1) 3599) nil (26039 7381 780943 371000) 0 nil] [nil nil ((#("a" 0 1 (face font-lock-string-face fontified t)) . -3598) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) 3599) ((3598 . 3599)) (26039 7295 384059 186000) 0 nil])
([nil nil ((3598 . 3606)) nil (26039 7381 780942 747000) 0 nil])
([nil nil ((3598 . 3604)) ((#("create" 0 6 (face font-lock-string-face fontified t)) . 3598)) (26039 7295 384012 716000) 0 nil])
([nil nil ((#("new" 0 3 (face font-lock-string-face fontified t)) . 3598)) nil (26039 7381 780942 599000) 0 nil])
nil
([nil nil ((#("_file" 0 5 (face font-lock-string-face fontified t)) . 3598)) nil (26039 7381 780942 452000) 0 nil])
([nil nil ((3598 . 3604)) nil (26039 7381 780942 305000) 0 nil])
([nil nil ((#("        (root / \"b.txt\").touch()" 0 8 (fontified t) 8 14 (fontified t) 14 15 (face font-lock-operator-face fontified t) 15 16 (fontified t) 16 23 (face font-lock-string-face fontified t) 23 31 (fontified t) 31 32 (fontified t rear-nonsticky t)) . 3619) (undo-tree-id1292 . -32) (undo-tree-id1293 . -32) (undo-tree-id1294 . -32)) nil (26039 7381 780942 131000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3618) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) 3619) nil (26039 7381 780941 277000) 0 nil])
([nil nil ((3258 . 3262) (#("    " 0 4 (fontified nil)) . 3257) (undo-tree-id1287 . -4) (3256 . 3262)) nil (26039 7381 780940 417000) 0 nil])
([nil nil ((3262 . 3274)) nil (26039 7381 780940 41000) 0 nil])
([nil nil ((#("modify = lol" 0 6 (face font-lock-variable-name-face fontified t) 6 7 (fontified t) 7 8 (face font-lock-operator-face fontified t) 8 12 (fontified t)) . 3262)) nil (26039 7381 780939 903000) 0 nil])
([nil nil ((3262 . 3272)) nil (26039 7381 780939 779000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-string-face fontified t)) . -3271) (undo-tree-id1286 . -1) 3272) nil (26039 7381 780939 628000) 0 nil])
([nil nil ((3271 . 3281)) nil (26039 7381 780939 211000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -3280) (undo-tree-id1285 . -1) 3281) nil (26039 7381 780939 78000) 0 nil])
([nil nil ((3280 . 3281)) nil (26039 7381 780938 755000) 0 nil])
([nil nil ((3262 . 3263)) nil (26039 7381 780938 634000) 0 nil])
([nil nil ((3281 . 3282)) nil (26039 7381 780938 492000) 0 nil])
([nil nil ((#(":" 0 1 (face font-lock-string-face fontified t)) . -3281) (undo-tree-id1284 . -1) 3282) nil (26039 7381 780938 339000) 0 nil])
([nil nil ((3281 . 3282)) nil (26039 7381 780937 985000) 0 nil])
([nil nil ((#("modify" 0 6 (face font-lock-string-face fontified t)) . 3271)) nil (26039 7381 780937 855000) 0 nil])
([nil nil ((3271 . 3282)) nil (26039 7381 780937 679000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-string-face fontified t)) . -3279) (undo-tree-id1281 . -1) (#("f" 0 1 (face font-lock-string-face fontified t)) . -3280) (undo-tree-id1282 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -3281) (undo-tree-id1283 . -1) 3282) nil (26039 7381 780937 424000) 0 nil])
([nil nil ((3285 . 3293)) nil (26039 7381 780936 153000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3256) (undo-tree-id1280 . -1) 3257) nil (26039 7381 780935 949000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3725) (undo-tree-id1271 . -4) (undo-tree-id1272 . -4) (undo-tree-id1273 . -4) (undo-tree-id1274 . -4) (undo-tree-id1275 . -4) (undo-tree-id1276 . -4) (undo-tree-id1277 . -4) (undo-tree-id1278 . -4) (undo-tree-id1279 . -4) 3729) nil (26039 7381 780935 321000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3721) (undo-tree-id1259 . -4) (undo-tree-id1260 . -4) (undo-tree-id1261 . -4) (undo-tree-id1262 . -4) (undo-tree-id1263 . -4) (undo-tree-id1264 . -4) (undo-tree-id1265 . -4) (undo-tree-id1266 . -4) (undo-tree-id1267 . -4) (undo-tree-id1268 . -4) (undo-tree-id1269 . -4) (undo-tree-id1270 . -4) 3725) nil (26039 7381 780933 354000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3719) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (#("
" 0 1 (fontified t)) . -3720) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) 3721) nil (26039 7381 780926 744000) 0 nil])
([nil nil ((#("txt\", \"b.txt\"}" 0 4 (face font-lock-string-face fontified t) 4 6 (fontified t) 6 13 (face font-lock-string-face fontified t) 13 14 (fontified t)) . 3705) (t 26039 7381 784634 42000)) nil (26039 7462 935469 169000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-string-face fontified t)) . -3703) (undo-tree-id1311 . -1) (#("." 0 1 (face font-lock-string-face fontified t)) . -3704) (undo-tree-id1312 . -1) 3705) nil (26039 7462 935468 931000) 0 nil])
([nil nil ((3703 . 3705)) nil (26039 7462 935468 408000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-string-face fontified t)) . -3704) (undo-tree-id1310 . -1) 3705) nil (26039 7462 935468 154000) 0 nil])
([nil nil ((3704 . 3715)) nil (26039 7462 935467 828000) 0 nil])
([nil nil ((3639 . 3640)) nil (26039 7462 935467 696000) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-string-face fontified t)) . -3639) (undo-tree-id1309 . -1) 3640) nil (26039 7462 935467 526000) 0 nil])
([nil nil ((3640 . 3641)) nil (26039 7462 935467 208000) 0 nil])
([nil nil ((3710 . 3711)) nil (26039 7462 935467 83000) 0 nil])
([nil nil ((3719 . 3727) (#("        " 0 8 (fontified nil)) . 3718) (undo-tree-id1308 . -8) (3717 . 3727)) nil (26039 7462 935466 884000) 0 nil])
([nil nil ((3727 . 3733)) nil (26039 7462 935466 462000) 0 nil])
([nil nil ((#("/" 0 1 (face font-lock-operator-face fontified t)) . -3732) (undo-tree-id1307 . -1) 3733) nil (26039 7462 935466 84000) 0 nil])
([nil nil ((3732 . 3737)) nil (26039 7462 935465 612000) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-string-face fontified t)) . -3733) (undo-tree-id1303 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -3734) (undo-tree-id1304 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -3735) (undo-tree-id1305 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -3736) (undo-tree-id1306 . -1) 3737) nil (26039 7462 935465 364000) 0 nil])
([nil nil ((3733 . 3745)) nil (26039 7462 935462 819000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-string-face fontified t)) . -3744) (undo-tree-id1302 . -1) 3745) nil (26039 7462 935462 373000) 0 nil])
([nil nil ((3744 . 3751)) nil (26039 7462 935462 39000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3750) (undo-tree-id1301 . -1) 3751) nil (26039 7462 935461 750000) 0 nil])
([nil nil ((3750 . 3751)) nil (26039 7462 935461 319000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3750) (undo-tree-id1300 . -1) 3751) nil (26039 7462 935461 164000) 0 nil])
([nil nil ((3750 . 3771)) nil (26039 7462 935460 755000) 0 nil])
([nil nil ((3771 . 3777)) nil (26039 7462 935460 540000) 0 nil])
([nil nil ((3777 . 3786)) nil (26039 7462 935460 324000) 0 nil])
([nil nil ((3786 . 3794)) nil (26039 7462 935460 87000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -3793) (undo-tree-id1299 . -1) 3794) nil (26039 7462 935459 612000) 0 nil])
([nil nil ((3793 . 3804)) nil (26039 7462 935459 252000) 0 nil])
([nil nil ((#("/" 0 1 (face font-lock-operator-face fontified t)) . -3803) (undo-tree-id1298 . -1) 3804) nil (26039 7462 935459 83000) 0 nil])
([nil nil ((3800 . 3817) (#("nex" 0 3 (fontified t)) . -3800) (undo-tree-id1297 . -3) 3803) nil (26039 7462 935458 266000) 0 nil])
([nil nil ((3817 . 3826)) nil (26039 7462 935457 394000) 0 nil])
([nil nil ((3718 . 3727)) nil (26039 7462 935457 258000) 0 nil])
([nil nil ((3727 . 3733)) nil (26039 7462 935456 961000) 0 nil])
([nil nil ((#("/" 0 1 (face font-lock-operator-face fontified t)) . -3732) (undo-tree-id1296 . -1) 3733) nil (26039 7462 935456 451000) 0 nil])
([nil nil ((3732 . 3753)) nil (26039 7462 935448 352000) 0 nil])
([nil nil ((3753 . 3757)) nil (26039 7462 935448 171000) 0 nil])
([nil nil ((3865 . 3874)) nil (26039 7462 935447 756000) 0 nil])
([nil nil ((3874 . 3894)) nil (26039 7462 935443 973000) 0 nil])
([nil nil ((3185 . 3194) (t 26039 7462 934293 359000)) nil (26039 7485 138949 368000) 0 nil])
([nil nil ((#("import logging" 0 6 (face font-lock-keyword-face fontified t) 6 14 (fontified t)) . 16) (undo-tree-id1344 . -11) (t 26039 7485 142748 983000)) nil (26039 7531 10621 561000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -15) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) 16) nil (26039 7531 10620 923000) 0 nil])
([nil nil ((123 . 124)) nil (26039 7531 10541 425000) 0 nil])
([nil nil ((#("logAger = logging.getLogger(__name__)" 0 7 (face font-lock-variable-name-face fontified t) 7 8 (fontified t) 8 9 (face font-lock-operator-face fontified t) 9 28 (fontified t) 28 36 (face font-lock-builtin-face fontified t) 36 37 (fontified t)) . 120) (undo-tree-id1333 . -37) (undo-tree-id1334 . -3) (undo-tree-id1335 . -3) (undo-tree-id1336 . -3) (undo-tree-id1337 . -3) (undo-tree-id1338 . -3) (undo-tree-id1339 . -4) (undo-tree-id1340 . -37)) nil (26039 7531 10540 635000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -118) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (#("
" 0 1 (fontified t)) . -119) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) 120) nil (26039 7531 10536 518000) 0 nil])
([nil nil ((#("        started = asyncio.Event()" 0 8 (fontified t) 8 15 (face font-lock-variable-name-face fontified t) 15 16 (fontified t) 16 17 (face font-lock-operator-face fontified t) 17 18 (fontified t) 18 33 (fontified t)) . 3337) (undo-tree-id1354 . -12) (undo-tree-id1355 . -12) (undo-tree-id1356 . -12) (undo-tree-id1357 . -12) (undo-tree-id1358 . -12) (undo-tree-id1359 . -33) (t 26039 7531 15692 9000)) nil (26039 7562 347180 899000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3336) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) 3337) nil (26039 7808 724298 500000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . -3638) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) 3639 (t 26039 7562 348337 520000)) nil (26039 62956 806430 792000) 0 nil] [nil nil ((#(")" 0 1 (fontified nil rear-nonsticky t)) . 3336) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (3335 . 3336) (#("0" 0 1 (fontified nil)) . 3334) (3335 . 3336) (t 26039 7562 348337 520000)) ((#(")" 0 1 (fontified nil rear-nonsticky t)) . 3335) (3334 . 3335) (#("0" 0 1 (fontified nil)) . 3335) (3336 . 3337)) (26039 7808 559570 427000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -3624) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) 3625) nil (26039 62956 806430 152000) 0 nil])
([nil nil ((3842 . 3843)) ((#("w" 0 1 (fontified t)) . 3842)) (26039 7808 159670 880000) 0 nil])
([nil nil ((#("            return {
                str(p.relative_to(root))" 0 8 (fontified t) 8 12 (fontified t) 12 18 (face font-lock-keyword-face fontified t) 18 21 (fontified t) 21 37 (fontified t) 37 40 (face font-lock-builtin-face fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 61 (fontified t)) . 3389) (undo-tree-id1494 . -60) (undo-tree-id1495 . -18) (undo-tree-id1496 . -61) (undo-tree-id1497 . -61) (undo-tree-id1498 . -20) (undo-tree-id1499 . -21) (undo-tree-id1500 . -61) (undo-tree-id1501 . -61) 3450) nil (26039 62956 806429 426000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . -3388) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) 3389) nil (26039 62956 806427 532000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3401) 3439) nil (26039 62956 806424 775000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3400) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (#("f" 0 1 (fontified t)) . -3401) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (#("o" 0 1 (fontified t)) . -3402) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (#("r" 0 1 (face font-lock-keyword-face fontified t)) . -3403) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (#(" " 0 1 (fontified t)) . -3404) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (#("p" 0 1 (fontified t)) . -3405) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (#(" " 0 1 (fontified t)) . -3406) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (#("i" 0 1 (fontified t)) . -3407) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (#("n" 0 1 (face font-lock-keyword-face fontified t)) . -3408) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) 3409) nil (26039 62956 806423 745000) 0 nil])
([nil nil ((#("    " 0 3 (fontified t) 3 4 (fontified t)) . -3397) (undo-tree-id1395 . -4) (undo-tree-id1396 . -3) (undo-tree-id1397 . -3) (undo-tree-id1398 . -3) (undo-tree-id1399 . -3) (undo-tree-id1400 . -3) (undo-tree-id1401 . -3) (undo-tree-id1402 . -3) (undo-tree-id1403 . -3) (undo-tree-id1404 . -3) (undo-tree-id1405 . -3) (undo-tree-id1406 . -3) (undo-tree-id1407 . -3) (undo-tree-id1408 . -3) (undo-tree-id1409 . -3) (undo-tree-id1410 . -3) (undo-tree-id1411 . -4) (undo-tree-id1412 . -4) 3401) nil (26039 62956 806230 632000) 0 nil])
([nil nil ((3397 . 3401)) nil (26039 62956 806225 707000) 0 nil])
([nil nil ((3401 . 3402)) nil (26039 62956 806225 449000) 0 nil])
([nil nil ((3449 . 3455)) nil (26039 62956 806225 230000) 0 nil])
([nil nil ((#("            }" 0 12 (fontified t) 12 13 (fontified t)) . 3456) (undo-tree-id1392 . -13) (undo-tree-id1393 . -13) (undo-tree-id1394 . -13)) nil (26039 62956 806225 38000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3455) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) 3456) nil (26039 62956 806224 281000) 0 nil])
([nil nil ((#("set[str]:" 0 3 (face font-lock-builtin-face fontified t) 3 4 (fontified t) 4 7 (face font-lock-builtin-face fontified t) 7 9 (fontified t)) . 3379) (undo-tree-id1371 . -9) (undo-tree-id1372 . -9) (undo-tree-id1373 . -9) (undo-tree-id1374 . -9) (undo-tree-id1375 . -9) (undo-tree-id1376 . -9) (undo-tree-id1377 . -9) (undo-tree-id1378 . -9) (undo-tree-id1379 . -9) (undo-tree-id1380 . -9) (undo-tree-id1381 . -9) (undo-tree-id1382 . -9) (undo-tree-id1383 . -9) (undo-tree-id1384 . -9) (undo-tree-id1385 . -4) (undo-tree-id1386 . -9)) nil (26039 62956 806222 729000) 0 nil])
([nil nil ((3379 . 3383)) nil (26039 62956 806208 210000) 0 nil])
([nil nil ((#("        (root / \"create2.txt\").touch()" 0 14 (fontified t) 14 15 (face font-lock-operator-face fontified t) 15 16 (fontified t) 16 29 (face font-lock-string-face fontified t) 29 38 (fontified t)) . 3552) (undo-tree-id1530 . -8) (undo-tree-id1531 . -8) (undo-tree-id1532 . -38) (undo-tree-id1533 . -38) (undo-tree-id1534 . -38) (t 26039 62956 836128 382000)) nil (26039 62981 272038 746000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3551) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) 3552) nil (26039 62981 272037 533000) 0 nil])
([nil nil ((#("create2.txt\", \"existing.txt\"}" 0 12 (face font-lock-string-face fontified t) 12 14 (fontified t) 14 28 (face font-lock-string-face fontified t) 28 29 (fontified t)) . 3659) (undo-tree-id1517 . -29) (undo-tree-id1518 . -24) (undo-tree-id1519 . -15) (undo-tree-id1520 . -8) (undo-tree-id1521 . -29)) nil (26039 62981 272035 451000) 0 nil])
([nil nil ((3659 . 3673)) nil (26039 62981 272032 394000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -3672) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) 3673) nil (26039 62981 272032 117000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -3657) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) 3658) nil (26039 62981 272031 416000) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-string-face fontified t)) . -3475) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) 3476) nil (26039 62981 272030 510000) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-string-face fontified t)) . -3543) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) 3544) nil (26039 62981 272029 98000) 0 nil])
([nil nil ((#("batching" 0 8 (face font-lock-function-name-face fontified t)) . 3133) (undo-tree-id1506 . -8)) nil (26039 62981 272027 103000) 0 nil])
([nil nil ((3133 . 3150)) nil (26039 62981 272015 696000) 0 nil])
([nil nil ((#("path" 0 4 (fontified t)) . 3455) (undo-tree-id1553 . -4) (undo-tree-id1554 . -4) (t 26039 62981 280434 480000)) nil (26039 62995 420795 118000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3454) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) 3455) nil (26039 62995 420794 323000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -3405) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) 3406) nil (26039 62995 420793 343000) 0 nil])
([nil nil ((3405 . 3410)) nil (26039 62995 420792 731000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -3408) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (#("r" 0 1 (fontified t)) . -3409) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) 3410) nil (26039 62995 420792 304000) 0 nil])
([nil nil ((3408 . 3412)) nil (26039 62995 420789 219000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -3459) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) 3460) nil (26039 62995 420786 878000) 0 nil])
([nil nil ((3412 . 3413) (t 26039 62995 428611 861000)) nil (26039 63013 669182 142000) 0 nil])
([nil nil ((3460 . 3479)) nil (26039 63013 669178 783000) 0 nil])
([nil nil ((3413 . 3415) (t 26039 63013 676840 861000)) nil (26039 63026 269878 123000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -3413) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (#("t" 0 1 (fontified t)) . -3414) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) 3415) nil (26039 63026 269877 372000) 0 nil])
([nil nil ((3412 . 3416)) nil (26039 63026 269866 169000) 0 nil])
([nil nil ((3483 . 3484)) nil (26039 63026 269862 110000) 0 nil])
([nil nil ((3416 . 3513) (#("(await asyncio.wait_for(anext(modifications), 1)).relative_to(root)" 0 1 (fontified t) 1 6 (face font-lock-keyword-face fontified t) 6 67 (fontified t)) . 3416) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) 3484 (t 26039 63026 276999 113000)) nil (26039 63048 598109 867000) 0 nil])
([nil nil ((3735 . 3743) (#("        " 0 8 (fontified nil)) . 3734) (undo-tree-id1571 . -8) (undo-tree-id1572 . -8) (undo-tree-id1573 . -8) (3733 . 3743) (t 26039 63027 281011 728000)) nil (26039 63048 598108 784000) 0 nil])
([nil nil ((3743 . 3764)) nil (26039 63048 598107 955000) 0 nil])
([nil nil ((3764 . 3772)) nil (26039 63048 598107 814000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -3771) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) 3772) nil (26039 63048 598107 509000) 0 nil])
([nil nil ((3771 . 3775)) nil (26039 63048 598106 971000) 0 nil])
([nil nil ((#("assert (await next_modification()) == \"existing.txt\"" 0 6 (face font-lock-keyword-face fontified t) 6 8 (fontified t) 8 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 35 (fontified t) 35 37 (face font-lock-operator-face fontified t) 37 38 (fontified t) 38 52 (face font-lock-string-face fontified t)) . 3681) (undo-tree-id1561 . -52) (undo-tree-id1562 . -52) (undo-tree-id1563 . -52) (undo-tree-id1564 . -52) (undo-tree-id1565 . -52) (undo-tree-id1566 . -52) (undo-tree-id1567 . -32) (undo-tree-id1568 . -52)) nil (26039 63048 598106 500000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3732 . 3733) (nil fontified nil 3719 . 3733) (nil fontified nil 3718 . 3719) (nil fontified nil 3716 . 3718) (nil fontified nil 3695 . 3716) (nil fontified nil 3694 . 3695) (nil fontified nil 3689 . 3694) (nil fontified nil 3687 . 3689) (nil fontified nil 3681 . 3687) (3681 . 3733)) nil (26039 63048 598098 232000) 0 nil])
([nil nil ((3775 . 3784)) nil (26039 63048 598097 708000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3835 . 3836) (nil fontified nil 3822 . 3836) (nil fontified nil 3821 . 3822) (nil fontified nil 3819 . 3821) (nil fontified nil 3798 . 3819) (nil fontified nil 3797 . 3798) (nil fontified nil 3792 . 3797) (nil fontified nil 3790 . 3792) (nil fontified nil 3784 . 3790) (3784 . 3836)) nil (26039 63048 598094 810000) 0 nil])
([nil nil ((3862 . 3867) (t 26039 63048 605279 804000)) nil (26039 63640 936585 207000) 0 nil])
([nil nil ((3867 . 3870)) nil (26039 63640 936584 953000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -3867) (undo-tree-id1637 . -1) (#("e" 0 1 (fontified t)) . -3868) (undo-tree-id1638 . -1) (#("f" 0 1 (face font-lock-keyword-face fontified t)) . -3869) (undo-tree-id1639 . -1) 3870) nil (26039 63640 936584 681000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3863) (undo-tree-id1636 . -4) 3867) nil (26039 63640 936583 915000) 0 nil])
([nil nil ((3863 . 3881)) nil (26039 63640 936583 516000) 0 nil])
([nil nil ((3881 . 3885)) nil (26039 63640 936583 402000) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-function-name-face fontified t)) . -3882) (undo-tree-id1633 . -1) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -3883) (undo-tree-id1634 . -1) (#("w" 0 1 (face font-lock-function-name-face fontified t)) . -3884) (undo-tree-id1635 . -1) 3885) nil (26039 63640 936583 22000) 0 nil])
([nil nil ((3882 . 3897)) nil (26039 63640 936582 205000) 0 nil])
([nil nil ((#("new_directories" 0 15 (face font-lock-function-name-face fontified t)) . 3882)) nil (26039 63640 936582 71000) 0 nil])
([nil nil ((3882 . 3897)) nil (26039 63640 936581 952000) 0 nil])
([nil nil ((3897 . 3918)) nil (26039 63640 936581 767000) 0 nil])
([nil nil ((3918 . 3923)) nil (26039 63640 936581 650000) 0 nil])
([nil nil ((3923 . 3944)) nil (26039 63640 936581 529000) 0 nil])
([nil nil ((3944 . 3947)) nil (26039 63640 936581 329000) 0 nil])
([nil nil ((3947 . 3952)) nil (26039 63640 936581 213000) 0 nil])
([nil nil ((3952 . 3962)) nil (26039 63640 936581 26000) 0 nil])
([nil nil ((3962 . 3964)) nil (26039 63640 936580 904000) 0 nil])
([nil nil ((3966 . 3970) (#("    " 0 4 (fontified nil)) . 3965) (undo-tree-id1632 . -4) (3964 . 3970)) nil (26039 63640 936580 741000) 0 nil])
([nil nil ((3970 . 3975)) nil (26039 63640 936580 384000) 0 nil])
([nil nil ((#("    async" 0 4 (fontified t) 4 9 (fontified t)) . 3966)) nil (26039 63640 936580 171000) 0 nil])
([nil nil ((3966 . 3970)) nil (26039 63640 936580 60000) 0 nil])
([nil nil ((3970 . 3981)) nil (26039 63640 936579 940000) 0 nil])
([nil nil ((3970 . 3971)) nil (26039 63640 936579 828000) 0 nil])
([nil nil ((3982 . 3989)) nil (26039 63640 936579 588000) 0 nil])
([nil nil ((3989 . 3990)) nil (26039 63640 936579 469000) 0 nil])
([nil nil ((3992 . 3996) (#("    " 0 4 (fontified nil)) . 3991) (undo-tree-id1631 . -4) (3990 . 3996)) nil (26039 63640 936579 182000) 0 nil])
([nil nil ((3996 . 4001)) nil (26039 63640 936578 812000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4000) (undo-tree-id1630 . -1) 4001) nil (26039 63640 936578 651000) 0 nil])
([nil nil ((4000 . 4013)) nil (26039 63640 936578 287000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-operator-face fontified t)) . -4012) (undo-tree-id1629 . -1) 4013) nil (26039 63640 936578 78000) 0 nil])
([nil nil ((4012 . 4021)) nil (26039 63640 936577 674000) 0 nil])
([nil nil ((4021 . 4030)) nil (26039 63640 936577 565000) 0 nil])
([nil nil ((4021 . 4030)) nil (26039 63640 936577 440000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4247 . 4248) (nil fontified nil 4247 . 4248) (nil fontified nil 4246 . 4247) (nil fontified nil 4172 . 4246) (nil fontified nil 4167 . 4172) (nil fontified nil 4149 . 4167) (nil fontified nil 4148 . 4149) (nil fontified nil 4145 . 4148) (nil fontified nil 4144 . 4145) (nil fontified nil 4138 . 4144) (nil fontified nil 4126 . 4138) (nil fontified nil 4125 . 4126) (nil fontified nil 4124 . 4125) (nil fontified nil 4121 . 4124) (nil fontified nil 4120 . 4121) (nil fontified nil 4119 . 4120) (nil fontified nil 4118 . 4119) (nil fontified nil 4115 . 4118) (nil fontified nil 4098 . 4115) (nil fontified nil 4097 . 4098) (nil fontified nil 4088 . 4097) (nil fontified nil 4080 . 4088) (nil fontified nil 4079 . 4080) (nil fontified nil 4078 . 4079) (nil fontified nil 4077 . 4078) (nil fontified nil 4076 . 4077) (nil fontified nil 4075 . 4076) (nil fontified nil 4062 . 4075) (nil fontified nil 4058 . 4062) (nil fontified nil 4045 . 4058) (nil fontified nil 4044 . 4045) (nil fontified nil 4043 . 4044) (nil fontified nil 4030 . 4043) (4030 . 4248)) nil (26039 63640 936577 84000) 0 nil])
([nil nil ((#("wtach" 0 5 (face font-lock-function-name-face fontified t)) . 3872)) nil (26039 63640 936576 176000) 0 nil])
([nil nil ((3872 . 3877)) nil (26039 63640 936576 40000) 0 nil])
([nil nil ((4249 . 4257) (#("        " 0 8 (fontified nil)) . 4248) (undo-tree-id1626 . -8) (undo-tree-id1627 . -8) (undo-tree-id1628 . -8) (4247 . 4257)) nil (26039 63640 936575 791000) 0 nil])
([nil nil ((4257 . 4262)) nil (26039 63640 936575 81000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -4258) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (#("a" 0 1 (fontified t)) . -4259) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (#("i" 0 1 (fontified t)) . -4260) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (#("t" 0 1 (face font-lock-keyword-face fontified t)) . -4261) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) 4262) nil (26039 63640 936574 620000) 0 nil])
([nil nil ((4258 . 4279)) nil (26039 63640 936570 737000) 0 nil])
([nil nil ((4279 . 4294)) nil (26039 63640 936570 572000) 0 nil])
([nil nil ((4294 . 4296)) nil (26039 63640 936570 443000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -4295) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) 4296) nil (26039 63640 936570 258000) 0 nil])
([nil nil ((4295 . 4296)) nil (26039 63640 936569 698000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -4295) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) 4296) nil (26039 63640 936569 522000) 0 nil])
([nil nil ((4295 . 4304)) nil (26039 63640 936568 931000) 0 nil])
([nil nil ((#("file.t" 0 6 (face font-lock-string-face fontified t)) . 4298) (undo-tree-id1594 . -1) (undo-tree-id1595 . -2) (undo-tree-id1596 . -3) (undo-tree-id1597 . -4) (undo-tree-id1598 . -5) (undo-tree-id1599 . -6) (undo-tree-id1600 . -5) (undo-tree-id1601 . -6)) nil (26039 63640 936568 658000) 0 nil])
([nil nil ((4298 . 4309)) nil (26039 63640 936566 234000) 0 nil])
([nil nil ((3970 . 3972)) nil (26039 63640 936565 994000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -3970) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (#(" " 0 1 (fontified t)) . -3971) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) 3972) nil (26039 63640 936565 706000) 0 nil])
([nil nil ((3970 . 3978)) nil (26039 63640 936564 92000) 0 nil])
([nil nil ((#("mkdir()" 0 7 (fontified t)) . 3991) (undo-tree-id1583 . -7) (undo-tree-id1584 . -7) (undo-tree-id1585 . -7) (undo-tree-id1586 . -7) (undo-tree-id1587 . -7)) nil (26039 63640 936563 827000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -3990) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) 3991) nil (26039 63640 936562 366000) 0 nil])
([nil nil ((3970 . 3971)) nil (26039 63640 936619 349000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -3970) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) 3971) nil (26039 63654 42750 556000) 0 nil] [nil nil ((3971 . 3973)) ((#("ub" 0 2 (face font-lock-variable-name-face fontified t)) . 3971)) (26039 63640 936551 753000) 0 nil])
([nil nil ((3990 . 3995)) nil (26039 63654 42748 216000) 0 nil])
nil
([nil nil ((3995 . 4008)) nil (26039 63654 42747 858000) 0 nil])
([nil nil ((#("

" 0 1 (fontified t) 1 2 (fontified nil)) . 4328) (undo-tree-id1640 . -1) (#("        " 0 8 (fontified nil)) . 4329) (undo-tree-id1641 . -8) (4337 . 4338) 4327) nil (26039 63654 42744 939000) 0 nil])
([nil nil ((3863 . 3989) (#("def test_watch_all_directories(tmp_path: Path) -> None:
    root = tmp_path / \"root\"
    root.mkdir()

    dir_a = (root / \"a\")" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 30 (face font-lock-function-name-face fontified t) 30 47 (fontified t) 47 48 (face font-lock-operator-face fontified t) 48 49 (face font-lock-operator-face fontified t) 49 50 (fontified t) 50 54 (face font-lock-constant-face fontified t) 54 56 (fontified t) 56 60 (fontified t) 60 64 (face font-lock-variable-name-face fontified t) 64 65 (fontified t) 65 66 (face font-lock-operator-face fontified t) 66 76 (fontified t) 76 77 (face font-lock-operator-face fontified t) 77 78 (fontified t) 78 84 (face font-lock-string-face fontified t) 84 85 (fontified t) 85 102 (fontified t) 102 103 (fontified t) 103 107 (fontified t) 107 112 (face font-lock-variable-name-face fontified t) 112 113 (fontified t) 113 114 (face font-lock-operator-face fontified t) 114 115 (fontified t) 115 121 (fontified t) 121 122 (face font-lock-operator-face fontified t) 122 123 (fontified t) 123 126 (face font-lock-string-face fontified t) 126 127 (fontified t)) . 3863) (undo-tree-id1664 . -32) (undo-tree-id1665 . -107) (undo-tree-id1666 . -107) 4327 (t 26039 63654 48951 885000)) nil (26039 63677 74800 824000) 0 nil])
([nil nil ((4266 . 4274) (#("        " 0 8 (fontified nil)) . 4265) (undo-tree-id1661 . -8) (undo-tree-id1662 . -8) (undo-tree-id1663 . -8) (4264 . 4274) (t 26039 63655 72964 907000)) nil (26039 63677 74798 959000) 0 nil])
([nil nil ((4274 . 4280)) nil (26039 63677 74798 3000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -4279) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) 4280) nil (26039 63677 74797 756000) 0 nil])
([nil nil ((4279 . 4286)) nil (26039 63677 74797 193000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-string-face fontified t)) . -4283) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -4284) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (#("l" 0 1 (face font-lock-string-face fontified t)) . -4285) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) 4286) nil (26039 63677 74796 775000) 0 nil])
([nil nil ((4283 . 4295)) nil (26039 63677 74793 743000) 0 nil])
([nil nil ((4274 . 4275)) nil (26039 63677 74793 567000) 0 nil])
([nil nil ((4296 . 4305)) nil (26039 63677 74793 260000) 0 nil])
([nil nil ((#("X" 0 1 (fontified t)) . -4304) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) 4305) nil (26039 63687 730350 628000) 0 nil])
([nil nil ((4367 . 4376) (t 26039 63677 81244 777000)) nil (26039 63693 445006 897000) 0 nil] [nil nil ((4304 . 4313) (t 26039 63677 81244 777000)) ((#("
        " 0 1 (fontified t) 1 9 (fontified t)) . 4304) (undo-tree-id1674 . -9) (undo-tree-id1675 . -9) (undo-tree-id1676 . -9) (undo-tree-id1677 . -9) (undo-tree-id1678 . -1) (undo-tree-id1679 . -9)) (26039 63687 380047 7000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4372) (undo-tree-id1680 . -4) (undo-tree-id1681 . -4) (undo-tree-id1682 . -4) (undo-tree-id1683 . -4) (undo-tree-id1684 . -4) 4376) nil (26039 63693 445006 8000) 0 nil])
([nil nil ((4313 . 4319)) ((#("asser " 0 5 (fontified t) 5 6 (fontified t)) . 4313) (undo-tree-id1670 . -6) (undo-tree-id1671 . -6) (undo-tree-id1672 . -5) (undo-tree-id1673 . -6)) (26039 63687 140137 972000) 0 nil])
([nil nil ((4372 . 4391)) nil (26039 63693 444996 465000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4318) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) 4319) ((4318 . 4319)) (26039 63687 56611 153000) 0 nil])
([nil nil ((4391 . 4392)) nil (26039 63693 444992 932000) 0 nil])
([nil nil ((4318 . 4319)) ((#("t" 0 1 (face font-lock-keyword-face fontified t)) . 4318) (undo-tree-id1669 . -1)) (26039 63687 56558 621000) 0 nil])
([nil nil ((4391 . 4396) (t 26039 63693 453452 995000)) nil (26039 63700 765008 334000) 0 nil])
nil
([nil nil ((4396 . 4408)) nil (26039 63700 765004 930000) 0 nil])
([nil nil ((#("    assert False" 0 4 (fontified t) 4 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 16 (face font-lock-constant-face fontified t)) . 4392) (undo-tree-id1691 . -16) (undo-tree-id1692 . -16) (undo-tree-id1693 . -16) (t 26039 63700 769546 45000)) nil (26039 63706 623575 210000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4391) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) 4392) nil (26039 63706 623571 862000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4304) (undo-tree-id1804 . -1) 4305 (t 26039 63706 629620 579000)) nil (26039 63790 295538 866000) 0 nil])
([nil nil ((4367 . 4375) (#("        " 0 8 (fontified nil)) . 4366) (undo-tree-id1803 . -8) (4365 . 4375)) nil (26039 63790 295538 327000) 0 nil])
([nil nil ((4375 . 4376)) nil (26039 63790 295537 943000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -4375) (undo-tree-id1802 . -1) 4376) nil (26039 63790 295537 631000) 0 nil])
([nil nil ((4375 . 4379)) nil (26039 63790 295537 285000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -4378) (undo-tree-id1801 . -1) 4379) nil (26039 63790 295537 122000) 0 nil])
([nil nil ((4378 . 4381)) nil (26039 63790 295536 614000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -4378) (undo-tree-id1798 . -1) (#("a" 0 1 (fontified t)) . -4379) (undo-tree-id1799 . -1) (#(" " 0 1 (fontified t)) . -4380) (undo-tree-id1800 . -1) 4381) nil (26039 63790 295536 409000) 0 nil])
([nil nil ((4378 . 4387)) nil (26039 63790 295535 577000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -4385) (undo-tree-id1796 . -1) (#("_" 0 1 (fontified t)) . -4386) (undo-tree-id1797 . -1) 4387) nil (26039 63790 295535 394000) 0 nil])
([nil nil ((4385 . 4388)) nil (26039 63790 295534 843000) 0 nil])
([nil nil ((#("        dir_a / dir_b" 0 8 (fontified t) 8 14 (fontified t) 14 15 (face font-lock-operator-face fontified t) 15 16 (fontified t) 16 21 (fontified t)) . 4367)) nil (26039 63790 295534 689000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4365) (undo-tree-id1794 . -1) (#("
" 0 1 (fontified t)) . -4366) (undo-tree-id1795 . -1) 4367) nil (26039 63790 295534 371000) 0 nil])
([nil nil ((4009 . 4013) (#("    " 0 4 (fontified nil)) . 4008) (undo-tree-id1793 . -4) (4007 . 4013)) nil (26039 63790 295533 772000) 0 nil])
([nil nil ((4013 . 4021)) nil (26039 63790 295533 382000) 0 nil])
([nil nil ((#("B" 0 1 (fontified t)) . -4017) (undo-tree-id1789 . -1) (#(" " 0 1 (fontified t)) . -4018) (undo-tree-id1790 . -1) (#("=" 0 1 (face font-lock-operator-face fontified t)) . -4019) (undo-tree-id1791 . -1) (#(" " 0 1 (fontified t)) . -4020) (undo-tree-id1792 . -1) 4021) nil (26039 63790 295533 40000) 0 nil])
([nil nil ((4017 . 4021)) nil (26039 63790 295336 684000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-operator-face fontified t)) . -4019) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (#(" " 0 1 (fontified t)) . -4020) (undo-tree-id1788 . -1) 4021) nil (26039 63790 295336 480000) 0 nil])
([nil nil ((4019 . 4030)) nil (26039 63790 295335 365000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-variable-name-face fontified t)) . -4017) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) 4018) nil (26039 63790 295335 205000) 0 nil])
([nil nil ((4017 . 4018)) nil (26039 63790 295334 692000) 0 nil])
([nil nil ((4030 . 4036)) nil (26039 63790 295334 567000) 0 nil])
([nil nil ((4036 . 4041)) nil (26039 63790 295334 430000) 0 nil])
([nil nil ((4041 . 4054)) nil (26039 63790 295334 189000) 0 nil])
([nil nil ((#("dir" 0 3 (face font-lock-string-face fontified t)) . 4030) (undo-tree-id1780 . -1) (undo-tree-id1781 . -2) (undo-tree-id1782 . -3) (undo-tree-id1783 . -3)) nil (26039 63790 295334 10000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-string-face fontified t)) . -4030) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) 4031) nil (26039 63790 295333 141000) 0 nil])
([nil nil ((#("directories" 0 11 (face font-lock-function-name-face fontified t)) . 3883) (undo-tree-id1775 . -11)) nil (26039 63790 295332 154000) 0 nil])
([nil nil ((3883 . 3893)) nil (26039 63790 295331 702000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -4321) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) 4322) nil (26039 63790 295331 416000) 0 nil])
([nil nil ((4321 . 4322)) nil (26039 63790 295330 889000) 0 nil])
([nil nil ((3965 . 3970)) nil (26039 63790 295330 764000) 0 nil])
([nil nil ((3970 . 3987)) nil (26039 63790 295330 640000) 0 nil])
([nil nil ((3970 . 3971)) nil (26039 63790 295330 504000) 0 nil])
([nil nil ((3988 . 3994)) nil (26039 63790 295330 360000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3988) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (#("." 0 1 (fontified t)) . -3989) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (#(" " 0 1 (fontified t)) . -3990) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (#("m" 0 1 (fontified t)) . -3991) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (#("k" 0 1 (fontified t)) . -3992) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (#("d" 0 1 (fontified t)) . -3993) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) 3994) nil (26039 63790 295329 711000) 0 nil])
([nil nil ((3988 . 3997)) nil (26039 63790 295320 415000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -3996) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) 3997) nil (26039 63790 295320 238000) 0 nil])
([nil nil ((3996 . 4008)) nil (26039 63790 295319 538000) 0 nil])
([nil nil ((#("    dir_a = root / \"a\"
    dir_a.mkdir()

    dir_b = dir_a / \"b\"
    dir_b.mkdir()
" 0 4 (fontified t) 4 9 (face font-lock-variable-name-face fontified t) 9 10 (fontified t) 10 11 (face font-lock-operator-face fontified t) 11 17 (fontified t) 17 18 (face font-lock-operator-face fontified t) 18 19 (fontified t) 19 22 (face font-lock-string-face fontified t) 22 23 (fontified t) 23 27 (fontified t) 27 41 (fontified t) 41 42 (fontified t) 42 46 (fontified t) 46 51 (face font-lock-variable-name-face fontified t) 51 52 (fontified t) 52 53 (face font-lock-operator-face fontified t) 53 54 (fontified t) 54 60 (fontified t) 60 61 (face font-lock-operator-face fontified t) 61 62 (fontified t) 62 65 (face font-lock-string-face fontified t) 65 66 (fontified t) 66 70 (fontified t) 70 83 (fontified t) 83 84 (fontified t)) . 4009) (undo-tree-id1709 . -84) (undo-tree-id1710 . -40) (undo-tree-id1711 . -52) (undo-tree-id1712 . -50) (undo-tree-id1713 . -63) (undo-tree-id1714 . -63) (undo-tree-id1715 . -63) (undo-tree-id1716 . -63) (undo-tree-id1717 . -63) (undo-tree-id1718 . -63) (undo-tree-id1719 . -22) (undo-tree-id1720 . -4) (undo-tree-id1721 . -4) (undo-tree-id1722 . -12) (undo-tree-id1723 . -46) (undo-tree-id1724 . -46) (undo-tree-id1725 . -54) (undo-tree-id1726 . -40) (undo-tree-id1727 . -84) (undo-tree-id1728 . -84) 4093) nil (26039 63790 295318 957000) 0 nil])
([nil nil ((#("create.txt\").touch()" 0 11 (face font-lock-string-face fontified t) 11 20 (fontified t)) . 4285) (undo-tree-id1705 . -20) (undo-tree-id1706 . -13) (undo-tree-id1707 . -7) (undo-tree-id1708 . -20)) nil (26039 63790 295313 757000) 0 nil])
([nil nil ((#("dir_b / \"" 0 6 (fontified t) 6 7 (face font-lock-operator-face fontified t) 7 8 (fontified t) 8 9 (face font-lock-string-face fontified t)) . 4276) (undo-tree-id1698 . -4) (undo-tree-id1699 . -9) (undo-tree-id1700 . -9) (undo-tree-id1701 . -9) (undo-tree-id1702 . -9) (undo-tree-id1703 . -4) (undo-tree-id1704 . -9)) nil (26039 63790 295311 392000) 0 nil])
([nil nil ((4276 . 4293)) nil (26039 63790 295309 71000) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-string-face fontified t)) . -4292) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) 4293) nil (26039 63790 295308 810000) 0 nil])
([nil nil ((4292 . 4308)) nil (26039 63790 295307 543000) 0 nil])
([nil nil ((4308 . 4315)) nil (26039 63790 295307 242000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -4314) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) 4315) nil (26039 63790 295306 772000) 0 nil])
([nil nil ((4314 . 4316)) nil (26039 63790 295297 948000) 0 nil])
([nil nil ((4366 . 4368)) nil (26039 63790 295295 37000) 0 nil])
([nil nil ((4406 . 4410) (#("    " 0 4 (fontified nil)) . 4405) (undo-tree-id1888 . -4) (4404 . 4410) (t 26039 63790 298684 909000)) nil (26039 64003 291701 580000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4406) (undo-tree-id1887 . -4) 4410) nil (26039 64003 291701 153000) 0 nil])
([nil nil ((4406 . 4425)) nil (26039 64003 291700 799000) 0 nil])
([nil nil ((4425 . 4446)) nil (26039 64003 291700 476000) 0 nil])
([nil nil ((4446 . 4463)) nil (26039 64003 291700 352000) 0 nil])
([nil nil ((4463 . 4468)) nil (26039 64003 291700 91000) 0 nil])
([nil nil ((4468 . 4489)) nil (26039 64003 291699 892000) 0 nil])
([nil nil ((4489 . 4491)) nil (26039 64003 291699 773000) 0 nil])
([nil nil ((4491 . 4492)) nil (26039 64003 291699 650000) 0 nil])
([nil nil ((4492 . 4497)) nil (26039 64003 291699 516000) 0 nil])
([nil nil ((4497 . 4511)) nil (26039 64003 291699 399000) 0 nil])
([nil nil ((4511 . 4516)) nil (26039 64003 291699 281000) 0 nil])
([nil nil ((4516 . 4526)) nil (26039 64003 291699 81000) 0 nil])
([nil nil ((4516 . 4517)) nil (26039 64003 291698 954000) 0 nil])
([nil nil ((4527 . 4530)) nil (26039 64003 291698 826000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4528) (undo-tree-id1885 . -1) (#("." 0 1 (fontified t)) . -4529) (undo-tree-id1886 . -1) 4530) nil (26039 64003 291698 623000) 0 nil])
([nil nil ((4528 . 4536)) nil (26039 64003 291697 784000) 0 nil])
([nil nil ((4538 . 4542) (#("    " 0 4 (fontified nil)) . 4537) (undo-tree-id1884 . -4) (4536 . 4542)) nil (26039 64003 291697 461000) 0 nil])
([nil nil ((4542 . 4546)) nil (26039 64003 291696 881000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -4544) (undo-tree-id1882 . -1) (#("y" 0 1 (fontified t)) . -4545) (undo-tree-id1883 . -1) 4546) nil (26039 64003 291696 578000) 0 nil])
([nil nil ((4544 . 4565)) nil (26039 64003 291695 598000) 0 nil])
([nil nil ((4565 . 4567)) nil (26039 64003 291695 437000) 0 nil])
([nil nil ((4567 . 4576)) nil (26039 64003 291695 231000) 0 nil])
([nil nil ((4576 . 4579)) nil (26039 64003 291695 108000) 0 nil])
([nil nil ((4581 . 4589) (#("        " 0 8 (fontified nil)) . 4580) (undo-tree-id1881 . -8) (4579 . 4589)) nil (26039 64003 291694 830000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4585) (undo-tree-id1880 . -4) 4589) nil (26039 64003 291694 315000) 0 nil])
([nil nil ((4585 . 4604)) nil (26039 64003 291693 998000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -4576) (undo-tree-id1877 . -1) (#("." 0 1 (fontified t)) . -4577) (undo-tree-id1878 . -1) (#("." 0 1 (fontified t)) . -4578) (undo-tree-id1879 . -1) 4579) nil (26039 64003 291693 664000) 0 nil])
([nil nil ((4567 . 4576)) nil (26039 64003 291692 715000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4792 . 4793) (nil fontified nil 4792 . 4793) (nil fontified nil 4780 . 4792) (nil fontified nil 4718 . 4780) (nil fontified nil 4713 . 4718) (nil fontified nil 4695 . 4713) (nil fontified nil 4694 . 4695) (nil fontified nil 4691 . 4694) (nil fontified nil 4690 . 4691) (nil fontified nil 4684 . 4690) (nil fontified nil 4672 . 4684) (nil fontified nil 4671 . 4672) (nil fontified nil 4670 . 4671) (nil fontified nil 4667 . 4670) (nil fontified nil 4666 . 4667) (nil fontified nil 4665 . 4666) (nil fontified nil 4664 . 4665) (nil fontified nil 4661 . 4664) (nil fontified nil 4644 . 4661) (nil fontified nil 4643 . 4644) (nil fontified nil 4634 . 4643) (nil fontified nil 4626 . 4634) (nil fontified nil 4625 . 4626) (nil fontified nil 4624 . 4625) (nil fontified nil 4623 . 4624) (nil fontified nil 4622 . 4623) (nil fontified nil 4621 . 4622) (nil fontified nil 4608 . 4621) (nil fontified nil 4604 . 4608) (nil fontified nil 4591 . 4604) (nil fontified nil 4590 . 4591) (nil fontified nil 4589 . 4590) (nil fontified nil 4576 . 4589) (4576 . 4793)) nil (26039 64003 291692 204000) 0 nil])
([nil nil ((4795 . 4803) (#("        " 0 8 (fontified nil)) . 4794) (undo-tree-id1876 . -8) (4793 . 4803)) nil (26039 64003 291690 852000) 0 nil])
([nil nil ((4803 . 4810)) nil (26039 64003 291690 349000) 0 nil])
([nil nil ((#("/" 0 1 (face font-lock-operator-face fontified t)) . -4809) (undo-tree-id1875 . -1) 4810) nil (26039 64003 291690 175000) 0 nil])
([nil nil ((4809 . 4814)) nil (26039 64003 291689 770000) 0 nil])
([nil nil ((4803 . 4804)) nil (26039 64003 291689 623000) 0 nil])
([nil nil ((4814 . 4820)) nil (26039 64003 291689 385000) 0 nil])
([nil nil ((4821 . 4829)) nil (26039 64003 291689 239000) 0 nil])
([nil nil ((#("read" 0 4 (fontified t)) . 3332) (undo-tree-id1874 . -4)) nil (26039 64003 291688 891000) 0 nil])
([nil nil ((#("_delay" 0 6 (fontified t)) . 3332) (undo-tree-id1867 . -3) (undo-tree-id1868 . -3) (undo-tree-id1869 . -3) (undo-tree-id1870 . -3) (undo-tree-id1871 . -3) (undo-tree-id1872 . -1) (undo-tree-id1873 . -6)) nil (26039 64003 291688 198000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3331) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) 3332) nil (26039 64003 291686 814000) 0 nil])
([nil nil ((#("=0" 0 1 (face font-lock-operator-face fontified t) 1 2 (fontified t)) . 3331) (undo-tree-id1858 . -2)) nil (26039 64003 291684 996000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -3330) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) 3331) nil (26039 64003 291684 512000) 0 nil])
([nil nil ((#("read" 0 4 (fontified t)) . 4069) (undo-tree-id1843 . -4) (undo-tree-id1844 . -4) (undo-tree-id1845 . -4) (undo-tree-id1846 . -4) (undo-tree-id1847 . -4) (undo-tree-id1848 . -4)) nil (26039 64003 291682 592000) 0 nil])
([nil nil ((#("_delay" 0 6 (fontified t)) . 4069) (undo-tree-id1842 . -6)) nil (26039 64003 291681 162000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -4067) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (#(" " 0 1 (fontified t)) . -4068) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) 4069) nil (26039 64003 291680 681000) 0 nil])
([nil nil ((#("=0)" 0 1 (face font-lock-operator-face fontified t) 1 2 (fontified t) 2 3 (fontified t rear-nonsticky t)) . 4067) (undo-tree-id1826 . -3)) nil (26039 64003 291677 275000) 0 nil])
([nil nil ((4067 . 4068)) nil (26039 64003 291676 912000) 0 nil])
([nil nil ((#("read_delay=0)" 0 10 (fontified t) 10 11 (face font-lock-operator-face fontified t) 11 12 (fontified t) 12 13 (fontified t rear-nonsticky t)) . 4583) (undo-tree-id1820 . -4) (undo-tree-id1821 . -4) (undo-tree-id1822 . -4) (undo-tree-id1823 . -4) (undo-tree-id1824 . -4) (undo-tree-id1825 . -13)) nil (26039 64003 291676 657000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -4581) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (#(" " 0 1 (fontified t)) . -4582) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) 4583) nil (26039 64003 291674 588000) 0 nil])
([nil nil ((4581 . 4582)) nil (26039 64003 291661 733000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . 4788) 4582) nil (26039 64003 291657 726000) 0 nil])
([nil nil ((4378 . 4788) (#("def test_watch_all_track_new_dir(tmp_path: Path) -> None:
    root = tmp_path / \"root\"
    root = mkdir()
    (root / \"a\").mkdir()

    async def body() -> None:
        modifications = watch_all2([root])

        async def next_modification() -> str:
            return str(
                (await asyncio.wait_for(anext(modifications), 1)).relative_to(root)
            )

        (root / \"a\" / \"b\").mkdir()
" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 32 (face font-lock-function-name-face fontified t) 32 49 (fontified t) 49 50 (face font-lock-operator-face fontified t) 50 51 (face font-lock-operator-face fontified t) 51 52 (fontified t) 52 56 (face font-lock-constant-face fontified t) 56 58 (fontified t) 58 62 (fontified t) 62 66 (face font-lock-variable-name-face fontified t) 66 67 (fontified t) 67 68 (face font-lock-operator-face fontified t) 68 78 (fontified t) 78 79 (face font-lock-operator-face fontified t) 79 80 (fontified t) 80 86 (face font-lock-string-face fontified t) 86 87 (fontified t) 87 91 (fontified t) 91 95 (face font-lock-variable-name-face fontified t) 95 96 (fontified t) 96 97 (face font-lock-operator-face fontified t) 97 106 (fontified t) 106 116 (fontified t) 116 117 (face font-lock-operator-face fontified t) 117 118 (fontified t) 118 121 (face font-lock-string-face fontified t) 121 131 (fontified t) 131 132 (fontified t) 132 136 (fontified t) 136 145 (face font-lock-keyword-face fontified t) 145 146 (fontified t) 146 150 (face font-lock-function-name-face fontified t) 150 153 (fontified t) 153 154 (face font-lock-operator-face fontified t) 154 155 (face font-lock-operator-face fontified t) 155 156 (fontified t) 156 160 (face font-lock-constant-face fontified t) 160 162 (fontified t) 162 170 (fontified t) 170 183 (face font-lock-variable-name-face fontified t) 183 184 (fontified t) 184 185 (face font-lock-operator-face fontified t) 185 198 (fontified t) 198 202 (fontified t) 202 204 (fontified t) 204 205 (fontified t) 205 206 (fontified t) 206 214 (fontified t) 214 223 (face font-lock-keyword-face fontified t) 223 224 (fontified t) 224 241 (face font-lock-function-name-face fontified t) 241 244 (fontified t) 244 245 (face font-lock-operator-face fontified t) 245 246 (face font-lock-operator-face fontified t) 246 247 (fontified t) 247 250 (face font-lock-builtin-face fontified t) 250 251 (fontified t) 251 252 (fontified t) 252 264 (fontified t) 264 270 (face font-lock-keyword-face fontified t) 270 271 (fontified t) 271 274 (face font-lock-builtin-face fontified t) 274 275 (fontified t) 275 293 (fontified t) 293 298 (face font-lock-keyword-face fontified t) 298 360 (fontified t) 360 372 (fontified t) 372 373 (fontified t rear-nonsticky t) 373 374 (fontified t) 374 375 (fontified t) 375 389 (fontified t) 389 390 (face font-lock-operator-face fontified t) 390 391 (fontified t) 391 394 (face font-lock-string-face fontified t) 394 395 (fontified t) 395 396 (face font-lock-operator-face fontified t) 396 397 (fontified t) 397 400 (face font-lock-string-face fontified t) 400 409 (fontified t) 409 410 (fontified t)) . 4378) (undo-tree-id1901 . -170) (undo-tree-id1902 . -203) (undo-tree-id1903 . -204) (undo-tree-id1904 . -203) (undo-tree-id1905 . -203) (undo-tree-id1906 . -203) (undo-tree-id1907 . -203) (undo-tree-id1908 . -203) (undo-tree-id1909 . -203) (undo-tree-id1910 . -162) (undo-tree-id1911 . -204) (undo-tree-id1912 . -204) (undo-tree-id1913 . -204) 4582 (t 26039 64003 297395 275000)) nil (26039 64017 259067 279000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4474) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (#("=" 0 1 (face font-lock-operator-face fontified t)) . -4475) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (#(" " 0 1 (fontified t)) . -4476) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) 4477 (t 26039 64004 357408 766000)) nil (26039 64017 259062 623000) 0 nil])
([nil nil ((4474 . 4475)) nil (26039 64017 259049 258000) 0 nil])
([nil nil ((4786 . 4795) (t 26039 64017 261572 995000)) nil (26039 64181 581149 77000) 0 nil])
([nil nil ((4795 . 4816)) nil (26039 64181 581148 773000) 0 nil])
([nil nil ((4816 . 4818)) nil (26039 64181 581148 598000) 0 nil])
([nil nil ((4795 . 4796)) nil (26039 64181 581148 367000) 0 nil])
([nil nil ((#("await (next_modificatib" 0 5 (fontified t) 5 7 (fontified t) 7 23 (fontified t)) . 4796) (undo-tree-id1940 . -1) (undo-tree-id1941 . -2) (undo-tree-id1942 . -3) (undo-tree-id1943 . -4) (undo-tree-id1944 . -5) (undo-tree-id1945 . -6) (undo-tree-id1946 . -7) (undo-tree-id1947 . -8) (undo-tree-id1948 . -9) (undo-tree-id1949 . -10) (undo-tree-id1950 . -11) (undo-tree-id1951 . -12) (undo-tree-id1952 . -13) (undo-tree-id1953 . -14) (undo-tree-id1954 . -15) (undo-tree-id1955 . -16) (undo-tree-id1956 . -17) (undo-tree-id1957 . -18) (undo-tree-id1958 . -19) (undo-tree-id1959 . -20) (undo-tree-id1960 . -21) (undo-tree-id1961 . -22) (undo-tree-id1962 . -23) (undo-tree-id1963 . -23)) nil (26039 64181 581147 962000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -4795) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) 4796) nil (26039 64181 706976 438000) 0 nil])
([nil nil ((4795 . 4807)) nil (26039 64194 712842 250000) 0 nil] [nil nil ((#("
" 0 1 (fontified t)) . 4795) (undo-tree-id1914 . -1)) ((4795 . 4796)) (26039 64181 581181 959000) 0 nil])
([nil nil ((4802 . 4803)) nil (26039 64194 712841 954000) 0 nil])
([nil nil ((4795 . 4797)) ((#("as" 0 2 (face font-lock-keyword-face fontified t)) . 4795) (undo-tree-id1964 . -2)) (26039 64181 581127 260000) 0 nil])
([nil nil ((4808 . 4811)) nil (26039 64194 712841 692000) 0 nil])
nil
([nil nil ((4811 . 4812)) nil (26039 64194 712841 437000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -4811) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) 4812) nil (26039 64194 712841 132000) 0 nil])
([nil nil ((4811 . 4830)) nil (26039 64194 712839 404000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4829) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) 4830) nil (26039 64194 712838 887000) 0 nil])
([nil nil ((4829 . 4838)) nil (26039 64194 712828 201000) 0 nil])
([nil nil ((#("(root / \"a\" / \"b\").mkdir()" 0 6 (fontified t) 6 7 (face font-lock-operator-face fontified t) 7 8 (fontified t) 8 11 (face font-lock-string-face fontified t) 11 12 (fontified t) 12 13 (face font-lock-operator-face fontified t) 13 14 (fontified t) 14 17 (face font-lock-string-face fontified t) 17 26 (fontified t)) . 4760) (undo-tree-id1987 . -24) (t 26039 64194 719831 715000)) nil (26039 64230 113029 203000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4785 . 4786) (nil fontified nil 4777 . 4786) (nil fontified nil 4774 . 4777) (nil fontified nil 4773 . 4774) (nil fontified nil 4772 . 4773) (nil fontified nil 4771 . 4772) (nil fontified nil 4768 . 4771) (nil fontified nil 4767 . 4768) (nil fontified nil 4766 . 4767) (nil fontified nil 4760 . 4766) (4760 . 4786)) nil (26039 64230 113028 639000) 0 nil])
([nil nil ((4840 . 4848) (#("        " 0 8 (fontified nil)) . 4839) (undo-tree-id1986 . -8) (4838 . 4848)) nil (26039 64230 113028 138000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4873 . 4874) (nil fontified nil 4865 . 4874) (nil fontified nil 4862 . 4865) (nil fontified nil 4861 . 4862) (nil fontified nil 4860 . 4861) (nil fontified nil 4859 . 4860) (nil fontified nil 4856 . 4859) (nil fontified nil 4855 . 4856) (nil fontified nil 4854 . 4855) (nil fontified nil 4848 . 4854) (4848 . 4874)) nil (26039 64230 113027 535000) 0 nil])
([nil nil ((#("mkdir()" 0 6 (fontified t) 6 7 (rear-nonsticky t fontified t)) . 4867)) nil (26039 64230 113027 73000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -4865) (undo-tree-id1984 . -1) (#("." 0 1 (fontified t)) . -4866) (undo-tree-id1985 . -1) 4867) nil (26039 64230 113026 885000) 0 nil])
([nil nil ((4865 . 4872)) nil (26039 64230 113026 345000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-string-face fontified t)) . -4869) (undo-tree-id1981 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -4870) (undo-tree-id1982 . -1) (#("l" 0 1 (face font-lock-string-face fontified t)) . -4871) (undo-tree-id1983 . -1) 4872) nil (26039 64230 113026 122000) 0 nil])
([nil nil ((4869 . 4871)) nil (26039 64230 113025 241000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-string-face fontified t)) . -4869) (undo-tree-id1979 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -4870) (undo-tree-id1980 . -1) 4871) nil (26039 64230 113024 939000) 0 nil])
([nil nil ((4869 . 4870)) nil (26039 64230 113024 283000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-string-face fontified t)) . -4869) (undo-tree-id1978 . -1) 4870) nil (26039 64230 113023 931000) 0 nil])
([nil nil ((4869 . 4880)) nil (26039 64230 113023 564000) 0 nil])
([nil nil ((4880 . 4885)) nil (26039 64230 113023 382000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -4884) (undo-tree-id1977 . -1) 4885) nil (26039 64230 113023 104000) 0 nil])
([nil nil ((4884 . 4889)) nil (26039 64230 113022 586000) 0 nil])
([nil nil ((4889 . 4898)) nil (26039 64230 113022 304000) 0 nil])
([nil nil ((#("assert (await next_modification()) == \"a/b\"" 0 6 (face font-lock-keyword-face fontified t) 6 8 (fontified t) 8 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 35 (fontified t) 35 37 (face font-lock-operator-face fontified t) 37 38 (fontified t) 38 43 (face font-lock-string-face fontified t)) . 4795)) nil (26039 64230 113022 150000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4837 . 4838) (nil fontified nil 4833 . 4838) (nil fontified nil 4832 . 4833) (nil fontified nil 4830 . 4832) (nil fontified nil 4809 . 4830) (nil fontified nil 4808 . 4809) (nil fontified nil 4803 . 4808) (nil fontified nil 4801 . 4803) (nil fontified nil 4795 . 4801) (4795 . 4838)) nil (26039 64230 113021 946000) 0 nil])
([nil nil ((4889 . 4898)) nil (26039 64230 113021 436000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4940 . 4941) (nil fontified nil 4936 . 4941) (nil fontified nil 4935 . 4936) (nil fontified nil 4933 . 4935) (nil fontified nil 4912 . 4933) (nil fontified nil 4911 . 4912) (nil fontified nil 4906 . 4911) (nil fontified nil 4904 . 4906) (nil fontified nil 4898 . 4904) (4898 . 4941)) nil (26039 64230 113021 196000) 0 nil])
([nil nil ((4940 . 4948)) nil (26039 64230 113020 812000) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-string-face fontified t)) . -4946) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -4947) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) 4948) nil (26039 64230 113020 462000) 0 nil])
([nil nil ((4946 . 4948)) nil (26039 64230 113018 197000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-string-face fontified t)) . -4947) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) 4948) nil (26039 64230 113017 809000) 0 nil])
([nil nil ((4947 . 4951)) nil (26039 64230 113008 993000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . 4953) 4952) nil (26039 64230 113005 454000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4954) (undo-tree-id2024 . -1) 4952 (t 26039 64230 144282 639000)) nil (26039 64318 28167 491000) 0 nil])
([nil nil ((4954 . 4962) (#("        " 0 8 (fontified nil)) . 4953) (undo-tree-id2021 . -8) (undo-tree-id2022 . -8) (undo-tree-id2023 . -8) (4952 . 4962) (t 26039 64231 204296 132000)) nil (26039 64318 28167 14000) 0 nil])
([nil nil ((4962 . 4967)) nil (26039 64318 28166 221000) 0 nil])
([nil nil ((4967 . 4976)) nil (26039 64318 28166 18000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -4972) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (#("/" 0 1 (face font-lock-operator-face fontified t)) . -4973) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (#(" " 0 1 (fontified t)) . -4974) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -4975) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) 4976) nil (26039 64318 28165 530000) 0 nil])
([nil nil ((4972 . 4978)) nil (26039 64318 28160 364000) 0 nil])
([nil nil ((4978 . 4982)) nil (26039 64318 28160 168000) 0 nil])
([nil nil ((4973 . 4979)) nil (26039 64318 28160 50000) 0 nil])
([nil nil ((4988 . 4997)) nil (26039 64318 28159 925000) 0 nil])
([nil nil ((4997 . 4998)) nil (26039 64318 28159 799000) 0 nil])
([nil nil ((#("assert (await next_modification()) == \"a/b/create.txt\"" 0 6 (face font-lock-keyword-face fontified t) 6 8 (fontified t) 8 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 35 (fontified t) 35 37 (face font-lock-operator-face fontified t) 37 38 (fontified t) 38 53 (face font-lock-string-face fontified t) 53 54 (face font-lock-string-face fontified t rear-nonsticky t)) . 4898) (undo-tree-id1999 . -1) (undo-tree-id2000 . -54)) nil (26039 64318 28159 604000) 0 nil])
([nil nil ((nil fontified nil 4951 . 4952) (nil fontified nil 4936 . 4951) (nil fontified nil 4935 . 4936) (nil fontified nil 4933 . 4935) (nil fontified nil 4912 . 4933) (nil fontified nil 4911 . 4912) (nil fontified nil 4906 . 4911) (nil fontified nil 4904 . 4906) (nil fontified nil 4898 . 4904) (4898 . 4952)) nil (26039 64318 28159 22000) 0 nil])
([nil nil ((4998 . 4999)) nil (26039 64318 28158 511000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -4997) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (#("\\" 0 1 (fontified t)) . -4998) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) 4999) nil (26039 64318 28158 190000) 0 nil])
([nil nil ((nil fontified nil 5050 . 5051) (nil fontified nil 5035 . 5050) (nil fontified nil 5034 . 5035) (nil fontified nil 5032 . 5034) (nil fontified nil 5011 . 5032) (nil fontified nil 5010 . 5011) (nil fontified nil 5005 . 5010) (nil fontified nil 5003 . 5005) (nil fontified nil 4997 . 5003) (4997 . 5051)) nil (26039 64318 28156 206000) 0 nil])
([nil nil ((#("b/create.txt\"" 0 12 (face font-lock-string-face fontified t) 12 13 (face font-lock-string-face fontified t rear-nonsticky t)) . 5038) (undo-tree-id1988 . -13) (undo-tree-id1989 . -9) (undo-tree-id1990 . -2) (undo-tree-id1991 . -13)) nil (26039 64318 28155 346000) 0 nil])
([nil nil ((5038 . 5040)) nil (26039 64318 28145 173000) 0 nil])
([nil nil ((4988 . 4997) (t 26039 64318 37401 445000)) nil (26039 64348 997319 803000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5029 . 5030) (nil fontified nil 5029 . 5030) (nil fontified nil 5017 . 5029) (nil fontified nil 5016 . 5017) (nil fontified nil 5015 . 5016) (nil fontified nil 5014 . 5015) (nil fontified nil 5011 . 5014) (nil fontified nil 5010 . 5011) (nil fontified nil 5009 . 5010) (nil fontified nil 5008 . 5009) (nil fontified nil 5005 . 5008) (nil fontified nil 5004 . 5005) (nil fontified nil 5003 . 5004) (nil fontified nil 4997 . 5003) (4997 . 5030)) nil (26039 64348 997319 528000) 0 nil])
([nil nil ((5030 . 5039)) nil (26039 64348 997319 104000) 0 nil])
([nil nil ((#("        (root / \"a\" / \"b\").rmdir()" 0 14 (fontified t) 14 15 (face font-lock-operator-face fontified t) 15 16 (fontified t) 16 19 (face font-lock-string-face fontified t) 19 20 (fontified t) 20 21 (face font-lock-operator-face fontified t) 21 22 (fontified t) 22 25 (face font-lock-string-face fontified t) 25 34 (fontified t)) . 4954) (undo-tree-id2049 . -18) (undo-tree-id2050 . -18) (undo-tree-id2051 . -18) (undo-tree-id2052 . -18) (undo-tree-id2053 . -18) (undo-tree-id2054 . -18) (undo-tree-id2055 . -18) (undo-tree-id2056 . -34) (undo-tree-id2057 . -34) (undo-tree-id2058 . -8) (undo-tree-id2059 . -8) (undo-tree-id2060 . -8) (undo-tree-id2061 . -8) (undo-tree-id2062 . -8) (undo-tree-id2063 . -8) (undo-tree-id2064 . -34) (undo-tree-id2065 . -34)) nil (26039 64348 997318 806000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4953) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) 4954) nil (26039 64348 997314 763000) 0 nil])
([nil nil ((5004 . 5013)) nil (26039 64348 997309 354000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5046 . 5047) (nil fontified nil 5038 . 5047) (nil fontified nil 5035 . 5038) (nil fontified nil 5034 . 5035) (nil fontified nil 5033 . 5034) (nil fontified nil 5032 . 5033) (nil fontified nil 5029 . 5032) (nil fontified nil 5028 . 5029) (nil fontified nil 5027 . 5028) (nil fontified nil 5013 . 5027) (5013 . 5047)) nil (26039 64348 997309 121000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -5013) (undo-tree-id2025 . -8) (undo-tree-id2026 . -8) (undo-tree-id2027 . -8) (undo-tree-id2028 . -8) (undo-tree-id2029 . -8) 5005) nil (26039 64348 997308 417000) 0 nil])
([nil nil ((5090 . 5096)) nil (26039 64348 997300 76000) 0 nil])
([nil nil ((5096 . 5101)) nil (26039 64348 997297 224000) 0 nil])
([nil nil ((#("assert (await next_modification()) == \"a/b/create.txt\"" 0 6 (face font-lock-keyword-face fontified t) 6 8 (fontified t) 8 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 35 (fontified t) 35 37 (face font-lock-operator-face fontified t) 37 38 (fontified t) 38 54 (face font-lock-string-face fontified t)) . 5048) (undo-tree-id2073 . -53) (undo-tree-id2074 . -53) (undo-tree-id2075 . -54) (t 26039 64349 25795 913000)) nil (26039 64356 393027 203000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5101 . 5102) (nil fontified nil 5086 . 5102) (nil fontified nil 5085 . 5086) (nil fontified nil 5083 . 5085) (nil fontified nil 5062 . 5083) (nil fontified nil 5061 . 5062) (nil fontified nil 5056 . 5061) (nil fontified nil 5054 . 5056) (nil fontified nil 5048 . 5054) (5048 . 5102)) nil (26039 64356 393026 328000) 0 nil])
([nil nil ((5102 . 5111)) nil (26039 64356 393025 994000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5164 . 5165) (nil fontified nil 5149 . 5165) (nil fontified nil 5148 . 5149) (nil fontified nil 5146 . 5148) (nil fontified nil 5125 . 5146) (nil fontified nil 5124 . 5125) (nil fontified nil 5119 . 5124) (nil fontified nil 5117 . 5119) (nil fontified nil 5111 . 5117) (5111 . 5165)) nil (26039 64356 393025 756000) 0 nil])
([nil nil ((#("create.txt\"" 0 10 (face font-lock-string-face fontified t) 10 11 (face font-lock-string-face rear-nonsticky t fontified t)) . 5154) (undo-tree-id2070 . -11) (undo-tree-id2071 . -7) (undo-tree-id2072 . -11)) nil (26039 64356 393025 225000) 0 nil])
([nil nil ((#("/" 0 1 (face font-lock-string-face fontified t)) . -5153) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) 5154) nil (26039 64356 393022 937000) 0 nil])
([nil nil ((5153 . 5154)) nil (26039 64356 393009 645000) 0 nil])
([nil nil ((#("        (root / \"a\" / \"b\").rmdir()" 0 8 (fontified t) 8 14 (fontified t) 14 15 (face font-lock-operator-face fontified t) 15 16 (fontified t) 16 19 (face font-lock-string-face fontified t) 19 20 (fontified t) 20 21 (face font-lock-operator-face fontified t) 21 22 (fontified t) 22 25 (face font-lock-string-face fontified t) 25 33 (fontified t) 33 34 (rear-nonsticky t fontified t)) . 5005) (undo-tree-id2087 . -8) (undo-tree-id2088 . -34) (undo-tree-id2089 . -34) (t 26039 64356 397889 752000)) nil (26039 64369 875388 784000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5004) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) 5005) nil (26039 64369 875387 895000) 0 nil])
([nil nil ((5067 . 5076)) nil (26039 64369 875385 862000) 0 nil])
([nil nil ((nil fontified nil 5109 . 5110) (nil fontified nil 5101 . 5109) (nil fontified nil 5098 . 5101) (nil fontified nil 5097 . 5098) (nil fontified nil 5096 . 5097) (nil fontified nil 5095 . 5096) (nil fontified nil 5092 . 5095) (nil fontified nil 5091 . 5092) (nil fontified nil 5090 . 5091) (nil fontified nil 5084 . 5090) (nil fontified nil 5076 . 5084) (5076 . 5110)) nil (26039 64369 875385 404000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -5076) (undo-tree-id2076 . -8) (undo-tree-id2077 . -8) (undo-tree-id2078 . -8) (undo-tree-id2079 . -8) (undo-tree-id2080 . -8) 5068) nil (26039 64369 875382 839000) 0 nil])
([nil nil ((#("
        (root / \"a\" / \"b\" / \"create.txt\").unlink()
        assert (await next_modification()) == \"a/b/create.txt\"
        (root / \"a\" / \"b\").rmdir()
        assert (await next_modification()) == \"a/b\"
" 0 1 (fontified t) 1 9 (fontified t) 9 15 (fontified t) 15 16 (face font-lock-operator-face fontified t) 16 17 (fontified t) 17 20 (face font-lock-string-face fontified t) 20 21 (fontified t) 21 22 (face font-lock-operator-face fontified t) 22 23 (fontified t) 23 26 (face font-lock-string-face fontified t) 26 27 (fontified t) 27 28 (face font-lock-operator-face fontified t) 28 29 (fontified t) 29 41 (face font-lock-string-face fontified t) 41 42 (rear-nonsticky t fontified t) 42 51 (fontified t) 51 52 (fontified t) 52 60 (fontified t) 60 66 (face font-lock-keyword-face fontified t) 66 68 (fontified t) 68 73 (face font-lock-keyword-face fontified t) 73 74 (fontified t) 74 95 (fontified t) 95 97 (face font-lock-operator-face fontified t) 97 98 (fontified t) 98 113 (face font-lock-string-face fontified t) 113 114 (face font-lock-string-face rear-nonsticky t fontified t) 114 115 (fontified t) 115 123 (fontified t) 123 129 (fontified t) 129 130 (face font-lock-operator-face fontified t) 130 131 (fontified t) 131 134 (face font-lock-string-face fontified t) 134 135 (fontified t) 135 136 (face font-lock-operator-face fontified t) 136 137 (fontified t) 137 140 (face font-lock-string-face fontified t) 140 148 (fontified t) 148 149 (fontified t rear-nonsticky t) 149 150 (fontified t) 150 158 (fontified t) 158 164 (face font-lock-keyword-face fontified t) 164 166 (fontified t) 166 171 (face font-lock-keyword-face fontified t) 171 172 (fontified t) 172 193 (fontified t) 193 195 (face font-lock-operator-face fontified t) 195 196 (fontified t) 196 201 (face font-lock-string-face fontified t) 201 202 (fontified t)) . 4953) (undo-tree-id2090 . -202) (undo-tree-id2091 . -9) (undo-tree-id2092 . -51) (undo-tree-id2093 . -60) (undo-tree-id2094 . -158) (undo-tree-id2095 . -202) (undo-tree-id2096 . -123) (undo-tree-id2097 . -202) (undo-tree-id2098 . -202) 5155 (t 26039 64369 882061 399000)) nil (26039 64727 552763 52000) 0 nil])
([nil nil ((4839 . 4848) (t 26039 64727 558614 684000)) nil (26039 64780 868494 832000) 0 nil])
([nil nil ((4848 . 4850)) nil (26039 64780 868494 593000) 0 nil])
([nil nil ((4850 . 4852)) nil (26039 64780 868494 467000) 0 nil])
([nil nil ((#("b" 0 1 (face font-lock-comment-face fontified t)) . -4850) (undo-tree-id2416 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -4851) (undo-tree-id2417 . -1) 4852) nil (26039 64780 868494 239000) 0 nil])
([nil nil ((4850 . 4854)) nil (26039 64780 868493 701000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-comment-face fontified t)) . -4850) (undo-tree-id2412 . -1) (#("/" 0 1 (face font-lock-comment-face fontified t)) . -4851) (undo-tree-id2413 . -1) (#("b" 0 1 (face font-lock-comment-face fontified t)) . -4852) (undo-tree-id2414 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -4853) (undo-tree-id2415 . -1) 4854) nil (26039 64780 868493 453000) 0 nil])
([nil nil ((4850 . 4854)) nil (26039 64780 868492 429000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-comment-face fontified t)) . -4853) (undo-tree-id2411 . -1) 4854) nil (26039 64780 868492 260000) 0 nil])
([nil nil ((4853 . 4874)) nil (26039 64780 868491 937000) 0 nil])
([nil nil ((4874 . 4895)) nil (26039 64780 868491 805000) 0 nil])
([nil nil ((4895 . 4900)) nil (26039 64780 868491 663000) 0 nil])
([nil nil ((#("should now" 0 10 (face font-lock-comment-face fontified t)) . 4890)) nil (26039 64780 868491 409000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -4889) (undo-tree-id2410 . -1) 4890) nil (26039 64780 868491 142000) 0 nil])
([nil nil ((4889 . 4892)) nil (26039 64780 868490 829000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-comment-face fontified t)) . -4891) (undo-tree-id2409 . -1) 4892) nil (26039 64780 868490 657000) 0 nil])
([nil nil ((4891 . 4904)) nil (26039 64780 868490 343000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-comment-face fontified t)) . -4903) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) 4904) nil (26039 64780 868490 121000) 0 nil])
([nil nil ((4903 . 4906)) nil (26039 64780 868489 373000) 0 nil])
([nil nil ((4906 . 4927)) nil (26039 64780 868489 227000) 0 nil])
([nil nil ((4927 . 4934)) nil (26039 64780 868489 97000) 0 nil])
([nil nil ((4914 . 4924) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . -4914) (undo-tree-id2406 . -1) (nil face nil 4913 . 4914) (4913 . 4914) 4934) nil (26039 64780 868488 907000) 0 nil])
([nil nil ((5083 . 5088)) nil (26039 64780 868488 510000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5084) (undo-tree-id2401 . -4) (undo-tree-id2402 . -4) (undo-tree-id2403 . -4) (undo-tree-id2404 . -4) (undo-tree-id2405 . -4) 5088) nil (26039 64780 868488 224000) 0 nil])
([nil nil ((5084 . 5105)) nil (26039 64780 868486 803000) 0 nil])
([nil nil ((5105 . 5106)) nil (26039 64780 868486 669000) 0 nil])
([nil nil ((5106 . 5108)) nil (26039 64780 868486 540000) 0 nil])
([nil nil ((#("track" 0 5 (face font-lock-function-name-face fontified t)) . 5103) (undo-tree-id2395 . -1) (undo-tree-id2396 . -2) (undo-tree-id2397 . -3) (undo-tree-id2398 . -4) (undo-tree-id2399 . -5) (undo-tree-id2400 . -5)) nil (26039 64780 868486 335000) 0 nil])
([nil nil ((5103 . 5115)) nil (26039 64780 868485 68000) 0 nil])
([nil nil ((#("dir_deletion" 0 12 (face font-lock-function-name-face fontified t)) . 5103) (undo-tree-id2381 . -1) (undo-tree-id2382 . -2) (undo-tree-id2383 . -3) (undo-tree-id2384 . -4) (undo-tree-id2385 . -5) (undo-tree-id2386 . -6) (undo-tree-id2387 . -7) (undo-tree-id2388 . -8) (undo-tree-id2389 . -9) (undo-tree-id2390 . -10) (undo-tree-id2391 . -11) (undo-tree-id2392 . -12) (undo-tree-id2393 . -4) (undo-tree-id2394 . -12)) nil (26039 64780 868484 744000) 0 nil])
([nil nil ((5103 . 5124)) nil (26039 64780 868481 977000) 0 nil])
([nil nil ((5124 . 5125)) nil (26039 64780 868481 758000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t)) . -5120) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (#("t" 0 1 (fontified t)) . -5121) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (#("h" 0 1 (fontified t)) . -5122) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (#(")" 0 1 (fontified t)) . -5123) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (#(" " 0 1 (fontified t)) . -5124) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) 5125) nil (26039 64780 868481 146000) 0 nil])
([nil nil ((5120 . 5129)) nil (26039 64780 868476 146000) 0 nil])
([nil nil ((#("def test_watch_all_rmdir(tmp_path: Path) -> N" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 24 (face font-lock-function-name-face fontified t) 24 41 (fontified t) 41 42 (face font-lock-operator-face fontified t) 42 43 (face font-lock-operator-face fontified t) 43 45 (fontified t)) . 5084) (undo-tree-id2281 . -1) (undo-tree-id2282 . -2) (undo-tree-id2283 . -3) (undo-tree-id2284 . -4) (undo-tree-id2285 . -5) (undo-tree-id2286 . -6) (undo-tree-id2287 . -7) (undo-tree-id2288 . -8) (undo-tree-id2289 . -9) (undo-tree-id2290 . -10) (undo-tree-id2291 . -11) (undo-tree-id2292 . -12) (undo-tree-id2293 . -13) (undo-tree-id2294 . -14) (undo-tree-id2295 . -15) (undo-tree-id2296 . -16) (undo-tree-id2297 . -17) (undo-tree-id2298 . -18) (undo-tree-id2299 . -19) (undo-tree-id2300 . -19) (undo-tree-id2301 . -19) (undo-tree-id2302 . -19) (undo-tree-id2303 . -19) (undo-tree-id2304 . -19) (undo-tree-id2305 . -19) (undo-tree-id2306 . -19) (undo-tree-id2307 . -19) (undo-tree-id2308 . -19) (undo-tree-id2309 . -19) (undo-tree-id2310 . -19) (undo-tree-id2311 . -19) (undo-tree-id2312 . -19) (undo-tree-id2313 . -19) (undo-tree-id2314 . -19) (undo-tree-id2315 . -19) (undo-tree-id2316 . -19) (undo-tree-id2317 . -19) (undo-tree-id2318 . -19) (undo-tree-id2319 . -19) (undo-tree-id2320 . -20) (undo-tree-id2321 . -21) (undo-tree-id2322 . -22) (undo-tree-id2323 . -23) (undo-tree-id2324 . -24) (undo-tree-id2325 . -25) (undo-tree-id2326 . -26) (undo-tree-id2327 . -27) (undo-tree-id2328 . -28) (undo-tree-id2329 . -29) (undo-tree-id2330 . -30) (undo-tree-id2331 . -31) (undo-tree-id2332 . -32) (undo-tree-id2333 . -33) (undo-tree-id2334 . -34) (undo-tree-id2335 . -35) (undo-tree-id2336 . -36) (undo-tree-id2337 . -36) (undo-tree-id2338 . -36) (undo-tree-id2339 . -36) (undo-tree-id2340 . -36) (undo-tree-id2341 . -36) (undo-tree-id2342 . -36) (undo-tree-id2343 . -36) (undo-tree-id2344 . -36) (undo-tree-id2345 . -36) (undo-tree-id2346 . -37) (undo-tree-id2347 . -38) (undo-tree-id2348 . -39) (undo-tree-id2349 . -41) (undo-tree-id2350 . -42) (undo-tree-id2351 . -43) (undo-tree-id2352 . -44) (undo-tree-id2353 . -45) (undo-tree-id2354 . -45)) nil (26039 64780 868475 373000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5082) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (#("
" 0 1 (fontified t)) . -5083) (undo-tree-id2197 . -1) (undo-tree-id2198 . 1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) 5084) nil (26039 64780 868460 516000) 0 nil])
([nil nil ((5082 . 5087)) nil (26039 64780 868089 178000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5083) (undo-tree-id2108 . -4) (undo-tree-id2109 . -4) (undo-tree-id2110 . -4) (undo-tree-id2111 . -4) (undo-tree-id2112 . -4) 5087) nil (26039 64780 868088 560000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5082) (undo-tree-id2099 . -1) (undo-tree-id2100 . 1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) 5083) nil (26039 64780 868086 190000) 0 nil])
([nil nil ((5082 . 5083)) nil (26039 64780 868073 26000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -117) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) 118 (t 26039 64780 875293 426000)) nil (26039 65442 269826 862000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -3321) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) 3322 (t 26039 65442 275371 541000)) nil (26039 65449 785739 147000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -4057) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) 4058) nil (26039 65449 785738 281000) 0 nil])
([nil current ((#("2" 0 1 (fontified t)) . -4569) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) 4570) nil (26039 65449 785733 290000) 0 nil])
nil
