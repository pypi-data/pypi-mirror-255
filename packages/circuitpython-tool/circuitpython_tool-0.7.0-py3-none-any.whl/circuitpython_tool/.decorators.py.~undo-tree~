(undo-tree-save-format-version . 1)
"c63a7f1d9a6f9aa33ea0d52ccda796520a46f25f"
[nil nil nil nil (25992 55545 220011 242000) 0 nil]
([nil nil ((458 . 460) (t 25991 49115 250114 633000)) nil (25992 55545 220010 772000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -458) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#(":" 0 1 (fontified t)) . -459) (undo-tree-id16 . -1) (undo-tree-id17 . -1) 460) nil (25992 55545 220010 488000) 0 nil])
([nil nil ((458 . 462)) nil (25992 55545 220008 324000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -460) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("u" 0 1 (fontified t)) . -461) (undo-tree-id10 . -1) (undo-tree-id11 . -1) 462) nil (25992 55545 220008 43000) 0 nil])
([nil nil ((460 . 470)) nil (25992 55545 220006 269000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -468) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("." 0 1 (fontified t)) . -469) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 470) nil (25992 55545 220005 398000) 0 nil])
([nil nil ((468 . 474)) nil (25992 55545 219993 967000) 0 nil])
([nil nil ((454 . 510) (#("call: decorator.Call, old_name: str, new_name: str" 0 32 (fontified t) 32 35 (face font-lock-builtin-face fontified t) 35 47 (fontified t) 47 50 (face font-lock-builtin-face fontified t)) . 454) (undo-tree-id9 . -28) (undo-tree-id10 . -28) (undo-tree-id11 . -4) (undo-tree-id12 . -4) (undo-tree-id13 . -4) (undo-tree-id14 . -6) (undo-tree-id15 . -6) (undo-tree-id16 . -6) (undo-tree-id17 . -14) (undo-tree-id18 . -14) (undo-tree-id19 . -14) (undo-tree-id20 . -22) (undo-tree-id21 . -22) (undo-tree-id22 . -22) (undo-tree-id23 . -4) (undo-tree-id24 . -5) (undo-tree-id25 . -6) (undo-tree-id26 . -15) (undo-tree-id27 . -6) (undo-tree-id28 . -6) (undo-tree-id29 . -6) (undo-tree-id30 . -6) (undo-tree-id31 . -6) (undo-tree-id32 . -6) (undo-tree-id33 . -6) (undo-tree-id34 . -6) (undo-tree-id35 . -6) (t 25992 55545 245484 758000)) nil (25992 55577 607503 786000) 0 nil])
([nil nil ((#("decorator" 0 9 (fontified t)) . 465) (undo-tree-id8 . -9) (t 25992 55545 721482 156000)) nil (25992 55577 607496 950000) 0 nil])
([nil nil ((#(".Call" 0 5 (fontified t)) . 465) (undo-tree-id6 . -1) (undo-tree-id7 . -5)) nil (25992 55577 607496 346000) 0 nil])
([nil nil ((465 . 468)) nil (25992 55577 607495 438000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -466) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("y" 0 1 (fontified t)) . -467) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 468) nil (25992 55577 607494 844000) 0 nil])
([nil nil ((466 . 468)) nil (25992 55577 607482 532000) 0 nil])
([nil nil ((454 . 493) (#("
    call: Any, old_name: str, new_name: str
" 0 1 (fontified t) 1 26 (fontified t) 26 29 (face font-lock-builtin-face fontified t) 29 41 (fontified t) 41 44 (face font-lock-builtin-face fontified t) 44 45 (fontified t)) . 454) (undo-tree-id6 . -11) (undo-tree-id7 . -12) (undo-tree-id8 . -12) (undo-tree-id9 . -12) (undo-tree-id10 . -14) (undo-tree-id11 . -14) (t 25992 55577 605307 826000)) nil (25992 55584 703715 82000) 0 nil])
([nil nil ((#("    pass" 0 4 (fontified t) 4 8 (face font-lock-keyword-face fontified t)) . 516) (undo-tree-id0 . -8) (undo-tree-id1 . -8) (undo-tree-id2 . -8) (undo-tree-id3 . -8) (undo-tree-id4 . -8) (undo-tree-id5 . -8) (t 25992 55578 77305 245000)) nil (25992 55584 703712 859000) 0 nil])
([nil nil ((516 . 519)) nil (25992 55584 703701 199000) 0 nil])
([nil nil ((516 . 520) 519) nil (25992 55584 703697 836000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -515) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) 516 (t 25992 55584 705269 3000)) nil (25992 55592 240998 33000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -515) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#(" " 0 1 (fontified t)) . -516) (undo-tree-id16 . -1) (undo-tree-id17 . -1) 517) nil (25992 55592 240992 402000) 0 nil])
([nil nil ((515 . 518) (t 25992 55592 265227 665000)) nil (25992 55605 769370 369000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -520) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (#("." 0 1 (fontified t)) . -521) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#("." 0 1 (fontified t)) . -522) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) 523 (t 25992 55592 693225 324000)) nil (25992 55605 769369 874000) 0 nil])
([nil nil ((520 . 536)) nil (25992 55605 769364 823000) 0 nil])
([nil nil ((#("    return lambda a:" 0 2 (fontified t) 2 4 (fontified t) 4 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 17 (face font-lock-keyword-face fontified t) 17 20 (fontified t)) . 516) (undo-tree-id3 . -3) (undo-tree-id4 . -3) (undo-tree-id5 . -3) (undo-tree-id6 . -3) (undo-tree-id7 . -3) (undo-tree-id8 . -3) (undo-tree-id9 . -3) (undo-tree-id10 . -3) (undo-tree-id11 . -3) (undo-tree-id12 . -3) (undo-tree-id13 . -3) (undo-tree-id14 . -4) (undo-tree-id15 . -4) (undo-tree-id16 . -4) (undo-tree-id17 . -4) (undo-tree-id18 . -4) (undo-tree-id19 . -4) (undo-tree-id20 . -4) (undo-tree-id21 . -5) (undo-tree-id22 . -6) (undo-tree-id23 . -7) (undo-tree-id24 . -8) (undo-tree-id25 . -9) (undo-tree-id26 . -10) (undo-tree-id27 . -11) (undo-tree-id28 . -12) (undo-tree-id29 . -13) (undo-tree-id30 . -14) (undo-tree-id31 . -15) (undo-tree-id32 . -16) (undo-tree-id33 . -17) (undo-tree-id34 . -18) (undo-tree-id35 . -19) (undo-tree-id36 . -4) (undo-tree-id37 . -20) (undo-tree-id38 . -20)) nil (25992 55605 769364 328000) 0 nil])
([nil nil ((516 . 520)) nil (25992 55605 769356 375000) 0 nil])
([nil nil ((apply -4 422 520 undo--wrap-and-run-primitive-undo 422 520 ((435 . 437) (422 . 424) 515))) nil (25992 55605 769356 30000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . 520) (undo-tree-id0 . -1) (#("    " 0 4 (fontified t)) . 520) (undo-tree-id1 . -4) (undo-tree-id2 . -4) 519) nil (25992 55605 769353 921000) 0 nil])
([nil nil ((424 . 425) (t 25992 55605 793153 700000)) nil (25992 55678 119137 873000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -422) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -423) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (#("]" 0 1 (face font-lock-comment-face fontified t)) . -424) (undo-tree-id146 . -1) (undo-tree-id147 . -1) 425) nil (25992 55678 119137 461000) 0 nil])
([nil nil ((#("#" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -433) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -434) (undo-tree-id134 . -1) (undo-tree-id135 . -1) 435) nil (25992 55678 119131 449000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -514) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) 515) nil (25992 55678 119118 744000) 0 nil])
([nil nil ((514 . 515)) nil (25992 55678 119117 939000) 0 nil])
([nil nil ((515 . 520)) nil (25992 55678 119117 805000) 0 nil])
([nil nil ((520 . 524)) nil (25992 55678 119117 642000) 0 nil])
([nil nil ((#("    def " 0 4 (fontified t) 4 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t)) . 516) (undo-tree-id119 . -4) (undo-tree-id120 . -4) (undo-tree-id121 . -5) (undo-tree-id122 . -6) (undo-tree-id123 . -7) (undo-tree-id124 . -8) (undo-tree-id125 . -8)) nil (25992 55678 119117 434000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -515) (undo-tree-id109 . -1) (undo-tree-id110 . 1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) 516) nil (25992 55678 119115 730000) 0 nil])
([nil nil ((515 . 520)) nil (25992 55678 119113 763000) 0 nil])
([nil nil ((520 . 531)) nil (25992 55678 119113 563000) 0 nil])
([nil nil ((#("Callable[[C], C]:" 0 17 (fontified t)) . 498) (undo-tree-id92 . -16) (undo-tree-id93 . -16) (undo-tree-id94 . -16) (undo-tree-id95 . -16) (undo-tree-id96 . -17) (undo-tree-id97 . -17) (undo-tree-id98 . -17) (undo-tree-id99 . -17) (undo-tree-id100 . -17) (undo-tree-id101 . -17) (undo-tree-id102 . -17) (undo-tree-id103 . -17) (undo-tree-id104 . -17) (undo-tree-id105 . -17) (undo-tree-id106 . -14) (undo-tree-id107 . -10) (undo-tree-id108 . -17)) nil (25992 55678 119113 211000) 0 nil])
([nil nil ((498 . 500)) nil (25992 55678 118929 850000) 0 nil])
([nil nil ((500 . 503)) nil (25992 55678 118929 716000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -502) (undo-tree-id90 . -1) (undo-tree-id91 . -1) 503) nil (25992 55678 118929 506000) 0 nil])
([nil nil ((502 . 503)) nil (25992 55678 118928 832000) 0 nil])
([nil nil ((#("    return call" 0 4 (fontified t) 4 10 (face font-lock-keyword-face fontified t) 10 15 (fontified t)) . 504) (undo-tree-id75 . -4) (undo-tree-id76 . -4) (undo-tree-id77 . -5) (undo-tree-id78 . -6) (undo-tree-id79 . -7) (undo-tree-id80 . -8) (undo-tree-id81 . -9) (undo-tree-id82 . -10) (undo-tree-id83 . -11) (undo-tree-id84 . -12) (undo-tree-id85 . -13) (undo-tree-id86 . -14) (undo-tree-id87 . -15) (undo-tree-id88 . -15) (undo-tree-id89 . -15)) nil (25992 55678 118928 497000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -503) (undo-tree-id57 . -1) (undo-tree-id58 . 1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) 504) nil (25992 55678 118924 898000) 0 nil])
([nil nil ((503 . 508)) nil (25992 55678 118914 89000) 0 nil])
([nil nil ((508 . 512)) nil (25992 55678 118911 714000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -508) (undo-tree-id190 . -1) (#("a" 0 1 (fontified t)) . -509) (undo-tree-id191 . -1) (#("s" 0 1 (fontified t)) . -510) (undo-tree-id192 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . -511) (undo-tree-id193 . -1) 512 (t 25992 55678 124758 223000)) nil (25992 59893 734252 257000) 0 nil])
([nil nil ((508 . 514)) nil (25992 59893 734251 252000) 0 nil])
([nil nil ((514 . 520)) nil (25992 59893 734251 127000) 0 nil])
([nil nil ((520 . 534)) nil (25992 59893 734250 880000) 0 nil])
([nil nil ((508 . 512)) nil (25992 59893 734250 493000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -508) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (#("e" 0 1 (fontified t)) . -509) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (#("w" 0 1 (fontified t)) . -510) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (#("_" 0 1 (fontified t)) . -511) (undo-tree-id188 . -1) (undo-tree-id189 . -1) 512) nil (25992 59893 734249 884000) 0 nil])
([nil nil ((508 . 509)) nil (25992 59893 734244 385000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -508) (undo-tree-id168 . -1) (undo-tree-id169 . -1) 509) nil (25992 59893 734244 26000) 0 nil])
([nil nil ((508 . 524)) nil (25992 59893 734243 239000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -520) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (#("p" 0 1 (fontified t)) . -521) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (#("o" 0 1 (fontified t)) . -522) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (#("p" 0 1 (fontified t)) . -523) (undo-tree-id166 . -1) (undo-tree-id167 . -1) 524) nil (25992 59893 734242 719000) 0 nil])
([nil nil ((520 . 533)) nil (25992 59893 734229 723000) 0 nil])
([nil nil ((559 . 564)) nil (25992 59893 734229 527000) 0 nil])
([nil nil ((564 . 570)) nil (25992 59893 734229 58000) 0 nil])
([nil nil ((564 . 571)) nil (25992 59893 734225 290000) 0 nil])
([nil nil ((#("return" 0 6 (face font-lock-keyword-face fontified t)) . 564) (undo-tree-id201 . -6) (t 25992 59893 738718 453000)) nil (25992 59905 606833 552000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -564) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) 565) nil (25992 59905 606830 63000) 0 nil])
([nil nil ((#("None" 0 4 (face font-lock-constant-face fontified t)) . 498) (undo-tree-id206 . -4) (t 25992 59905 610736 353000)) nil (25992 59915 816638 886000) 0 nil])
([nil nil ((498 . 501)) nil (25992 59915 816638 200000) 0 nil])
([nil nil ((563 . 564)) nil (25992 59915 816638 47000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -563) (undo-tree-id204 . -1) (undo-tree-id205 . -1) 564) nil (25992 59915 816637 752000) 0 nil])
([nil nil ((563 . 565)) nil (25992 59915 816636 157000) 0 nil])
([nil nil ((565 . 570)) nil (25992 59915 816635 891000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -569) (undo-tree-id202 . -1) (undo-tree-id203 . -1) 570) nil (25992 59915 816635 201000) 0 nil])
([nil nil ((569 . 570)) nil (25992 59915 816624 308000) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-function-name-face fontified t)) . -452) (undo-tree-id274 . -1) (undo-tree-id275 . -1) 453 (t 25992 59915 822751 787000)) nil (25992 60579 162505 913000) 0 nil])
([nil nil ((88 . 89)) nil (25992 60579 162505 353000) 0 nil])
([nil nil ((#("W" 0 1 (fontified t)) . -88) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) 89) nil (25993 2161 524727 361000) 0 nil])
([nil nil ((#("C = Callable[..., None]


def rename_argument(old_name: str, new_name: str) -> Callable[[C], C]:
    \"\"\"Decorator to rename a keyword argument.\"\"\"

    def deco(f: C) -> C:
        def inner(*args: Any, **kwargs: Any) -> None:
            kwargs[new_name] = kwargs.pop(old_name)
            return f(*args, **kwargs)

        return inner

    return deco
" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (fontified t) 2 3 (face font-lock-operator-face fontified t) 3 18 (fontified t) 18 22 (face font-lock-constant-face fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 29 (face font-lock-keyword-face fontified t) 29 30 (fontified t) 30 45 (face font-lock-function-name-face fontified t) 45 56 (fontified t) 56 59 (face font-lock-builtin-face fontified t) 59 71 (fontified t) 71 74 (face font-lock-builtin-face fontified t) 74 76 (fontified t) 76 77 (face font-lock-operator-face fontified t) 77 78 (face font-lock-operator-face fontified t) 78 101 (fontified t) 101 103 (face font-lock-doc-face fontified t) 103 104 (face font-lock-doc-face syntax-table (15) fontified t) 104 143 (face font-lock-doc-face fontified t) 143 144 (face font-lock-doc-face syntax-table (15) fontified t) 144 146 (face font-lock-doc-face fontified t) 146 152 (fontified t) 152 155 (face font-lock-keyword-face fontified t) 155 156 (fontified t) 156 160 (face font-lock-function-name-face fontified t) 160 167 (fontified t) 167 168 (face font-lock-operator-face fontified t) 168 169 (face font-lock-operator-face fontified t) 169 181 (fontified t) 181 184 (face font-lock-keyword-face fontified t) 184 185 (fontified t) 185 190 (face font-lock-function-name-face fontified t) 190 191 (fontified t) 191 192 (face font-lock-operator-face fontified t) 192 203 (fontified t) 203 205 (face font-lock-operator-face fontified t) 205 218 (fontified t) 218 219 (face font-lock-operator-face fontified t) 219 220 (face font-lock-operator-face fontified t) 220 221 (fontified t) 221 225 (face font-lock-constant-face fontified t) 225 239 (fontified t) 239 245 (face font-lock-variable-name-face fontified t) 245 256 (fontified t) 256 257 (face font-lock-operator-face fontified t) 257 291 (fontified t) 291 297 (face font-lock-keyword-face fontified t) 297 300 (fontified t) 300 301 (face font-lock-operator-face fontified t) 301 307 (fontified t) 307 309 (face font-lock-operator-face fontified t) 309 326 (fontified t) 326 332 (face font-lock-keyword-face fontified t) 332 344 (fontified t) 344 350 (face font-lock-keyword-face fontified t) 350 356 (fontified t)) . 64) (undo-tree-id65 . -356) (undo-tree-id66 . -356) (undo-tree-id67 . -356) (undo-tree-id68 . -356) (undo-tree-id69 . -356)) nil (25993 4484 281749 97000) 0 nil] [nil nil ((#("

def rename_argument(old_name: str, new_name: str) -> Callable[[C], C]:
    \"\"\"Decorator to rename a keyword argument.\"\"\"

    def deco(f: C) -> C:
        def inner(*args: Any, **kwargs: Any) -> None:
            kwargs[new_name] = kwargs.pop(old_name)
            return f(*args, **kwargs)

        return inner

    return deco
" 0 1 (fontified t) 1 2 (fontified t) 2 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 21 (face font-lock-function-name-face fontified t) 21 32 (fontified t) 32 35 (face font-lock-builtin-face fontified t) 35 47 (fontified t) 47 50 (face font-lock-builtin-face fontified t) 50 52 (fontified t) 52 53 (face font-lock-operator-face fontified t) 53 54 (face font-lock-operator-face fontified t) 54 77 (fontified t) 77 79 (face font-lock-doc-face fontified t) 79 80 (syntax-table (15) face font-lock-doc-face fontified t) 80 119 (face font-lock-doc-face fontified t) 119 120 (syntax-table (15) face font-lock-doc-face fontified t) 120 122 (face font-lock-doc-face fontified t) 122 128 (fontified t) 128 131 (face font-lock-keyword-face fontified t) 131 132 (fontified t) 132 136 (face font-lock-function-name-face fontified t) 136 143 (fontified t) 143 144 (face font-lock-operator-face fontified t) 144 145 (face font-lock-operator-face fontified t) 145 157 (fontified t) 157 160 (face font-lock-keyword-face fontified t) 160 161 (fontified t) 161 166 (face font-lock-function-name-face fontified t) 166 167 (fontified t) 167 168 (face font-lock-operator-face fontified t) 168 179 (fontified t) 179 181 (face font-lock-operator-face fontified t) 181 194 (fontified t) 194 195 (face font-lock-operator-face fontified t) 195 196 (face font-lock-operator-face fontified t) 196 197 (fontified t) 197 201 (face font-lock-constant-face fontified t) 201 215 (fontified t) 215 221 (face font-lock-variable-name-face fontified t) 221 232 (fontified t) 232 233 (face font-lock-operator-face fontified t) 233 267 (fontified t) 267 273 (face font-lock-keyword-face fontified t) 273 276 (fontified t) 276 277 (face font-lock-operator-face fontified t) 277 283 (fontified t) 283 285 (face font-lock-operator-face fontified t) 285 302 (fontified t) 302 308 (face font-lock-keyword-face fontified t) 308 320 (fontified t) 320 326 (face font-lock-keyword-face fontified t) 326 332 (fontified t)) . 88) (undo-tree-id218 . -332) (undo-tree-id220 . -332) (undo-tree-id222 . -332) (undo-tree-id224 . -77) (undo-tree-id226 . -77) (undo-tree-id228 . -77) (undo-tree-id230 . -72) (undo-tree-id232 . -72) (undo-tree-id234 . -2) (undo-tree-id236 . -2) (undo-tree-id238 . -2) (undo-tree-id240 . -77) (undo-tree-id242 . -77) (undo-tree-id244 . -77) (undo-tree-id246 . -72) (undo-tree-id248 . -72) (undo-tree-id250 . -2) (undo-tree-id252 . -2) (undo-tree-id254 . -2) (undo-tree-id256 . -77) (undo-tree-id258 . -77) (undo-tree-id260 . -77) (undo-tree-id262 . -72) (undo-tree-id264 . -72) (undo-tree-id266 . -2) (undo-tree-id268 . -2) (undo-tree-id270 . -2)) ((88 . 420)) (25993 2161 200086 714000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -62) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#("
" 0 1 (fontified t)) . -63) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) 64) nil (25993 4484 281745 644000) 0 nil])
([nil nil ((#("C = Callable[..., None]" 0 1 (face font-lock-variable-name-face fontified t) 1 2 (fontified t) 2 3 (face font-lock-operator-face fontified t) 3 18 (fontified t) 18 22 (face font-lock-constant-face fontified t) 22 23 (fontified t)) . 64)) ((64 . 87)) (25993 2160 805591 335000) 0 nil])
([nil nil ((64 . 65) (t 25993 4484 288533 311000)) nil (25993 4625 37538 368000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -62) (undo-tree-id208 . -1) (undo-tree-id210 . -1) (undo-tree-id212 . -1) (#("
" 0 1 (fontified t)) . -63) (undo-tree-id213 . -1) (undo-tree-id215 . -1) 64) ((62 . 64)) (25993 2160 497911 7000) 0 nil])
([nil nil ((#("Callable" 0 8 (fontified t)) . 25) (undo-tree-id17 . -3) (undo-tree-id18 . -8) (undo-tree-id19 . -8) (undo-tree-id20 . -8) (undo-tree-id21 . -8) (undo-tree-id22 . -8) (t 25993 4484 616533 565000)) nil (25993 4625 37537 748000) 0 nil])
([nil nil ((62 . 68)) ((#(", Call" 0 6 (fontified t)) . 62)) (25993 2160 201724 920000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -23) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (#(" " 0 1 (fontified t)) . -24) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) 25) nil (25993 4625 37533 611000) 0 nil])
([nil nil ((#("Any" 0 3 (fontified t)) . 108)) ((108 . 111)) (25993 2159 822026 715000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -207) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) 208 (t 25993 4625 44639 576000)) nil (25993 47827 259219 626000) 0 nil])
([nil nil ((108 . 112)) ((#("Call" 0 4 (fontified t)) . 108)) (25993 2159 502514 674000) 0 nil])
([nil nil ((207 . 208)) nil (25993 47827 259206 163000) 0 nil])
([nil nil ((53 . 68) (#("decorator, Call" 0 15 (fontified t)) . 53) (undo-tree-id43 . -9) (undo-tree-id45 . -9) (t 25992 60579 167407 744000)) ((53 . 68) (#("Call, decorator" 0 15 (fontified t)) . 53)) (25993 2158 903542 786000) 0 nil])
([nil nil ((52 . 53) (t 25993 47827 265810 173000)) nil (25994 8770 480636 329000) 0 nil])
([nil nil ((#("Callable" 0 8 (fontified t)) . 25) (undo-tree-id38 . -8) (undo-tree-id40 . -8) (undo-tree-id42 . -8) (t 25992 60579 507407 718000)) ((25 . 33)) (25993 2158 528786 704000) 0 nil])
([nil nil ((35 . 36)) nil (25994 8770 480636 121000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -23) (undo-tree-id1 . -1) (undo-tree-id3 . -1) (undo-tree-id5 . -1) (undo-tree-id7 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id13 . -1) (undo-tree-id15 . -1) (undo-tree-id17 . -1) (#(" " 0 1 (fontified t)) . -24) (undo-tree-id20 . -1) (undo-tree-id22 . -1) (undo-tree-id24 . -1) (undo-tree-id26 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id32 . -1) (undo-tree-id34 . -1) (undo-tree-id36 . -1) 25) ((23 . 25) (t 25992 60596 863406 801000)) (25992 60596 858301 860000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -35) (undo-tree-id70 . -1) 36) nil (25994 8770 480635 921000) 0 nil])
nil
([nil nil ((35 . 45)) nil (25994 8770 480635 459000) 0 nil])
([nil nil ((#(" import decorators" 0 1 (fontified t) 1 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 18 (fontified t)) . 45) (undo-tree-id65 . -17) (undo-tree-id66 . -17) (undo-tree-id67 . -17) (undo-tree-id68 . -17) (undo-tree-id69 . -17)) nil (25994 8770 480635 215000) 0 nil])
([nil nil ((#("from funcy.decorator" 0 4 (face font-lock-keyword-face fontified t) 4 20 (fontified t)) . 25) (undo-tree-id60 . -20) (undo-tree-id61 . -20) (undo-tree-id62 . -20) (undo-tree-id63 . -20) (undo-tree-id64 . -20)) nil (25994 8770 480633 247000) 0 nil])
([nil nil ((25 . 26)) nil (25994 8770 480632 40000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -25) (undo-tree-id59 . -1) 26) nil (25994 8770 480631 777000) 0 nil])
([nil nil ((25 . 39)) nil (25994 8770 480631 320000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -36) (undo-tree-id56 . -1) (#("." 0 1 (fontified t)) . -37) (undo-tree-id57 . -1) (#("d" 0 1 (fontified t)) . -38) (undo-tree-id58 . -1) 39) nil (25994 8770 480631 71000) 0 nil])
([nil nil ((36 . 37)) nil (25994 8770 480629 985000) 0 nil])
([nil nil ((37 . 38)) nil (25994 8770 480629 846000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 38)) nil (25994 8770 480629 666000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 38) (undo-tree-id55 . -1)) nil (25994 8770 480629 483000) 0 nil])
([nil nil ((#("import funcy." 0 6 (face font-lock-keyword-face fontified t) 6 13 (fontified t)) . 25) (undo-tree-id54 . -13)) nil (25994 8770 480629 94000) 0 nil])
([nil nil ((25 . 26)) nil (25994 8770 480628 295000) 0 nil])
([nil nil ((25 . 36)) nil (25994 8770 480628 139000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -31) (undo-tree-id49 . -1) (#("u" 0 1 (fontified t)) . -32) (undo-tree-id50 . -1) (#("n" 0 1 (fontified t)) . -33) (undo-tree-id51 . -1) (#("c" 0 1 (fontified t)) . -34) (undo-tree-id52 . -1) (#("t" 0 1 (fontified t)) . -35) (undo-tree-id53 . -1) 36) nil (25994 8770 480627 661000) 0 nil])
([nil nil ((31 . 38)) nil (25994 8770 480626 219000) 0 nil])
([nil nil ((38 . 47)) nil (25994 8770 480626 78000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -46) (undo-tree-id48 . -1) 47) nil (25994 8770 480625 857000) 0 nil])
([nil nil ((46 . 54)) nil (25994 8770 480624 721000) 0 nil])
([nil nil ((54 . 55)) nil (25994 8770 480624 459000) 0 nil])
([nil nil ((55 . 58)) nil (25994 8770 480624 243000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -54) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#("d" 0 1 (fontified t)) . -55) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (#("e" 0 1 (fontified t)) . -56) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (#("c" 0 1 (fontified t)) . -57) (undo-tree-id46 . -1) (undo-tree-id47 . -1) 58) nil (25994 8770 480623 389000) 0 nil])
([nil nil ((54 . 63)) nil (25994 8770 480619 441000) 0 nil])
([nil nil ((#("decorators" 0 10 (fontified t)) . 36) (undo-tree-id33 . -10)) nil (25994 8770 480618 899000) 0 nil])
([nil current ((#("." 0 1 (fontified t)) . -35) (undo-tree-id31 . -1) (undo-tree-id32 . -1) 36) nil (25994 8770 480615 420000) 0 nil])
nil
