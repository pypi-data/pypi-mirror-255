(undo-tree-save-format-version . 1)
"ca5dba15f095775281371c7c7528f171d7499982"
[nil nil nil nil (26041 20393 387260 753000) 0 nil]
([nil nil ((1 . 2) (t 26025 31723 153149 733000)) nil (26041 20393 387260 187000) 0 nil])
([nil nil ((1 . 2)) nil (26041 20393 387260 8000) 0 nil])
([nil nil ((1 . 4)) nil (26041 20393 387259 884000) 0 nil])
([nil nil ((4 . 10)) nil (26041 20393 387259 755000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-doc-face fontified t)) . -9) (undo-tree-id173 . -1) 10) nil (26041 20393 387259 573000) 0 nil])
([nil nil ((9 . 30)) nil (26041 20393 387259 228000) 0 nil])
([nil nil ((30 . 51)) nil (26041 20393 387259 104000) 0 nil])
([nil nil ((51 . 58)) nil (26041 20393 387258 858000) 0 nil])
([nil nil ((#("firmware" 0 8 (face font-lock-doc-face fontified t)) . 39) (undo-tree-id172 . -8)) nil (26041 20393 387258 712000) 0 nil])
([nil nil ((39 . 40)) nil (26041 20393 387258 383000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-doc-face fontified t)) . -39) (undo-tree-id170 . -1) (undo-tree-id171 . -1) 40) nil (26041 20393 387258 98000) 0 nil])
([nil nil ((39 . 50)) nil (26041 20393 387257 400000) 0 nil])
([nil nil ((#(" images.\"\"\"" 0 8 (face font-lock-doc-face fontified t) 8 9 (face font-lock-doc-face syntax-table (15) fontified t) 9 11 (face font-lock-doc-face fontified t)) . 50) (undo-tree-id0 . -1) (undo-tree-id1 . -11) (undo-tree-id2 . -11) (undo-tree-id3 . -11) (undo-tree-id4 . -11) (undo-tree-id5 . -11) (undo-tree-id6 . -11) (undo-tree-id7 . -11) (undo-tree-id8 . -11) (undo-tree-id9 . -11) (undo-tree-id10 . -11) (undo-tree-id11 . -11) (undo-tree-id12 . -11) (undo-tree-id13 . -11) (undo-tree-id14 . -11) (undo-tree-id15 . -11) (undo-tree-id16 . -11) (undo-tree-id17 . -11) (undo-tree-id18 . -11) (undo-tree-id19 . -11) (undo-tree-id20 . -11) (undo-tree-id21 . -11) (undo-tree-id22 . -11) (undo-tree-id23 . -11) (undo-tree-id24 . -11) (undo-tree-id25 . -11) (undo-tree-id26 . -11) (undo-tree-id27 . -11) (undo-tree-id28 . -11) (undo-tree-id29 . -11) (undo-tree-id30 . -11) (undo-tree-id31 . -11) (undo-tree-id32 . -11) (undo-tree-id33 . -11) (undo-tree-id34 . -11) (undo-tree-id35 . -11) (undo-tree-id36 . -11) (undo-tree-id37 . -11) (undo-tree-id38 . -11) (undo-tree-id39 . -11) (undo-tree-id40 . -11) (undo-tree-id41 . -11) (undo-tree-id42 . -11) (undo-tree-id43 . -11) (undo-tree-id44 . -11) (undo-tree-id45 . -11) (undo-tree-id46 . -11) (undo-tree-id47 . -11) (undo-tree-id48 . -11) (undo-tree-id49 . -11) (undo-tree-id50 . -11) (undo-tree-id51 . -11) (undo-tree-id52 . -11) (undo-tree-id53 . -11) (undo-tree-id54 . -11) (undo-tree-id55 . -11) (undo-tree-id56 . -11) (undo-tree-id57 . -11) (undo-tree-id58 . -11) (undo-tree-id59 . -11) (undo-tree-id60 . -11) (undo-tree-id61 . -11) (undo-tree-id62 . -11) (undo-tree-id63 . -11) (undo-tree-id64 . -11) (undo-tree-id65 . -11) (undo-tree-id66 . -11) (undo-tree-id67 . -11) (undo-tree-id68 . -11) (undo-tree-id69 . -11) (undo-tree-id70 . -11) (undo-tree-id71 . -11) (undo-tree-id72 . -11) (undo-tree-id73 . -11) (undo-tree-id74 . -11) (undo-tree-id75 . -11) (undo-tree-id76 . -11) (undo-tree-id77 . -11) (undo-tree-id78 . -11) (undo-tree-id79 . -11) (undo-tree-id80 . -11) (undo-tree-id81 . -11) (undo-tree-id82 . -11) (undo-tree-id83 . -11) (undo-tree-id84 . -11) (undo-tree-id85 . -11) (undo-tree-id86 . -11) (undo-tree-id87 . -11) (undo-tree-id88 . -11) (undo-tree-id89 . -11) (undo-tree-id90 . -11) (undo-tree-id91 . -11) (undo-tree-id92 . -11) (undo-tree-id93 . -11) (undo-tree-id94 . -11) (undo-tree-id95 . -11) (undo-tree-id96 . -11) (undo-tree-id97 . -11) (undo-tree-id98 . -11) (undo-tree-id99 . -11) (undo-tree-id100 . -11) (undo-tree-id101 . -11) (undo-tree-id102 . -11) (undo-tree-id103 . -11) (undo-tree-id104 . -11) (undo-tree-id105 . -11) (undo-tree-id106 . -11) (undo-tree-id107 . -11) (undo-tree-id108 . -11) (undo-tree-id109 . -11) (undo-tree-id110 . -11) (undo-tree-id111 . -11) (undo-tree-id112 . -11) (undo-tree-id113 . -11) (undo-tree-id114 . -11) (undo-tree-id115 . -11) (undo-tree-id116 . -11) (undo-tree-id117 . -11) (undo-tree-id118 . -11) (undo-tree-id119 . -11) (undo-tree-id120 . -11) (undo-tree-id121 . -11) (undo-tree-id122 . -11) (undo-tree-id123 . -11) (undo-tree-id124 . -11) (undo-tree-id125 . -11) (undo-tree-id126 . -11) (undo-tree-id127 . -11) (undo-tree-id128 . -11) (undo-tree-id129 . -11) (undo-tree-id130 . -11) (undo-tree-id131 . -11) (undo-tree-id132 . -11) (undo-tree-id133 . -11) (undo-tree-id134 . -11) (undo-tree-id135 . -11) (undo-tree-id136 . -11) (undo-tree-id137 . -11) (undo-tree-id138 . -11) (undo-tree-id139 . -11) (undo-tree-id140 . -11) (undo-tree-id141 . -11) (undo-tree-id142 . -11) (undo-tree-id143 . -11) (undo-tree-id144 . -11) (undo-tree-id145 . -11) (undo-tree-id146 . -11) (undo-tree-id147 . -11) (undo-tree-id148 . -11) (undo-tree-id149 . -11) (undo-tree-id150 . -11) (undo-tree-id151 . -11) (undo-tree-id152 . -11) (undo-tree-id153 . -11) (undo-tree-id154 . -11) (undo-tree-id155 . -11) (undo-tree-id156 . -11) (undo-tree-id157 . -11) (undo-tree-id158 . -11) (undo-tree-id159 . -11) (undo-tree-id160 . -11) (undo-tree-id161 . -11) (undo-tree-id162 . -11) (undo-tree-id163 . -11) (undo-tree-id164 . -11) (undo-tree-id165 . -11) (undo-tree-id166 . -11) (undo-tree-id167 . -11) (undo-tree-id168 . -11) (undo-tree-id169 . -11)) nil (26041 20393 387291 400000) 0 nil])
([nil nil ((#("bootloaders" 0 11 (face font-lock-doc-face fontified t)) . 39) (undo-tree-id175 . -11) (undo-tree-id176 . -11) (undo-tree-id177 . -11) (undo-tree-id178 . -11) (undo-tree-id179 . -11) (undo-tree-id180 . -11) (undo-tree-id181 . -11) (undo-tree-id182 . -11) (undo-tree-id183 . -11) (undo-tree-id184 . -11) (undo-tree-id185 . -11) (undo-tree-id186 . -11) (undo-tree-id187 . -11) (undo-tree-id188 . -11) (undo-tree-id189 . -11) (undo-tree-id190 . -11) (undo-tree-id191 . -11) (undo-tree-id192 . -11) (undo-tree-id193 . -11) (undo-tree-id194 . -11) (undo-tree-id195 . -11) (undo-tree-id196 . -11) (undo-tree-id197 . -11) (undo-tree-id198 . -11) (undo-tree-id199 . -11) (undo-tree-id200 . -11) (undo-tree-id201 . -11) (undo-tree-id202 . -11) (undo-tree-id203 . -11) (undo-tree-id204 . -11) (undo-tree-id205 . -11) (undo-tree-id206 . -11) (undo-tree-id207 . -11) (undo-tree-id208 . -11) (undo-tree-id209 . -11) (undo-tree-id210 . -11) (undo-tree-id211 . -11) (undo-tree-id212 . -11) (undo-tree-id213 . -11) (undo-tree-id214 . -11) (undo-tree-id215 . -11) (undo-tree-id216 . -11) (undo-tree-id217 . -11) (undo-tree-id218 . -11) (undo-tree-id219 . -11) (undo-tree-id220 . -11) (undo-tree-id221 . -11) (undo-tree-id222 . -11) (undo-tree-id223 . -11) (undo-tree-id224 . -11) (undo-tree-id225 . -11) (undo-tree-id226 . -11) (undo-tree-id227 . -11) (undo-tree-id228 . -11) (undo-tree-id229 . -11) (undo-tree-id230 . -11) (undo-tree-id231 . -11) (undo-tree-id232 . -11) (undo-tree-id233 . -11) (undo-tree-id234 . -11) (undo-tree-id235 . -11) (undo-tree-id236 . -11) (undo-tree-id237 . -11) (undo-tree-id238 . -11) (undo-tree-id239 . -11) (undo-tree-id240 . -11) (undo-tree-id241 . -11) (undo-tree-id242 . -11) (undo-tree-id243 . -11) (undo-tree-id244 . -11) (undo-tree-id245 . -11) (undo-tree-id246 . -11) (undo-tree-id247 . -11) (undo-tree-id248 . -11) (undo-tree-id249 . -11) (undo-tree-id250 . -11) (undo-tree-id251 . -11) (undo-tree-id252 . -11) (undo-tree-id253 . -11) (undo-tree-id254 . -11) (undo-tree-id255 . -11) (undo-tree-id256 . -11) (undo-tree-id257 . -11) (undo-tree-id258 . -11) (undo-tree-id259 . -11) (undo-tree-id260 . -11) (undo-tree-id261 . -11) (undo-tree-id262 . -11) (undo-tree-id263 . -11) (undo-tree-id264 . -11) (undo-tree-id265 . -11) (undo-tree-id266 . -11) (undo-tree-id267 . -11) (undo-tree-id268 . -11) (undo-tree-id269 . -11) (undo-tree-id270 . -11) (undo-tree-id271 . -11) (undo-tree-id272 . -11) (undo-tree-id273 . -11) (undo-tree-id274 . -11) (undo-tree-id275 . -11) (undo-tree-id276 . -11) (undo-tree-id277 . -11) (undo-tree-id278 . -11) (undo-tree-id279 . -11) (undo-tree-id280 . -11) (undo-tree-id281 . -11) (undo-tree-id282 . -11) (undo-tree-id283 . -11) (undo-tree-id284 . -11) (undo-tree-id285 . -11) (undo-tree-id286 . -11) (undo-tree-id287 . -11) (undo-tree-id288 . -11) (undo-tree-id289 . -11) (undo-tree-id290 . -11) (undo-tree-id291 . -11) (undo-tree-id292 . -11) (undo-tree-id293 . -11) (undo-tree-id294 . -11) (undo-tree-id295 . -11) (undo-tree-id296 . -11) (undo-tree-id297 . -11) (undo-tree-id298 . -11) (undo-tree-id299 . -11) (undo-tree-id300 . -11) (undo-tree-id301 . -11) (undo-tree-id302 . -11) (undo-tree-id303 . -11) (undo-tree-id304 . -11) (undo-tree-id305 . -11) (undo-tree-id306 . -11) (undo-tree-id307 . -11) (undo-tree-id308 . -11) (undo-tree-id309 . -11) (undo-tree-id310 . -11) (undo-tree-id311 . -11) (undo-tree-id312 . -11) (undo-tree-id313 . -11) (undo-tree-id314 . -11) (undo-tree-id315 . -11) (undo-tree-id316 . -11) (undo-tree-id317 . -11) (undo-tree-id318 . -11) (undo-tree-id319 . -11) (undo-tree-id320 . -11) (undo-tree-id321 . -11) (undo-tree-id322 . -11) (undo-tree-id323 . -11) (undo-tree-id324 . -11) (undo-tree-id325 . -11) (undo-tree-id326 . -11) (undo-tree-id327 . -11) (undo-tree-id328 . -11) (undo-tree-id329 . -11) (undo-tree-id330 . -11) (undo-tree-id331 . -11) (undo-tree-id332 . -11) (undo-tree-id333 . -11) (undo-tree-id334 . -11) (undo-tree-id335 . -11) (undo-tree-id336 . -11) (undo-tree-id337 . -11) (undo-tree-id338 . -11) (undo-tree-id339 . -11) (undo-tree-id340 . -11) (undo-tree-id341 . -11) (undo-tree-id342 . -11) (undo-tree-id343 . -11) (undo-tree-id344 . -11) (undo-tree-id345 . -11)) nil (26041 20423 516923 910000) 0 nil] [nil nil ((50 . 54)) ((#(".\"\"\"" 0 1 (face font-lock-doc-face fontified t) 1 2 (face font-lock-doc-face syntax-table (15) fontified t) 2 4 (face font-lock-doc-face fontified t)) . 50) (undo-tree-id174 . -4)) (26041 20393 387081 705000) 0 nil])
([nil nil ((39 . 48)) nil (26041 20423 516723 64000) 0 nil])
nil
([nil nil ((359 . 364) (t 26041 20423 522513 51000)) nil (26041 20505 816000 331000) 0 nil])
([nil nil ((364 . 373)) nil (26041 20505 816000 30000) 0 nil])
([nil nil ((#("F" 0 1 (face font-lock-doc-face fontified t)) . -367) (undo-tree-id387 . -1) (#("e" 0 1 (face font-lock-doc-face fontified t)) . -368) (undo-tree-id388 . -1) (#("t" 0 1 (face font-lock-doc-face fontified t)) . -369) (undo-tree-id389 . -1) (#("c" 0 1 (face font-lock-doc-face fontified t)) . -370) (undo-tree-id390 . -1) (#("h" 0 1 (face font-lock-doc-face fontified t)) . -371) (undo-tree-id391 . -1) (#(" " 0 1 (face font-lock-doc-face fontified t)) . -372) (undo-tree-id392 . -1) 373) nil (26041 20505 815999 459000) 0 nil])
([nil nil ((367 . 368)) nil (26041 20505 815998 156000) 0 nil])
([nil nil ((#("L" 0 1 (face font-lock-doc-face fontified t)) . -367) (undo-tree-id386 . -1) 368) nil (26041 20505 815997 984000) 0 nil])
([nil nil ((367 . 368)) nil (26041 20505 815997 617000) 0 nil])
([nil nil ((#("S" 0 1 (face font-lock-doc-face fontified t)) . -367) (undo-tree-id385 . -1) 368) nil (26041 20505 815997 424000) 0 nil])
([nil nil ((367 . 374)) nil (26041 20505 815997 44000) 0 nil])
([nil nil ((#("Set of " 0 7 (face font-lock-doc-face fontified t)) . 367)) nil (26041 20505 815996 882000) 0 nil])
([nil nil ((367 . 380)) nil (26041 20505 815996 684000) 0 nil])
([nil nil ((380 . 390)) nil (26041 20505 815996 545000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-doc-face fontified t)) . -380) (undo-tree-id375 . -1) (#("u" 0 1 (face font-lock-doc-face fontified t)) . -381) (undo-tree-id376 . -1) (#("r" 0 1 (face font-lock-doc-face fontified t)) . -382) (undo-tree-id377 . -1) (#("r" 0 1 (face font-lock-doc-face fontified t)) . -383) (undo-tree-id378 . -1) (#("e" 0 1 (face font-lock-doc-face fontified t)) . -384) (undo-tree-id379 . -1) (#("n" 0 1 (face font-lock-doc-face fontified t)) . -385) (undo-tree-id380 . -1) (#("t" 0 1 (face font-lock-doc-face fontified t)) . -386) (undo-tree-id381 . -1) (#("l" 0 1 (face font-lock-doc-face fontified t)) . -387) (undo-tree-id382 . -1) (#(" " 0 1 (face font-lock-doc-face fontified t)) . -388) (undo-tree-id383 . -1) (#("y" 0 1 (face font-lock-doc-face fontified t)) . -389) (undo-tree-id384 . -1) 390) nil (26041 20505 815995 973000) 0 nil])
([nil nil ((380 . 400)) nil (26041 20505 815993 785000) 0 nil])
([nil nil ((#("boards" 0 6 (face font-lock-doc-face fontified t)) . 394)) nil (26041 20505 815993 622000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-doc-face fontified t)) . -393) (undo-tree-id374 . -1) 394) nil (26041 20505 815993 440000) 0 nil])
([nil nil ((393 . 404)) nil (26041 20505 815992 579000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-doc-face fontified t)) . -403) (undo-tree-id373 . -1) 404) nil (26041 20505 815992 405000) 0 nil])
([nil nil ((403 . 410)) nil (26041 20505 815992 24000) 0 nil])
([nil nil ((412 . 416) (#("    " 0 4 (face font-lock-doc-face fontified nil)) . 411) (undo-tree-id372 . -4) (410 . 416)) nil (26041 20505 815991 840000) 0 nil])
([nil nil ((416 . 421)) nil (26041 20505 815991 436000) 0 nil])
([nil nil ((416 . 417)) nil (26041 20505 815991 294000) 0 nil])
([nil nil ((#("    aCache" 0 10 (face font-lock-doc-face fontified t)) . 412)) nil (26041 20505 815991 145000) 0 nil])
([nil nil ((412 . 416)) nil (26041 20505 815991 8000) 0 nil])
([nil nil ((416 . 437)) nil (26041 20505 815990 691000) 0 nil])
([nil nil ((437 . 444)) nil (26041 20505 815990 546000) 0 nil])
([nil nil ((#("u" 0 1 (face font-lock-doc-face fontified t)) . -442) (undo-tree-id370 . -1) (#("t" 0 1 (face font-lock-doc-face fontified t)) . -443) (undo-tree-id371 . -1) 444) nil (26041 20505 815990 107000) 0 nil])
([nil nil ((442 . 463)) nil (26041 20505 815989 465000) 0 nil])
([nil nil ((463 . 467)) nil (26041 20505 815989 336000) 0 nil])
([nil nil ((467 . 488)) nil (26041 20505 815989 193000) 0 nil])
([nil nil ((488 . 497)) nil (26041 20505 815988 919000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-doc-face fontified t)) . -489) (undo-tree-id362 . -1) (#("d" 0 1 (face font-lock-doc-face fontified t)) . -490) (undo-tree-id363 . -1) (#("y" 0 1 (face font-lock-doc-face fontified t)) . -491) (undo-tree-id364 . -1) (#(" " 0 1 (face font-lock-doc-face fontified t)) . -492) (undo-tree-id365 . -1) (#("h" 0 1 (face font-lock-doc-face fontified t)) . -493) (undo-tree-id366 . -1) (#("a" 0 1 (face font-lock-doc-face fontified t)) . -494) (undo-tree-id367 . -1) (#("v" 0 1 (face font-lock-doc-face fontified t)) . -495) (undo-tree-id368 . -1) (#("e" 0 1 (face font-lock-doc-face fontified t)) . -496) (undo-tree-id369 . -1) 497) nil (26041 20505 815988 540000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-doc-face fontified t)) . -473) (undo-tree-id346 . -1) (#("f" 0 1 (face font-lock-doc-face fontified t)) . -474) (undo-tree-id347 . -1) (#(" " 0 1 (face font-lock-doc-face fontified t)) . -475) (undo-tree-id348 . -1) (#("w" 0 1 (face font-lock-doc-face fontified t)) . -476) (undo-tree-id349 . -1) (#("e" 0 1 (face font-lock-doc-face fontified t)) . -477) (undo-tree-id350 . -1) (#(" " 0 1 (face font-lock-doc-face fontified t)) . -478) (undo-tree-id351 . -1) (#("d" 0 1 (face font-lock-doc-face fontified t)) . -479) (undo-tree-id352 . -1) (#("o" 0 1 (face font-lock-doc-face fontified t)) . -480) (undo-tree-id353 . -1) (#("n" 0 1 (face font-lock-doc-face fontified t)) . -481) (undo-tree-id354 . -1) (#("'" 0 1 (face font-lock-doc-face fontified t)) . -482) (undo-tree-id355 . -1) (#("t" 0 1 (face font-lock-doc-face fontified t)) . -483) (undo-tree-id356 . -1) (#(" " 0 1 (face font-lock-doc-face fontified t)) . -484) (undo-tree-id357 . -1) (#("a" 0 1 (face font-lock-doc-face fontified t)) . -485) (undo-tree-id358 . -1) (#("l" 0 1 (face font-lock-doc-face fontified t)) . -486) (undo-tree-id359 . -1) (#("r" 0 1 (face font-lock-doc-face fontified t)) . -487) (undo-tree-id360 . -1) (#("e" 0 1 (face font-lock-doc-face fontified t)) . -488) (undo-tree-id361 . -1) 489) nil (26041 20505 815986 12000) 0 nil])
([nil nil ((473 . 492)) nil (26041 20505 815973 893000) 0 nil])
([nil nil ((492 . 497)) nil (26041 20505 815973 523000) 0 nil])
([nil nil ((497 . 500)) nil (26041 20505 815970 647000) 0 nil])
([nil nil ((1043 . 1048) (t 26041 20505 821133 508000)) nil (26041 20552 806822 225000) 0 nil])
([nil nil ((1048 . 1067)) nil (26041 20552 806822 41000) 0 nil])
([nil nil ((1067 . 1088)) nil (26041 20552 806821 922000) 0 nil])
([nil nil ((1088 . 1090)) nil (26041 20552 806821 797000) 0 nil])
([nil nil ((1090 . 1095)) nil (26041 20552 806821 677000) 0 nil])
([nil nil ((1110 . 1115)) nil (26041 20552 806821 553000) 0 nil])
([nil nil ((1115 . 1131)) nil (26041 20552 806821 432000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-string-face fontified t)) . -1129) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (#("l" 0 1 (face font-lock-string-face fontified t)) . -1130) (undo-tree-id500 . -1) (undo-tree-id501 . -1) 1131) nil (26041 20552 806821 202000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-string-face fontified t)) . -1126) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -1127) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (#("b" 0 1 (face font-lock-string-face fontified t)) . -1128) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) 1129) nil (26041 20552 806819 597000) 0 nil])
([nil nil ((1126 . 1136)) nil (26041 20552 806815 513000) 0 nil])
([nil nil ((1136 . 1141)) nil (26041 20552 806815 393000) 0 nil])
([nil nil ((1164 . 1169)) nil (26041 20552 806815 258000) 0 nil])
([nil nil ((1169 . 1187)) nil (26041 20552 806815 125000) 0 nil])
([nil nil ((#("g" 0 1 (face font-lock-string-face fontified t)) . -1184) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (#("c" 0 1 (face font-lock-string-face fontified t)) . -1185) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -1186) (undo-tree-id470 . -1) (undo-tree-id471 . -1) 1187) nil (26041 20552 806814 818000) 0 nil])
([nil nil ((1184 . 1193)) nil (26041 20552 806812 751000) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-string-face fontified t)) . -1189) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) 1190) nil (26041 20552 806812 517000) 0 nil])
([nil nil ((1189 . 1206)) nil (26041 20552 806810 686000) 0 nil])
([nil current ((#("    " 0 4 (fontified t)) . 1133) (undo-tree-id393 . -4) (undo-tree-id394 . -4) (undo-tree-id395 . -4) (undo-tree-id396 . -4) (undo-tree-id397 . -4) (undo-tree-id398 . -4) (undo-tree-id399 . -4) (undo-tree-id400 . -4) (undo-tree-id401 . -4) (undo-tree-id402 . -4) (undo-tree-id403 . -4) (undo-tree-id404 . -4) (undo-tree-id405 . -4) (undo-tree-id406 . -4) (undo-tree-id407 . -4) (undo-tree-id408 . -4) (undo-tree-id409 . -4) (undo-tree-id410 . -4) (undo-tree-id411 . -4) (undo-tree-id412 . -4) (undo-tree-id413 . -4) (undo-tree-id414 . -4) (undo-tree-id415 . -4) (undo-tree-id416 . -4) (undo-tree-id417 . -4) (undo-tree-id418 . -4) (undo-tree-id419 . -4) (undo-tree-id420 . -4) (undo-tree-id421 . -4) (undo-tree-id422 . -4) (undo-tree-id423 . -4) (undo-tree-id424 . -4) (#("    " 0 4 (fontified t)) . 1091) (undo-tree-id425 . -4) (undo-tree-id426 . -4) (undo-tree-id427 . -4) (undo-tree-id428 . -4) (undo-tree-id429 . -4) (undo-tree-id430 . -4) (undo-tree-id431 . -4) (undo-tree-id432 . -4) (undo-tree-id433 . -4) (undo-tree-id434 . -4) (undo-tree-id435 . -4) (undo-tree-id436 . -4) (undo-tree-id437 . -4) (undo-tree-id438 . -4) (undo-tree-id439 . -4) (undo-tree-id440 . -4) (undo-tree-id441 . -4) (undo-tree-id442 . -4) (undo-tree-id443 . -4) (undo-tree-id444 . -4) (undo-tree-id445 . -4) (undo-tree-id446 . -4) (undo-tree-id447 . -4) (undo-tree-id448 . -4) (undo-tree-id449 . -4) (undo-tree-id450 . -4) (undo-tree-id451 . -4) (undo-tree-id452 . -4) (undo-tree-id453 . -4) (undo-tree-id454 . -4) (undo-tree-id455 . -4) (undo-tree-id456 . -4) 2243) nil (26041 20552 806807 546000) 0 nil])
nil
