Metadata-Version: 2.1
Name: spymarine
Version: 0.1
Summary: Communicate with Simarine devices using asyncio and Python
Author-email: Christopher Strack <christopher.strack@gmail.com>
Requires-Python: >=3.11
Description-Content-Type: text/markdown
Requires-Dist: mypy ; extra == "dev"
Requires-Dist: ruff ; extra == "dev"
Requires-Dist: pytest ; extra == "test"
Requires-Dist: pytest-asyncio ; extra == "test"
Requires-Dist: pytest-cov ; extra == "test"
Project-URL: Documentation, https://github.com/christopher-strack/spymarine/tree/main#readme
Project-URL: Source, https://github.com/christopher-strack/spymarine
Project-URL: Tracker, https://github.com/christopher-strack/spymarine/issues
Provides-Extra: dev
Provides-Extra: test

# spymarine

A library for spying on Simarine devices and their sensor values using asyncio and Python

Based on the fantastic reverse engineering work of https://github.com/htool/pico2signalk

Only tested with Simarine Pico rev2

## Getting Started

Run the following code on the same network that the Simarine device is connected to:

```python
import spymarine

# Print all devices and their latest sensor values every second
async with spymarine.DeviceReader() as reader:
    while True:
        await reader.read_sensors()
        print(reader.devices)
        await asyncio.sleep(1)
```

## Author

Christopher Strack

