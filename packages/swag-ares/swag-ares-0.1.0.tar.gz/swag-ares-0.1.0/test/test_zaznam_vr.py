# coding: utf-8

"""
    ARES: REST API - veřejné

    REST rozhraní systému ARES

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.zaznam_vr import ZaznamVr

class TestZaznamVr(unittest.TestCase):
    """ZaznamVr unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ZaznamVr:
        """Test ZaznamVr
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ZaznamVr`
        """
        model = ZaznamVr()
        if include_optional:
            return ZaznamVr(
                akcie = [
                    openapi_client.models.emise_akcie_vr.EmiseAkcieVr()
                    ],
                rejstrik = '',
                primarni_zaznam = True,
                spisova_znacka = [
                    openapi_client.models.spisova_znacka_vr.SpisovaZnackaVr()
                    ],
                ico = [
                    openapi_client.models.ico_vr.IcoVr()
                    ],
                obchodni_jmeno = [
                    openapi_client.models.obchodni_jmeno_vr.ObchodniJmenoVr()
                    ],
                vklady = [
                    openapi_client.models.vklad_vr.VkladVr()
                    ],
                obchodni_jmeno_cizi = [
                    openapi_client.models.obchodni_jmeno_cizi_vr.ObchodniJmenoCiziVr()
                    ],
                zakladni_kapital = [
                    openapi_client.models.zakladni_kapital_vr.ZakladniKapitalVr()
                    ],
                pravni_forma = [
                    openapi_client.models.pravni_forma_vr.PravniFormaVr()
                    ],
                financni_urad = '048012',
                adresy = [
                    openapi_client.models.adresa_vr.AdresaVr()
                    ],
                ostatni_skutecnosti = [
                    openapi_client.models.obecny_text_vr.ObecnyTextVr()
                    ],
                datum_aktualizace = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                stav_subjektu = '0',
                datum_vzniku = [
                    openapi_client.models.datum_vr.DatumVr()
                    ],
                datum_zapisu = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                datum_vymazu = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                zpusob_rizeni = [
                    openapi_client.models.zpusob_rizeni_vr.ZpusobRizeniVr()
                    ],
                kategorie_zo = [
                    openapi_client.models.kategorie_zo_vr.KategorieZoVr()
                    ],
                pravni_duvod_vymazu = [
                    openapi_client.models.obecny_text_vr.ObecnyTextVr()
                    ],
                cinnosti = openapi_client.models.cinnosti_vr.CinnostiVr(
                    predmet_podnikani = [
                        openapi_client.models.obecny_text_vr.ObecnyTextVr()
                        ], 
                    doplnkova_cinnost = [
                        openapi_client.models.obecny_text_vr.ObecnyTextVr()
                        ], 
                    predmet_cinnosti = [
                        openapi_client.models.obecny_text_vr.ObecnyTextVr()
                        ], 
                    ucel = [
                        openapi_client.models.obecny_text_vr.ObecnyTextVr()
                        ], ),
                nazev_nejvyssiho_organu = [
                    openapi_client.models.obecny_text_vr.ObecnyTextVr()
                    ],
                exekuce = [
                    openapi_client.models.obecny_text_vr.ObecnyTextVr()
                    ],
                ostatni_organy = [
                    openapi_client.models.organ_vr.OrganVr()
                    ],
                statutarni_organy = [
                    openapi_client.models.statutarni_organ_vr.StatutarniOrganVr()
                    ],
                podnikatel = [
                    openapi_client.models.podnikatel_vr.PodnikatelVr()
                    ],
                spolecnici = [
                    openapi_client.models.spolecnici_vr.SpolecniciVr()
                    ],
                odstepne_zavody = [
                    openapi_client.models.odstepny_zavod_vr.OdstepnyZavodVr()
                    ],
                insolvence = [
                    openapi_client.models.insolvencni_rizeni_vr.InsolvencniRizeniVr()
                    ],
                konkursy = [
                    openapi_client.models.konkurs_vr.KonkursVr()
                    ]
            )
        else:
            return ZaznamVr(
        )
        """

    def testZaznamVr(self):
        """Test ZaznamVr"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
