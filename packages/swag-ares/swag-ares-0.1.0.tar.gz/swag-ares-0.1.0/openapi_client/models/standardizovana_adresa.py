# coding: utf-8

"""
    ARES: REST API - veřejné

    REST rozhraní systému ARES

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, Field, StrictInt, StrictStr
from typing import Any, ClassVar, Dict, List, Optional
from typing_extensions import Annotated
from typing import Optional, Set
from typing_extensions import Self

class StandardizovanaAdresa(BaseModel):
    """
    Standardizovaná adresa
    """ # noqa: E501
    typ_stavebniho_objektu: Optional[StrictStr] = Field(default=None, description="Typ stavebního objektu - kód (Číselník kod:TypStavebnihoObjektu, zdroj:ruian) ", alias="typStavebnihoObjektu")
    cislo_domovni: Optional[Annotated[int, Field(le=9999, strict=True)]] = Field(default=None, description="Číslo domovní", alias="cisloDomovni")
    cislo_orientacni: Optional[Annotated[int, Field(le=999, strict=True)]] = Field(default=None, description="Číslo orientační - číselná část", alias="cisloOrientacni")
    cislo_orientacni_pismeno: Optional[Annotated[str, Field(strict=True, max_length=1)]] = Field(default=None, description="Číslo orientační - písmenná část", alias="cisloOrientacniPismeno")
    kod_adresniho_mista: Optional[Annotated[int, Field(le=999999999, strict=True, ge=0)]] = Field(default=None, description="Kód adresního místa", alias="kodAdresnihoMista")
    kod_casti_obce: Optional[Annotated[int, Field(le=999999, strict=True, ge=0)]] = Field(default=None, description="Kód časti obce", alias="kodCastiObce")
    kod_kraje: Optional[Annotated[int, Field(le=999, strict=True, ge=0)]] = Field(default=None, description="Kód kraje", alias="kodKraje")
    kod_mestske_casti_obvodu: Optional[Annotated[int, Field(le=999999, strict=True, ge=0)]] = Field(default=None, description="Kód městské části statutárního města", alias="kodMestskeCastiObvodu")
    kod_mestskeho_obvodu_p: Optional[Annotated[int, Field(le=999, strict=True, ge=0)]] = Field(default=None, description="Kód městského obvodu Prahy", alias="kodMestskehoObvoduP")
    kod_obce: Optional[Annotated[int, Field(le=999999, strict=True, ge=0)]] = Field(default=None, description="Kód obce", alias="kodObce")
    kod_okresu: Optional[Annotated[int, Field(le=9999, strict=True, ge=0)]] = Field(default=None, description="Kód okresu", alias="kodOkresu")
    kod_spravniho_obvodu_p: Optional[Annotated[int, Field(le=999, strict=True, ge=0)]] = Field(default=None, description="Kód správního obvodu Prahy", alias="kodSpravnihoObvoduP")
    kod_stavebniho_objektu: Optional[Annotated[int, Field(le=999999999, strict=True, ge=0)]] = Field(default=None, description="Kód stavebního objektu", alias="kodStavebnihoObjektu")
    kod_ulice: Optional[Annotated[int, Field(le=9999999, strict=True, ge=0)]] = Field(default=None, description="Kód ulice, veřejného prostranství ze zdroje", alias="kodUlice")
    nazev_casti_obce: Optional[Annotated[str, Field(strict=True, max_length=48)]] = Field(default=None, description="Název části obce", alias="nazevCastiObce")
    nazev_kraje: Optional[Annotated[str, Field(strict=True, max_length=32)]] = Field(default=None, description="Název kraje", alias="nazevKraje")
    nazev_mestske_casti_obvodu: Optional[Annotated[str, Field(strict=True, max_length=48)]] = Field(default=None, description="Název městské části statutárního města ", alias="nazevMestskeCastiObvodu")
    nazev_mestskeho_obvodu_p: Optional[Annotated[str, Field(strict=True, max_length=32)]] = Field(default=None, description="Název městského obvodu Prahy", alias="nazevMestskehoObvoduP")
    nazev_obce: Optional[Annotated[str, Field(strict=True, max_length=48)]] = Field(default=None, description="Název obce", alias="nazevObce")
    nazev_okresu: Optional[Annotated[str, Field(strict=True, max_length=32)]] = Field(default=None, description="Název okresu", alias="nazevOkresu")
    nazev_spravniho_obvodu_p: Optional[Annotated[str, Field(strict=True, max_length=32)]] = Field(default=None, description="Název správního obvodu Prahy ", alias="nazevSpravnihoObvoduP")
    nazev_ulice: Optional[Annotated[str, Field(strict=True, max_length=48)]] = Field(default=None, description="Název ulice, veřejného prostranství ", alias="nazevUlice")
    psc: Optional[StrictInt] = Field(default=None, description="Poštovní směrovací číslo adresní pošty")
    textova_adresa: Optional[Annotated[str, Field(strict=True, max_length=1500)]] = Field(default=None, description="Textová podoba adresy", alias="textovaAdresa")
    __properties: ClassVar[List[str]] = ["typStavebnihoObjektu", "cisloDomovni", "cisloOrientacni", "cisloOrientacniPismeno", "kodAdresnihoMista", "kodCastiObce", "kodKraje", "kodMestskeCastiObvodu", "kodMestskehoObvoduP", "kodObce", "kodOkresu", "kodSpravnihoObvoduP", "kodStavebnihoObjektu", "kodUlice", "nazevCastiObce", "nazevKraje", "nazevMestskeCastiObvodu", "nazevMestskehoObvoduP", "nazevObce", "nazevOkresu", "nazevSpravnihoObvoduP", "nazevUlice", "psc", "textovaAdresa"]

    model_config = {
        "populate_by_name": True,
        "validate_assignment": True,
        "protected_namespaces": (),
    }


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of StandardizovanaAdresa from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of StandardizovanaAdresa from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "typStavebnihoObjektu": obj.get("typStavebnihoObjektu"),
            "cisloDomovni": obj.get("cisloDomovni"),
            "cisloOrientacni": obj.get("cisloOrientacni"),
            "cisloOrientacniPismeno": obj.get("cisloOrientacniPismeno"),
            "kodAdresnihoMista": obj.get("kodAdresnihoMista"),
            "kodCastiObce": obj.get("kodCastiObce"),
            "kodKraje": obj.get("kodKraje"),
            "kodMestskeCastiObvodu": obj.get("kodMestskeCastiObvodu"),
            "kodMestskehoObvoduP": obj.get("kodMestskehoObvoduP"),
            "kodObce": obj.get("kodObce"),
            "kodOkresu": obj.get("kodOkresu"),
            "kodSpravnihoObvoduP": obj.get("kodSpravnihoObvoduP"),
            "kodStavebnihoObjektu": obj.get("kodStavebnihoObjektu"),
            "kodUlice": obj.get("kodUlice"),
            "nazevCastiObce": obj.get("nazevCastiObce"),
            "nazevKraje": obj.get("nazevKraje"),
            "nazevMestskeCastiObvodu": obj.get("nazevMestskeCastiObvodu"),
            "nazevMestskehoObvoduP": obj.get("nazevMestskehoObvoduP"),
            "nazevObce": obj.get("nazevObce"),
            "nazevOkresu": obj.get("nazevOkresu"),
            "nazevSpravnihoObvoduP": obj.get("nazevSpravnihoObvoduP"),
            "nazevUlice": obj.get("nazevUlice"),
            "psc": obj.get("psc"),
            "textovaAdresa": obj.get("textovaAdresa")
        })
        return _obj


