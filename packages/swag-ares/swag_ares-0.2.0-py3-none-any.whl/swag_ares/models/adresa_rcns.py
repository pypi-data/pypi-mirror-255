# coding: utf-8

"""
    ARES: REST API - veřejné

    REST rozhraní systému ARES

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import date
from pydantic import BaseModel, Field, StrictBool, StrictInt
from typing import Any, ClassVar, Dict, List, Optional
from typing_extensions import Annotated
from typing import Optional, Set
from typing_extensions import Self

class AdresaRcns(BaseModel):
    """
    AdresaRcns
    """ # noqa: E501
    kod_statu: Optional[Annotated[str, Field(min_length=3, strict=True, max_length=3)]] = Field(default=None, description="Kód státu (ciselnikKod: Stat) ", alias="kodStatu")
    nazev_statu: Optional[Annotated[str, Field(strict=True, max_length=32)]] = Field(default=None, description="Název státu", alias="nazevStatu")
    kod_kraje: Optional[Annotated[int, Field(le=999, strict=True, ge=0)]] = Field(default=None, description="Kód kraje", alias="kodKraje")
    nazev_kraje: Optional[Annotated[str, Field(strict=True, max_length=32)]] = Field(default=None, description="Název kraje", alias="nazevKraje")
    kod_okresu: Optional[Annotated[int, Field(le=9999, strict=True, ge=0)]] = Field(default=None, description="Kód okresu", alias="kodOkresu")
    nazev_okresu: Optional[Annotated[str, Field(strict=True, max_length=32)]] = Field(default=None, description="Název okresu", alias="nazevOkresu")
    kod_obce: Optional[Annotated[int, Field(le=999999, strict=True, ge=0)]] = Field(default=None, description="Kód obce", alias="kodObce")
    nazev_obce: Optional[Annotated[str, Field(strict=True, max_length=48)]] = Field(default=None, description="Název obce", alias="nazevObce")
    kod_spravniho_obvodu: Optional[Annotated[int, Field(le=999, strict=True, ge=0)]] = Field(default=None, description="Kód správního obvodu Prahy", alias="kodSpravnihoObvodu")
    nazev_spravniho_obvodu: Optional[Annotated[str, Field(strict=True, max_length=32)]] = Field(default=None, description="Název správního obvodu Prahy ", alias="nazevSpravnihoObvodu")
    kod_mestskeho_obvodu: Optional[Annotated[int, Field(le=999, strict=True, ge=0)]] = Field(default=None, description="Kód městského obvodu Prahy", alias="kodMestskehoObvodu")
    nazev_mestskeho_obvodu: Optional[Annotated[str, Field(strict=True, max_length=32)]] = Field(default=None, description="Název městského obvodu Prahy", alias="nazevMestskehoObvodu")
    kod_mestske_casti_obvodu: Optional[Annotated[int, Field(le=999999, strict=True, ge=0)]] = Field(default=None, description="Kód městské části statutárního města", alias="kodMestskeCastiObvodu")
    kod_ulice: Optional[Annotated[int, Field(le=9999999, strict=True, ge=0)]] = Field(default=None, description="Kód ulice, veřejného prostranství ze zdroje", alias="kodUlice")
    nazev_mestske_casti_obvodu: Optional[Annotated[str, Field(strict=True, max_length=48)]] = Field(default=None, description="Název městské části statutárního města ", alias="nazevMestskeCastiObvodu")
    nazev_ulice: Optional[Annotated[str, Field(strict=True, max_length=48)]] = Field(default=None, description="Název ulice, veřejného prostranství ", alias="nazevUlice")
    cislo_domovni: Optional[Annotated[int, Field(le=9999, strict=True)]] = Field(default=None, description="Číslo domovní", alias="cisloDomovni")
    doplnek_adresy: Optional[Annotated[str, Field(strict=True, max_length=1500)]] = Field(default=None, description="Doplňující informace adresního popisu", alias="doplnekAdresy")
    kod_casti_obce: Optional[Annotated[int, Field(le=999999, strict=True, ge=0)]] = Field(default=None, description="Kód časti obce", alias="kodCastiObce")
    cislo_orientacni: Optional[Annotated[int, Field(le=999, strict=True)]] = Field(default=None, description="Číslo orientační - číselná část", alias="cisloOrientacni")
    cislo_orientacni_pismeno: Optional[Annotated[str, Field(strict=True, max_length=1)]] = Field(default=None, description="Číslo orientační - písmenná část", alias="cisloOrientacniPismeno")
    nazev_casti_obce: Optional[Annotated[str, Field(strict=True, max_length=48)]] = Field(default=None, description="Název části obce", alias="nazevCastiObce")
    kod_adresniho_mista: Optional[Annotated[int, Field(le=999999999, strict=True, ge=0)]] = Field(default=None, description="Kód adresního místa", alias="kodAdresnihoMista")
    psc: Optional[StrictInt] = Field(default=None, description="Poštovní směrovací číslo adresní pošty")
    textova_adresa: Optional[Annotated[str, Field(strict=True, max_length=1500)]] = Field(default=None, description="Nestrukturovaná adresa (formátovaná adresa)", alias="textovaAdresa")
    cislo_do_adresy: Optional[Annotated[str, Field(strict=True, max_length=255)]] = Field(default=None, description="Nestrukturované číslo/a použíté v adrese", alias="cisloDoAdresy")
    typ_cislo_domovni: Optional[Annotated[str, Field(min_length=1, strict=True, max_length=64)]] = Field(default=None, description="Typ čísla domu (ciselnikKod: TypCislaDomovniho) ", alias="typCisloDomovni")
    standardizace_adresy: Optional[StrictBool] = Field(default=None, description="Stav standardizace adresy dle RÚIAN", alias="standardizaceAdresy")
    psc_txt: Optional[Annotated[str, Field(strict=True)]] = Field(default=None, description="Psč zahraničních nebo nestandardně definovaných čísel", alias="pscTxt")
    platnost_od: Optional[date] = Field(default=None, description="Platnost adresy od data", alias="platnostOd")
    platnost_do: Optional[date] = Field(default=None, description="Platnost adresy do data", alias="platnostDo")
    typ_adresy: Optional[Annotated[str, Field(min_length=1, strict=True, max_length=64)]] = Field(default=None, description="Typ adresy  - kód (ciselnikKod: TypAdresy, zdroj: rcns) ", alias="typAdresy")
    __properties: ClassVar[List[str]] = ["kodStatu", "nazevStatu", "kodKraje", "nazevKraje", "kodOkresu", "nazevOkresu", "kodObce", "nazevObce", "kodSpravnihoObvodu", "nazevSpravnihoObvodu", "kodMestskehoObvodu", "nazevMestskehoObvodu", "kodMestskeCastiObvodu", "kodUlice", "nazevMestskeCastiObvodu", "nazevUlice", "cisloDomovni", "doplnekAdresy", "kodCastiObce", "cisloOrientacni", "cisloOrientacniPismeno", "nazevCastiObce", "kodAdresnihoMista", "psc", "textovaAdresa", "cisloDoAdresy", "typCisloDomovni", "standardizaceAdresy", "pscTxt", "platnostOd", "platnostDo", "typAdresy"]

    model_config = {
        "populate_by_name": True,
        "validate_assignment": True,
        "protected_namespaces": (),
    }


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of AdresaRcns from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of AdresaRcns from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "kodStatu": obj.get("kodStatu"),
            "nazevStatu": obj.get("nazevStatu"),
            "kodKraje": obj.get("kodKraje"),
            "nazevKraje": obj.get("nazevKraje"),
            "kodOkresu": obj.get("kodOkresu"),
            "nazevOkresu": obj.get("nazevOkresu"),
            "kodObce": obj.get("kodObce"),
            "nazevObce": obj.get("nazevObce"),
            "kodSpravnihoObvodu": obj.get("kodSpravnihoObvodu"),
            "nazevSpravnihoObvodu": obj.get("nazevSpravnihoObvodu"),
            "kodMestskehoObvodu": obj.get("kodMestskehoObvodu"),
            "nazevMestskehoObvodu": obj.get("nazevMestskehoObvodu"),
            "kodMestskeCastiObvodu": obj.get("kodMestskeCastiObvodu"),
            "kodUlice": obj.get("kodUlice"),
            "nazevMestskeCastiObvodu": obj.get("nazevMestskeCastiObvodu"),
            "nazevUlice": obj.get("nazevUlice"),
            "cisloDomovni": obj.get("cisloDomovni"),
            "doplnekAdresy": obj.get("doplnekAdresy"),
            "kodCastiObce": obj.get("kodCastiObce"),
            "cisloOrientacni": obj.get("cisloOrientacni"),
            "cisloOrientacniPismeno": obj.get("cisloOrientacniPismeno"),
            "nazevCastiObce": obj.get("nazevCastiObce"),
            "kodAdresnihoMista": obj.get("kodAdresnihoMista"),
            "psc": obj.get("psc"),
            "textovaAdresa": obj.get("textovaAdresa"),
            "cisloDoAdresy": obj.get("cisloDoAdresy"),
            "typCisloDomovni": obj.get("typCisloDomovni"),
            "standardizaceAdresy": obj.get("standardizaceAdresy"),
            "pscTxt": obj.get("pscTxt"),
            "platnostOd": obj.get("platnostOd"),
            "platnostDo": obj.get("platnostDo"),
            "typAdresy": obj.get("typAdresy")
        })
        return _obj


