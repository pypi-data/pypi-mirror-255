# coding: utf-8

"""
    ARES: REST API - veřejné

    REST rozhraní systému ARES

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, Field
from typing import Any, ClassVar, Dict, List, Optional
from typing_extensions import Annotated
from typing import Optional, Set
from typing_extensions import Self

class SeznamRegistraci(BaseModel):
    """
    Seznam registrací ekonomického subjektu v jednotlivých zdrojích
    """ # noqa: E501
    stav_zdroje_vr: Optional[Annotated[str, Field(min_length=1, strict=True, max_length=64)]] = Field(default=None, description="Stav ekonomického subjektu ve zdroji VR (Veřejné rejstříky) - kód (ciselnikKod: StavZdroje, zdroj: com) ", alias="stavZdrojeVr")
    stav_zdroje_res: Optional[Annotated[str, Field(min_length=1, strict=True, max_length=64)]] = Field(default=None, description="Stav ekonomického subjektu ve zdroji RES (Registr ekonomických subjektů) - kód (ciselnikKod: StavZdroje, zdroj: com) ", alias="stavZdrojeRes")
    stav_zdroje_rzp: Optional[Annotated[str, Field(min_length=1, strict=True, max_length=64)]] = Field(default=None, description="Stav ekonomického subjektu ve zdroji RŽP (Registr živnostenského podnikání) - kód (ciselnikKod: StavZdroje, zdroj: com) ", alias="stavZdrojeRzp")
    stav_zdroje_nrpzs: Optional[Annotated[str, Field(min_length=1, strict=True, max_length=64)]] = Field(default=None, description="Stav ekonomického subjektu ve zdroji NRPZS (Národní registr poskytovatelů zdrovotnických služeb) - kód (ciselnikKod: StavZdroje, zdroj: com) ", alias="stavZdrojeNrpzs")
    stav_zdroje_rpsh: Optional[Annotated[str, Field(min_length=1, strict=True, max_length=64)]] = Field(default=None, description="Stav ekonomického subjektu ve zdroji RPSH (Registr politických stran a hnutí) - kód (ciselnikKod: StavZdroje, zdroj: com) ", alias="stavZdrojeRpsh")
    stav_zdroje_rcns: Optional[Annotated[str, Field(min_length=1, strict=True, max_length=64)]] = Field(default=None, description="Stav ekonomického subjektu ve zdroji RCNS(Registr církví a náboženských společenství) - kód (ciselnikKod: StavZdroje, zdroj: com) ", alias="stavZdrojeRcns")
    stav_zdroje_szr: Optional[Annotated[str, Field(min_length=1, strict=True, max_length=64)]] = Field(default=None, description="Stav ekonomického subjektu ve zdroji  SZR(Společný zemědělský registr) - kód (ciselnikKod: StavZdroje, zdroj: com) ", alias="stavZdrojeSzr")
    stav_zdroje_dph: Optional[Annotated[str, Field(min_length=1, strict=True, max_length=64)]] = Field(default=None, description="Stav ekonomického subjektu ve zdroji DPH(Registr plátců daně s přidané hodnoty) - kód (ciselnikKod: StavZdroje, zdroj: com) ", alias="stavZdrojeDph")
    stav_zdroje_sd: Optional[Annotated[str, Field(min_length=1, strict=True, max_length=64)]] = Field(default=None, description="Stav ekonomického subjektu ve zdroji SD(Registr plátců spotřební daně) - kód (ciselnikKod: StavZdroje, zdroj: com) ", alias="stavZdrojeSd")
    stav_zdroje_ir: Optional[Annotated[str, Field(min_length=1, strict=True, max_length=64)]] = Field(default=None, description="Stav ekonomického subjektu ve zdroji ISIR(Insolvenční rejstřík) - kód (ciselnikKod: StavZdroje, zdroj: com) ", alias="stavZdrojeIr")
    stav_zdroje_ceu: Optional[Annotated[str, Field(min_length=1, strict=True, max_length=64)]] = Field(default=None, description="Stav ekonomického subjektu ve zdroji CEÚ(Centrální evidence úpadců) - kód (ciselnikKod: StavZdroje, zdroj: com) ", alias="stavZdrojeCeu")
    stav_zdroje_rs: Optional[Annotated[str, Field(min_length=1, strict=True, max_length=64)]] = Field(default=None, description="Stav ekonomického subjektu ve zdroji RŠ(Registr škol) - kód (ciselnikKod: StavZdroje, zdroj: com) ", alias="stavZdrojeRs")
    stav_zdroje_red: Optional[Annotated[str, Field(min_length=1, strict=True, max_length=64)]] = Field(default=None, description="Stav ekonomického subjektu ve zdroji RED(Registr evidence dotací) - kód (ciselnikKod: StavZdroje, zdroj: com) ", alias="stavZdrojeRed")
    __properties: ClassVar[List[str]] = ["stavZdrojeVr", "stavZdrojeRes", "stavZdrojeRzp", "stavZdrojeNrpzs", "stavZdrojeRpsh", "stavZdrojeRcns", "stavZdrojeSzr", "stavZdrojeDph", "stavZdrojeSd", "stavZdrojeIr", "stavZdrojeCeu", "stavZdrojeRs", "stavZdrojeRed"]

    model_config = {
        "populate_by_name": True,
        "validate_assignment": True,
        "protected_namespaces": (),
    }


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of SeznamRegistraci from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of SeznamRegistraci from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "stavZdrojeVr": obj.get("stavZdrojeVr"),
            "stavZdrojeRes": obj.get("stavZdrojeRes"),
            "stavZdrojeRzp": obj.get("stavZdrojeRzp"),
            "stavZdrojeNrpzs": obj.get("stavZdrojeNrpzs"),
            "stavZdrojeRpsh": obj.get("stavZdrojeRpsh"),
            "stavZdrojeRcns": obj.get("stavZdrojeRcns"),
            "stavZdrojeSzr": obj.get("stavZdrojeSzr"),
            "stavZdrojeDph": obj.get("stavZdrojeDph"),
            "stavZdrojeSd": obj.get("stavZdrojeSd"),
            "stavZdrojeIr": obj.get("stavZdrojeIr"),
            "stavZdrojeCeu": obj.get("stavZdrojeCeu"),
            "stavZdrojeRs": obj.get("stavZdrojeRs"),
            "stavZdrojeRed": obj.get("stavZdrojeRed")
        })
        return _obj


