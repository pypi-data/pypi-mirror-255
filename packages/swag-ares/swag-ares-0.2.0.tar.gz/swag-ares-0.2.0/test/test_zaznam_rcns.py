# coding: utf-8

"""
    ARES: REST API - veřejné

    REST rozhraní systému ARES

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.zaznam_rcns import ZaznamRcns

class TestZaznamRcns(unittest.TestCase):
    """ZaznamRcns unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ZaznamRcns:
        """Test ZaznamRcns
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ZaznamRcns`
        """
        model = ZaznamRcns()
        if include_optional:
            return ZaznamRcns(
                ico = '0480728801234567',
                obchodni_jmeno = '0',
                sidlo = openapi_client.models.adresa.Adresa(
                    kod_statu = '012', 
                    nazev_statu = '', 
                    kod_kraje = 0, 
                    nazev_kraje = '', 
                    kod_okresu = 0, 
                    nazev_okresu = '', 
                    kod_obce = 0, 
                    nazev_obce = '', 
                    kod_spravniho_obvodu = 0, 
                    nazev_spravniho_obvodu = '', 
                    kod_mestskeho_obvodu = 0, 
                    nazev_mestskeho_obvodu = '', 
                    kod_mestske_casti_obvodu = 0, 
                    kod_ulice = 0, 
                    nazev_mestske_casti_obvodu = '', 
                    nazev_ulice = '', 
                    cislo_domovni = 56, 
                    doplnek_adresy = '', 
                    kod_casti_obce = 0, 
                    cislo_orientacni = 56, 
                    cislo_orientacni_pismeno = '', 
                    nazev_casti_obce = '', 
                    kod_adresniho_mista = 0, 
                    psc = 56, 
                    textova_adresa = '', 
                    cislo_do_adresy = '', 
                    typ_cislo_domovni = '0', 
                    standardizace_adresy = True, 
                    psc_txt = '', ),
                pravni_forma = '048012',
                financni_urad = '048012',
                datum_vzniku = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                datum_zaniku = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                datum_aktualizace = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                dic = '',
                typ_subjektu = '0',
                stat = '012',
                primarni_zaznam = True,
                registrace = openapi_client.models.registrace_rcns.RegistraceRcns(
                    cislo_registrace = '', 
                    cislo_zruseni_registrace = '', 
                    datum_likvidace = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    datum_konkurzu = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    datum_opatrovnik = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    datum_zruseni_registrace = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ),
                zpusob_jednani = [
                    openapi_client.models.zpusob_jednani.ZpusobJednani(
                        popis = '', 
                        platnost_od = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        platnost_do = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), )
                    ],
                adresy_subjektu = [
                    openapi_client.models.adresa_rcns.AdresaRcns()
                    ],
                zdroj_id = '',
                platnost_od = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                statutarni_organ = openapi_client.models.statutatni_organ_rcns.StatutatniOrganRcns(
                    subjekt_cirkev = openapi_client.models.subjekt_cirkev.SubjektCirkev(), 
                    subjekt_svaz_cirkvi = openapi_client.models.subjekt_svaz_cirkvi.SubjektSvazCirkvi(), 
                    subjekt_pravnicka_osoba = openapi_client.models.subjekt_pravnicka_osoba.SubjektPravnickaOsoba(), ),
                likvidatori = [
                    openapi_client.models.angazma_rcns.AngazmaRcns(
                        osoba_pravnicka = openapi_client.models.angazovany_subjekt_rcns.AngazovanySubjektRcns(), 
                        osoba_fyzicka = openapi_client.models.angazovana_osoba_rcns.AngazovanaOsobaRcns(), )
                    ],
                konkurzni_spravci = [
                    openapi_client.models.angazma_rcns.AngazmaRcns(
                        osoba_pravnicka = openapi_client.models.angazovany_subjekt_rcns.AngazovanySubjektRcns(), 
                        osoba_fyzicka = openapi_client.models.angazovana_osoba_rcns.AngazovanaOsobaRcns(), )
                    ],
                opatrovnici = [
                    openapi_client.models.angazma_rcns.AngazmaRcns(
                        osoba_pravnicka = openapi_client.models.angazovany_subjekt_rcns.AngazovanySubjektRcns(), 
                        osoba_fyzicka = openapi_client.models.angazovana_osoba_rcns.AngazovanaOsobaRcns(), )
                    ]
            )
        else:
            return ZaznamRcns(
        )
        """

    def testZaznamRcns(self):
        """Test ZaznamRcns"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
