# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ....core.datetime_utils import serialize_datetime
from .application_id import ApplicationId
from .deployment_id import DeploymentId


class Deployment(pydantic.BaseModel):
    deployment_id: DeploymentId = pydantic.Field(alias="deploymentId")
    application_id: ApplicationId = pydantic.Field(alias="applicationId")
    status: str
    started_at: dt.datetime = pydantic.Field(alias="startedAt")
    finished_at: typing.Optional[dt.datetime] = pydantic.Field(alias="finishedAt")

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
