/*
 * Bitwarden Internal API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 *
 * Generated by: https://openapi-generator.tech
 */

///
#[repr(i64)]
#[derive(
    Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize_repr, Deserialize_repr,
)]
pub enum GlobalEquivalentDomainsType {
    Variant0 = 0,
    Variant1 = 1,
    Variant2 = 2,
    Variant3 = 3,
    Variant4 = 4,
    Variant5 = 5,
    Variant6 = 6,
    Variant7 = 7,
    Variant8 = 8,
    Variant9 = 9,
    Variant10 = 10,
    Variant11 = 11,
    Variant12 = 12,
    Variant13 = 13,
    Variant14 = 14,
    Variant15 = 15,
    Variant16 = 16,
    Variant17 = 17,
    Variant18 = 18,
    Variant19 = 19,
    Variant20 = 20,
    Variant21 = 21,
    Variant22 = 22,
    Variant23 = 23,
    Variant24 = 24,
    Variant25 = 25,
    Variant26 = 26,
    Variant27 = 27,
    Variant28 = 28,
    Variant29 = 29,
    Variant30 = 30,
    Variant31 = 31,
    Variant32 = 32,
    Variant33 = 33,
    Variant34 = 34,
    Variant35 = 35,
    Variant36 = 36,
    Variant37 = 37,
    Variant38 = 38,
    Variant39 = 39,
    Variant40 = 40,
    Variant41 = 41,
    Variant42 = 42,
    Variant43 = 43,
    Variant44 = 44,
    Variant45 = 45,
    Variant46 = 46,
    Variant47 = 47,
    Variant48 = 48,
    Variant49 = 49,
    Variant50 = 50,
    Variant51 = 51,
    Variant52 = 52,
    Variant53 = 53,
    Variant54 = 54,
    Variant55 = 55,
    Variant56 = 56,
    Variant57 = 57,
    Variant58 = 58,
    Variant59 = 59,
    Variant60 = 60,
    Variant61 = 61,
    Variant62 = 62,
    Variant63 = 63,
    Variant64 = 64,
    Variant65 = 65,
    Variant66 = 66,
    Variant67 = 67,
    Variant68 = 68,
    Variant69 = 69,
    Variant70 = 70,
    Variant71 = 71,
    Variant72 = 72,
    Variant73 = 73,
    Variant74 = 74,
    Variant75 = 75,
    Variant76 = 76,
    Variant77 = 77,
    Variant78 = 78,
    Variant79 = 79,
    Variant80 = 80,
    Variant81 = 81,
    Variant82 = 82,
    Variant83 = 83,
    Variant84 = 84,
    Variant85 = 85,
    Variant86 = 86,
    Variant87 = 87,
    Variant88 = 88,
    Variant89 = 89,
    Variant90 = 90,
}

impl ToString for GlobalEquivalentDomainsType {
    fn to_string(&self) -> String {
        match self {
            Self::Variant0 => String::from("0"),
            Self::Variant1 => String::from("1"),
            Self::Variant2 => String::from("2"),
            Self::Variant3 => String::from("3"),
            Self::Variant4 => String::from("4"),
            Self::Variant5 => String::from("5"),
            Self::Variant6 => String::from("6"),
            Self::Variant7 => String::from("7"),
            Self::Variant8 => String::from("8"),
            Self::Variant9 => String::from("9"),
            Self::Variant10 => String::from("10"),
            Self::Variant11 => String::from("11"),
            Self::Variant12 => String::from("12"),
            Self::Variant13 => String::from("13"),
            Self::Variant14 => String::from("14"),
            Self::Variant15 => String::from("15"),
            Self::Variant16 => String::from("16"),
            Self::Variant17 => String::from("17"),
            Self::Variant18 => String::from("18"),
            Self::Variant19 => String::from("19"),
            Self::Variant20 => String::from("20"),
            Self::Variant21 => String::from("21"),
            Self::Variant22 => String::from("22"),
            Self::Variant23 => String::from("23"),
            Self::Variant24 => String::from("24"),
            Self::Variant25 => String::from("25"),
            Self::Variant26 => String::from("26"),
            Self::Variant27 => String::from("27"),
            Self::Variant28 => String::from("28"),
            Self::Variant29 => String::from("29"),
            Self::Variant30 => String::from("30"),
            Self::Variant31 => String::from("31"),
            Self::Variant32 => String::from("32"),
            Self::Variant33 => String::from("33"),
            Self::Variant34 => String::from("34"),
            Self::Variant35 => String::from("35"),
            Self::Variant36 => String::from("36"),
            Self::Variant37 => String::from("37"),
            Self::Variant38 => String::from("38"),
            Self::Variant39 => String::from("39"),
            Self::Variant40 => String::from("40"),
            Self::Variant41 => String::from("41"),
            Self::Variant42 => String::from("42"),
            Self::Variant43 => String::from("43"),
            Self::Variant44 => String::from("44"),
            Self::Variant45 => String::from("45"),
            Self::Variant46 => String::from("46"),
            Self::Variant47 => String::from("47"),
            Self::Variant48 => String::from("48"),
            Self::Variant49 => String::from("49"),
            Self::Variant50 => String::from("50"),
            Self::Variant51 => String::from("51"),
            Self::Variant52 => String::from("52"),
            Self::Variant53 => String::from("53"),
            Self::Variant54 => String::from("54"),
            Self::Variant55 => String::from("55"),
            Self::Variant56 => String::from("56"),
            Self::Variant57 => String::from("57"),
            Self::Variant58 => String::from("58"),
            Self::Variant59 => String::from("59"),
            Self::Variant60 => String::from("60"),
            Self::Variant61 => String::from("61"),
            Self::Variant62 => String::from("62"),
            Self::Variant63 => String::from("63"),
            Self::Variant64 => String::from("64"),
            Self::Variant65 => String::from("65"),
            Self::Variant66 => String::from("66"),
            Self::Variant67 => String::from("67"),
            Self::Variant68 => String::from("68"),
            Self::Variant69 => String::from("69"),
            Self::Variant70 => String::from("70"),
            Self::Variant71 => String::from("71"),
            Self::Variant72 => String::from("72"),
            Self::Variant73 => String::from("73"),
            Self::Variant74 => String::from("74"),
            Self::Variant75 => String::from("75"),
            Self::Variant76 => String::from("76"),
            Self::Variant77 => String::from("77"),
            Self::Variant78 => String::from("78"),
            Self::Variant79 => String::from("79"),
            Self::Variant80 => String::from("80"),
            Self::Variant81 => String::from("81"),
            Self::Variant82 => String::from("82"),
            Self::Variant83 => String::from("83"),
            Self::Variant84 => String::from("84"),
            Self::Variant85 => String::from("85"),
            Self::Variant86 => String::from("86"),
            Self::Variant87 => String::from("87"),
            Self::Variant88 => String::from("88"),
            Self::Variant89 => String::from("89"),
            Self::Variant90 => String::from("90"),
        }
    }
}

impl Default for GlobalEquivalentDomainsType {
    fn default() -> GlobalEquivalentDomainsType {
        Self::Variant0
    }
}
