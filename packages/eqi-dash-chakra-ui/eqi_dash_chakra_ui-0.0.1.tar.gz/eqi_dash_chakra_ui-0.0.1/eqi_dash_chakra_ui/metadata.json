{
  "src/lib/components/eqiFormControl.js": {
    "description": "",
    "displayName": "eqiFormControl",
    "methods": [],
    "props": {
      "formProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "dict with Input props."
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Function to address the callbacks change in the layout."
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Children of the component."
      }
    }
  },
  "src/lib/components/eqiInput.js": {
    "description": "",
    "displayName": "eqiInput",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID of the Input."
      },
      "formProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Dict with FormControl props."
      },
      "inputProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Dict with Input props."
      },
      "value": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Value of the Input."
      },
      "n_submit": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Number of times Enter key was pressed."
      }
    }
  },
  "src/lib/components/eqiTable.js": {
    "description": "",
    "displayName": "eqiTable",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID of the Table."
      },
      "tableProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "dict with Table props"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Function to address the callbacks change in the layout"
      }
    }
  },
  "src/lib/components/eqiThemeProvider.js": {
    "description": "",
    "displayName": "eqiThemeProvider",
    "methods": [],
    "props": {
      "children": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Components to style with ThemeProvider."
      },
      "colorScheme": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Scheme of colors (eqi | euQueroInvestir | research)."
      }
    }
  },
  "src/lib/components/Icons.js": {
    "description": "Icon component that render icons from Chakra UI library\r\nIf 'icon' does not exist in library, Chakra renders the\r\nfallback Icon (see https://chakra-ui.com/docs/media-and-icons/icon#fallback-icon)\r\n\r\nFor a list of icons, see https://chakra-ui.com/docs/media-and-icons/icon#all-icons",
    "displayName": "Icon",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Component Id"
      },
      "icon": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "Chakra UI icon name\r\nFor a list, refer to the documentation\r\nhttps://chakra-ui.com/docs/media-and-icons/icon#all-icons"
      },
      "viewBox": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Icon viewBox\r\nDefaults to '0 0 24 24'",
        "defaultValue": {
          "value": "\"0 0 24 24\"",
          "computed": false
        }
      },
      "boxSize": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Icon boxSize\r\nDefaults to '1em'",
        "defaultValue": {
          "value": "\"1em\"",
          "computed": false
        }
      },
      "color": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Icon color"
      },
      "isFocusable": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Is an interactive element or just for presentation",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      }
    }
  },
  "src/lib/components/layout/AspectRatio.js": {
    "description": "Aspect Ratio component",
    "displayName": "AspectRatio",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Component Id"
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children of this component"
      },
      "ratio": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Element ratio"
      },
      "styleProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "StyleProp object\r\nUse maxWidth to adjust content width"
      }
    }
  },
  "src/lib/components/layout/Box.js": {
    "description": "Box Component",
    "displayName": "Box",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Component Id"
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children of this component"
      },
      "asProp": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Render element as tag",
        "defaultValue": {
          "value": "\"div\"",
          "computed": false
        }
      },
      "styleProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "StyleProp object",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "src/lib/components/layout/Center.js": {
    "description": "Center component",
    "displayName": "Center",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Component Id"
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children of this component"
      },
      "styleProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "StyleProp object",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "src/lib/components/layout/Container.js": {
    "description": "Container Component",
    "displayName": "Container",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Component Id"
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children of this component"
      },
      "centerContent": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Center content",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "colorScheme": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "ColorScheme\r\nNot implemented in the default theme"
      },
      "size": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Component size\r\nNot implemented in the default theme"
      },
      "variant": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Component variant\r\nNot implemented in the default theme"
      },
      "styleProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "StyleProp object",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  },
  "src/lib/components/layout/Grid.js": {
    "description": "Grid component\r\nAccept other components or `GridItem` as children.\r\nFor shortness, Grid props are passed in an object/dictionary.\r\n`Grid` composes `Box`, so any styleProps can be passed via `gridProps`\r\nFor details, see https://chakra-ui.com/docs/layout/flex",
    "displayName": "Grid",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Component Id"
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children of this component"
      },
      "gridProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Grid properties (includes styleProps)\r\nFor a list, refer to https://chakra-ui.com/docs/layout/grid#props-1"
      }
    }
  },
  "src/lib/components/layout/GridItem.js": {
    "description": "GridItem component\r\nTo be used as child of Grid component\r\nSee: https://chakra-ui.com/docs/layout/grid#spanning-columns",
    "displayName": "GridItem",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Component Id"
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children of this component"
      },
      "colSpan": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Number of columns that the item should span"
      },
      "colStart": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Column number that grid item should start"
      },
      "colEnd": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Column number that grid item should end"
      },
      "rowSpan": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Number of rows that the item should span"
      },
      "rowStart": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Row number that grid item should start"
      },
      "rowEnd": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Row number that grid item should end"
      },
      "styleProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "StyleProp object",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      }
    }
  }
}