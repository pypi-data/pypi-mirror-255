[build-system]
requires = ["setuptools>=64.0"]
build-backend = "setuptools.build_meta"

[project]
name = "tagmaps"
authors = [{name = "Alexander Dunkel", email = "alexander.dunkel@tu-dresden.de"}]
license = {text = "GNU GPLv3 or any higher"}
description = "Tag Clustering for Tag Maps"
requires-python = ">=3.7"
dependencies = [
    "fiona",
    "shapely",
    "pandas>=0.24.2",
    "pyproj>=2.0.0",
    "numpy",
    "matplotlib>=3.0.0",
    "emoji>=2.7.0, < 3.0.0",
    "hdbscan>=0.8.31",
    "seaborn",
    "scipy",
]
dynamic = ["version"]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.urls]
Homepage = "https://github.com/Sieboldianus/TagMaps"

[project.scripts]
tagmaps = "tagmaps.__main__:main"

[tool.semantic_release]
assets = []
version_variables = [
    "src/tagmaps/version.py:__version__",]
version_source = "commit"
commit_version_number = true
branch = "master"
build_command = "python -m build"
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
tag_format = "v{version}"

[tool.semantic_release.branches.main]
match = "(master)"
prerelease = false
prerelease_token = "rc"

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true

[tool.setuptools]
package-dir = {"" = "src"}
include-package-data = true

[tool.setuptools.package-data]
"*" = ["README.md", "matplotlibrc"]

[tool.setuptools.packages.find]
where = ["src"]
include = [
    "tagmaps",
    "tagmaps.*",
]
namespaces = false

[tool.setuptools.dynamic]
version = {attr = "tagmaps/version.__version__"}

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | \.vscode
  | _build
  | buck-out
  | build
  | dist
  | dev/
  | src/tagmaps/config/config.py
)/
'''

[tool.isort]
profile = "black"
known_first_party = ["tagmaps"]
line_length = 88

[tool.pytest.ini_options]
addopts = "-ra"

[tool.mypy]
# Error output
show_column_numbers = true
show_error_codes = true
show_error_context = true
show_traceback = true
pretty = true
check_untyped_defs = false
# Warnings
warn_no_return = true
warn_redundant_casts = true
warn_unreachable = true
files = ["src", "tests"]

[tool.pylint.format]
max-line-length = 88

[tool.pylint.message_control]
enable = ["c-extension-no-member", "no-else-return"]

[tool.pylint.variables]
dummy-variables-rgx = "_+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_"
ignored-argument-names = "_.*|^ignored_|^unused_|args|kwargs"

[tool.codespell]
ignore-words-list = " "
