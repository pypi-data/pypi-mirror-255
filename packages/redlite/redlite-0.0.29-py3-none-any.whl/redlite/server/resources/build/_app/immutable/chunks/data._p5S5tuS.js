import{d as w,w as u}from"./entry.2VBDmEnV.js";import{l as p}from"./load.ybpr34CD.js";const i=u(!1),b=(()=>{const{subscribe:d,set:c}=u([]);async function t(){try{i.set(!0);const n=await p();n.sort((m,r)=>new Date(r.completed)-new Date(m.completed)),c(n)}finally{i.set(!1)}}return t(),{subscribe:d,refresh:t}})(),a=d=>`${d.dataset} ${d.data_digest} ${d.metric}`,h=1e-4,_=w(b,(d,c)=>{const t={},n={};for(const e of d)t[e.model]===void 0&&(t[e.model]={model:e.model,inst:{},winRate:0}),t[e.model].inst[a(e)]===void 0&&(t[e.model].inst[a(e)]={data_digest:e.data_digest,dataset:e.dataset,metric:e.metric,winner:!1,runs:[]}),t[e.model].inst[a(e)].runs.push(e),n[a(e)]===void 0&&(n[a(e)]={instHash:a(e),data_digest:e.data_digest,dataset:e.dataset,metric:e.metric,models:{},highestScore:0}),n[a(e)].models[e.model]===void 0&&(n[a(e)].models[e.model]={model:e.model,runs:[],wins:0}),n[a(e)].models[e.model].runs.push(e);for(const e of Object.values(n)){for(const s of Object.values(e.models))s.runs.sort((l,f)=>new Date(f.completed)-new Date(l.completed)),s.completed=s.runs[0].completed,s.score_summary=s.runs[0].score_summary;const o=Math.max(...Object.values(e.models).map(s=>s.score_summary.mean));e.highestScore=o;for(const s of Object.values(e.models))Math.abs(s.score_summary.mean-o)<h&&(s.wins+=1,t[s.model].winRate+=1,t[s.model].inst[e.instHash].winner=!0)}for(const e of Object.values(t)){for(const o of Object.values(e.inst))o.runs.sort((s,l)=>new Date(l.completed)-new Date(s.completed)),o.completed=o.runs[0].completed,o.score_summary=o.runs[0].score_summary;e.winRate/=Object.keys(n).length}const m=[...Object.values(t)];m.sort((e,o)=>o.winRate-e.winRate);const r=[...Object.values(n)];r.sort((e,o)=>new Date(o.completed)-new Date(e.completed)),c({models:m,instances:r})},{models:[],instances:[]});export{_ as a,i as l,b as r};
