[build-system]
requires = [
    "hatchling >=1.11.1,<2.0.0",
    "hatch-vcs >=0.3.0,<0.4.0",
    "hatch-build-scripts"
]
build-backend = "hatchling.build"

[project]
name = "arasea"
version = "2.9.4"
authors = [{name = "arasea-devs", email = "arasea.devs@gmail.com"}]
description = "A library for defining, optimizing, and efficiently evaluating mathematical expressions involving multi-dimensional arrays."
license.text = "BSD-3-Clause"
license-files.paths = ["LICENSE.txt"]
classifiers = [
    "Development Status :: 6 - Mature",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Software Development :: Compilers",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: POSIX :: Linux",
    "Operating System :: POSIX :: SunOS/Solaris",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Operating System :: MacOS :: MacOS X",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
keywords = [
    "arasea",
    "math",
    "numerical",
    "symbolic",
    "blas",
    "numpy",
    "autodiff",
    "differentiation",
]
urls = {Homepage = "https://github.com/arasea-devs/arasea"}
requires-python = ">=3.8"
dependencies = [
    "numpy >=1.17.0",
    "scipy >=0.14",
    "filelock",
    "etuples",
    "logical-unification",
    "miniKanren",
    "cons",
    "typing_extensions",
    "setuptools >=48.0.0",
]
#dynamic = ["version"]

[project.readme]
file = "DESCRIPTION.txt"
content-type = "text/x-rst"

[project.scripts]
arasea-cache = "arasea.bin.arasea_cache:main"

#[tool.setuptools_scm]
#version = "2.9.4"  # Manually set version here

#[tool.hatch.version]
#source = "vcs"
# Restrict the default regex to only match tags that start with "rel-".
#tag-pattern = '^rel-(?P<version>[vV]?\d+(?:\.\d+){0,2}[^\+]*)(?:\+.*)?$'

#[tool.hatch.build.hooks.vcs]
#version-file = "arasea/_version.py"

# While the sdist can be made much smaller by omiting the docs,
# it is useful to certain people to include the docs and tests.
# Ref: <https://github.com/arasea-devs/arasea/discussions/1453>
[tool.hatch.build]
exclude = [
    "/.github",
    "/.flake8",
    "/.gitignore",
    "/.hgignore",
    "/.pre-commit-config.yaml",
    "/.github/CODE_OF_CONDUCT.md",
    "/.github/CONTRIBUTING.md",
    "Makefile",
    "codecov.yml",
    "environment-arm.yml",
    "environment.yml",
    "readthedocs.yml",
]

[tool.hatch.build.targets.wheel]
packages = ["arasea", "bin"]

[tool.coverage.run]
omit = [
    "tests/*",
    "arasea/assert_op.py",
    "arasea/version.py",
    "arasea/bin/arasea_cache.py",
    "arasea/graph/opt.py",
    "arasea/graph/opt_utils.py",
    "arasea/graph/optdb.py",
    "arasea/graph/kanren.py",
    "arasea/graph/unify.py",
    "arasea/link/jax/jax_linker.py",
    "arasea/link/jax/jax_dispatch.py",
    "arasea/graph/toolbox.py",
    "arasea/scalar/basic_scipy.py",
    "bin/arasea_cache.py",
]
branch = true
relative_files = true

[tool.coverage.report]
omit = [
    "tests/*",
]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
]
show_missing = true

[tool.pytest.ini_options]
addopts = "--durations=50"
testpaths = ["tests/"]

[tool.pylint]
max-line-length = "88"

[tool."pylint.messages_control"]
disable = "C0330, C0326"

[tool.isort]
profile = "black"
lines_after_imports = 2
lines_between_sections = 1
honor_noqa = true
skip_gitignore = true
skip = ["arasea/version.py"]
skip_glob = ["**/*.pyx"]

[tool.mypy]
ignore_missing_imports = true
no_implicit_optional = true
check_untyped_defs = false
strict_equality = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true
warn_return_any = true
warn_no_return = false
warn_unreachable = true
show_error_codes = true
allow_redefinition = false
files = ["arasea", "tests"]
plugins = ["numpy.typing.mypy_plugin"]

[[tool.mypy.overrides]]
module = ["doc.*"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["setup"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["tests.*"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.compile.mode"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.compile.builders"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.compile.sharedvalue"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.compile.compilelock"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.compile.function.pfunc"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.compile.function.types"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.compile.debugmode"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.tensor.type"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.tensor.var"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.tensor.basic"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.tensor.elemwise"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.tensor.math"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.tensor.rewriting.basic"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.tensor.rewriting.shape"]
warn_unused_ignores = false

[[tool.mypy.overrides]]
module = ["arasea.tensor.rewriting.elemwise"]
warn_unused_ignores = false

[[tool.mypy.overrides]]
module = ["arasea.tensor.subtensor"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.tensor.shape"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.tensor.extra_ops"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.tensor.type_other"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.tensor.blas"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.tensor.blas_headers"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.tensor.slinalg"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.tensor.sharedvar"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.tensor.rewriting.math"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.tensor.blas_c"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.tensor.random.op"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.tensor.random.basic"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.tensor.random.utils"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.scan.op"]
warn_unused_ignores = false

[[tool.mypy.overrides]]
module = ["arasea.link.numba.dispatch.extra_ops"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.link.numba.dispatch.elemwise"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.link.numba.dispatch.random"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.link.jax.dispatch"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.raise_op"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.tensor.nnet.conv3d2d"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.tensor.nnet.neighbours"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.tensor.nnet.abstract_conv"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.tensor.nnet.ctc"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.sandbox.*"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.ifelse"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.typed_list.*"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.sparse.basic"]
ignore_errors = true
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["arasea.sparse.sharedvar"]
ignore_errors = true
check_untyped_defs = false
