
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocLOWnonassocMATCHINGright,nonassoc:nonassoc?leftORleftANDleftCMP_OPnonassocNOTleftINleftCIDIDleft([leftMLSAND AS CID CMP_OP DEFINED DICT ELIF ELSE END ENTITY EXTENDS FALSE FLOAT FOR FSTRING ID IF IMPLEMENT IMPLEMENTATION IMPORT IN INDEX INT IS MATCHING MLS NOT NULL OR PARENTS PEQ REGEX REL RSTRING SEP STRING TRUE TYPEDEF UNDEF USING WHENmain : head bodyempty : %prec LOWhead : emptyhead : MLSbody : top_stmt bodybody : emptytop_stmt : entity_def\n    | implement_def\n    | implementation_def\n    | relation\n    | statement\n    | typedef\n    | index\n    | importimport : IMPORT ns_refimport : IMPORT ns_ref AS IDstatement : assign\n    | for\n    | if\n    | expression emptystmt_list : statement stmt_liststmt_list : emptyassign : var_ref \'=\' operandassign : var_ref PEQ operandfor : FOR ID IN operand \':\' blockif : IF if_body ENDif_body : expression \':\' stmt_list if_nextif_next : emptyif_next : ELSE \':\' stmt_listif_next : ELIF if_bodyentity_def : ENTITY CID \':\' entity_body_outerentity_def : ENTITY ID \':\' entity_body_outerentity_def : ENTITY CID EXTENDS class_ref_list \':\' entity_body_outerentity_def : ENTITY ID EXTENDS class_ref_list \':\' entity_body_outerentity_body_outer : MLS entity_body ENDentity_body_outer : entity_body ENDentity_body_outer : ENDentity_body_outer : MLS ENDentity_body : entity_body attrentity_body : attrattr_base_type : ns_refattr_type_multi : attr_base_type \'[\' \']\'attr_type_opt : attr_type_multi \'?\'\n    | attr_base_type \'?\'attr_type : attr_type_opt\n    | attr_type_multi\n    | attr_base_typeattr : attr_type CID empty\n    | attr_type CID \'=\' constant\n    | attr_type CID \'=\' constant_list\n    | attr_type CID \'=\' UNDEFattr : attr_type IDattr : attr_type ID \'=\' constant\n    | attr_type ID \'=\' constant_listattr : attr_type ID \'=\' UNDEFattr : DICT empty CID empty\n    | DICT empty CID \'=\' map_def\n    | DICT empty CID \'=\' NULL\n    | DICT \'?\' CID empty\n    | DICT \'?\'  CID \'=\' map_def\n    | DICT \'?\'  CID \'=\' NULLattr : DICT IDattr : DICT ID \'=\' map_defattr : DICT ID \'=\' NULLattr : DICT \'?\' IDattr : DICT \'?\'  ID \'=\' map_defattr : DICT \'?\'  ID \'=\' NULLimplement_ns_list : ns_refimplement_ns_list : PARENTSimplement_ns_list : implement_ns_list \',\' implement_ns_listimplement_def : IMPLEMENT class_ref USING implement_ns_list empty\n    | IMPLEMENT class_ref USING implement_ns_list MLSimplement_def : IMPLEMENT class_ref USING implement_ns_list WHEN expression empty\n    | IMPLEMENT class_ref USING implement_ns_list WHEN expression MLSimplementation_def : IMPLEMENTATION ID FOR class_ref implementationimplementation : implementation_head blockimplementation_head : \':\'implementation_head : \':\' MLSblock : stmt_list ENDrelation : relation_def MLSrelation : relation_def emptyrelation_def : class_ref \'.\' ID multi REL class_ref \'.\' ID multirelation_def : class_ref \'.\' ID multi REL class_refrelation_def : class_ref \'.\' ID multi operand_list class_ref \'.\' ID multirelation_def : class_ref \'.\' ID multi operand_list class_refmulti : \'[\' INT \']\'multi : \'[\' INT \':\' \']\'multi : \'[\' INT \':\' INT \']\'multi : \'[\'  \':\' INT \']\'typedef : typedef_inner emptytypedef : typedef_inner MLStypedef_inner : TYPEDEF ID AS ns_ref MATCHING expressiontypedef_inner : TYPEDEF CID AS constructorindex : INDEX class_ref \'(\' id_list \')\'expression : boolean_expression\n    | constant\n    | function_call\n    | var_ref empty\n    | constructor\n    | list_def\n    | list_comprehension\n    | map_def\n    | map_lookup empty\n    | index_lookup\n    | conditional_expressionexpression : \'(\' expression \')\'boolean_expression : expression CMP_OP expression\n    | expression IN expression\n    | expression AND expression\n    | expression OR expressionboolean_expression : expression NOT IN expressionboolean_expression : NOT expressionboolean_expression : var_ref \'.\' ID IS DEFINEDboolean_expression : ID IS DEFINEDboolean_expression : map_lookup IS DEFINEDoperand : expression emptymap_lookup : attr_ref \'[\' operand \']\'\n    | var_ref \'[\' operand \']\'\n    | map_lookup \'[\' operand \']\'constructor : class_ref \'(\' param_list \')\'function_call : ns_ref \'(\' function_param_list \')\'function_call : attr_ref \'(\' function_param_list \')\'list_def : \'[\' operand_list \']\'list_comprehension : \'[\' expression list_comprehension_for list_comprehension_guard \']\'list_comprehension_for_empty : emptylist_comprehension_for : FOR ID IN expression list_comprehension_for_empty\n    | FOR ID IN expression list_comprehension_forlist_comprehension_guard : emptylist_comprehension_guard : IF expression list_comprehension_guarddict_key : RSTRINGdict_key : STRINGpair_list : dict_key \':\' operand \',\' pair_list\n    | dict_key \':\' operand empty pair_list_emptypair_list : pair_list_empty\n    pair_list_empty : emptymap_def : \'{\' pair_list \'}\'index_lookup : class_ref \'[\' param_list \']\'index_lookup : attr_ref \'[\' param_list \']\'conditional_expression : expression \'?\' expression \':\' expressionconstant : INT\n    | FLOAT\n    constant : NULLconstant : REGEXconstant : TRUEconstant : FALSEconstant : STRINGconstant : FSTRINGconstant : RSTRINGconstant : MLSconstant_list : \'[\' constants \']\'constants : constantconstants :constants : constant \',\' constantswrapped_kwargs : \'*\' \'*\' operandparam_list_element : ID \'=\' operandparam_list_element : wrapped_kwargsparam_list : param_list_empty\n    param_list_empty : emptyparam_list : param_list_element empty param_list_empty\n    | param_list_element \',\' param_listfunction_param_list_element : param_list_elementfunction_param_list_element : operandfunction_param_list : function_param_list_empty\n    function_param_list_empty : emptyfunction_param_list : function_param_list_element empty function_param_list_empty\n    | function_param_list_element \',\' function_param_listoperand_list : operand \',\' operand_listoperand_list : operandoperand_list : emptyvar_ref : attr_ref emptyattr_ref : var_ref \'.\' IDvar_ref : ns_ref emptyclass_ref : CIDclass_ref : ns_ref SEP CIDclass_ref : var_ref \'.\' CIDclass_ref_list : class_ref \',\' class_ref_listclass_ref_list : var_ref \',\' class_ref_listclass_ref_list : class_refclass_ref_list : var_refns_ref : ns_ref SEP IDns_ref : IDid_list : ID "," id_listid_list : ID'
    
_lr_action_items = {'MLS':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,67,72,73,74,75,76,78,81,82,83,84,87,88,89,91,93,94,95,96,97,99,102,104,107,108,109,110,121,123,125,137,138,139,140,141,144,146,151,152,160,161,162,163,164,166,167,168,175,177,179,180,181,182,185,197,199,200,201,203,205,208,209,210,211,212,217,218,220,222,224,226,227,228,230,232,233,234,237,242,243,253,256,257,258,259,269,270,271,272,273,274,278,282,284,285,287,290,292,293,299,302,303,304,305,306,307,310,312,313,315,317,325,336,337,341,342,343,358,360,361,362,],[4,21,-3,-4,21,-7,-8,-9,-10,-11,-12,-13,-14,-173,-181,-149,-2,81,-17,-18,-19,84,21,-2,-2,21,-95,-96,-97,-99,-100,-101,-102,-2,-104,-105,-2,21,-140,-141,-142,-143,-144,-145,-146,-147,-148,21,-181,-20,21,21,21,21,21,-80,-81,-90,-91,-2,-2,-2,-15,-172,21,21,21,-98,21,-103,21,-170,21,21,-112,183,183,-114,-107,-108,-109,-110,21,21,-106,-174,-180,-2,-23,-24,-175,-171,-26,21,-115,-123,-116,21,-136,21,-31,-37,-32,258,-68,-69,21,-120,21,21,-137,-111,21,-16,-121,21,-118,21,-2,-2,-119,-93,-122,-117,-138,21,-38,-36,183,183,-71,-72,21,-139,-75,21,312,21,-94,-113,21,21,-124,21,-35,21,21,-33,-34,337,-70,-83,-85,-86,-76,-78,-25,21,-92,21,-73,-74,-87,-89,-79,-88,21,-82,-84,]),'ENTITY':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,33,34,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,57,67,72,81,82,83,84,87,88,89,91,93,97,102,107,110,125,137,138,139,140,146,151,152,160,161,162,163,164,166,168,175,177,180,182,185,197,199,200,201,205,210,211,217,218,222,228,230,232,233,234,242,243,257,258,269,270,274,278,285,290,299,302,303,304,305,306,307,310,313,317,336,337,341,342,343,358,361,362,],[-2,16,-3,-4,16,-7,-8,-9,-10,-11,-12,-13,-14,-173,-181,-149,-2,-2,-17,-18,-19,-2,-2,-2,-95,-96,-97,-99,-100,-101,-102,-2,-104,-105,-2,-140,-141,-142,-143,-144,-145,-146,-147,-148,-181,-20,-80,-81,-90,-91,-2,-2,-2,-15,-172,-98,-103,-170,-112,-114,-107,-108,-109,-110,-106,-174,-180,-2,-23,-24,-175,-171,-26,-115,-123,-116,-136,-31,-37,-32,-2,-68,-69,-120,-137,-111,-16,-121,-118,-119,-93,-122,-117,-138,-38,-36,-71,-72,-139,-75,-94,-113,-124,-35,-33,-34,-2,-70,-83,-85,-86,-76,-25,-92,-73,-74,-87,-89,-79,-88,-82,-84,]),'IMPLEMENT':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,33,34,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,57,67,72,81,82,83,84,87,88,89,91,93,97,102,107,110,125,137,138,139,140,146,151,152,160,161,162,163,164,166,168,175,177,180,182,185,197,199,200,201,205,210,211,217,218,222,228,230,232,233,234,242,243,257,258,269,270,274,278,285,290,299,302,303,304,305,306,307,310,313,317,336,337,341,342,343,358,361,362,],[-2,19,-3,-4,19,-7,-8,-9,-10,-11,-12,-13,-14,-173,-181,-149,-2,-2,-17,-18,-19,-2,-2,-2,-95,-96,-97,-99,-100,-101,-102,-2,-104,-105,-2,-140,-141,-142,-143,-144,-145,-146,-147,-148,-181,-20,-80,-81,-90,-91,-2,-2,-2,-15,-172,-98,-103,-170,-112,-114,-107,-108,-109,-110,-106,-174,-180,-2,-23,-24,-175,-171,-26,-115,-123,-116,-136,-31,-37,-32,-2,-68,-69,-120,-137,-111,-16,-121,-118,-119,-93,-122,-117,-138,-38,-36,-71,-72,-139,-75,-94,-113,-124,-35,-33,-34,-2,-70,-83,-85,-86,-76,-25,-92,-73,-74,-87,-89,-79,-88,-82,-84,]),'IMPLEMENTATION':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,33,34,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,57,67,72,81,82,83,84,87,88,89,91,93,97,102,107,110,125,137,138,139,140,146,151,152,160,161,162,163,164,166,168,175,177,180,182,185,197,199,200,201,205,210,211,217,218,222,228,230,232,233,234,242,243,257,258,269,270,274,278,285,290,299,302,303,304,305,306,307,310,313,317,336,337,341,342,343,358,361,362,],[-2,23,-3,-4,23,-7,-8,-9,-10,-11,-12,-13,-14,-173,-181,-149,-2,-2,-17,-18,-19,-2,-2,-2,-95,-96,-97,-99,-100,-101,-102,-2,-104,-105,-2,-140,-141,-142,-143,-144,-145,-146,-147,-148,-181,-20,-80,-81,-90,-91,-2,-2,-2,-15,-172,-98,-103,-170,-112,-114,-107,-108,-109,-110,-106,-174,-180,-2,-23,-24,-175,-171,-26,-115,-123,-116,-136,-31,-37,-32,-2,-68,-69,-120,-137,-111,-16,-121,-118,-119,-93,-122,-117,-138,-38,-36,-71,-72,-139,-75,-94,-113,-124,-35,-33,-34,-2,-70,-83,-85,-86,-76,-25,-92,-73,-74,-87,-89,-79,-88,-82,-84,]),'INDEX':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,33,34,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,57,67,72,81,82,83,84,87,88,89,91,93,97,102,107,110,125,137,138,139,140,146,151,152,160,161,162,163,164,166,168,175,177,180,182,185,197,199,200,201,205,210,211,217,218,222,228,230,232,233,234,242,243,257,258,269,270,274,278,285,290,299,302,303,304,305,306,307,310,313,317,336,337,341,342,343,358,361,362,],[-2,30,-3,-4,30,-7,-8,-9,-10,-11,-12,-13,-14,-173,-181,-149,-2,-2,-17,-18,-19,-2,-2,-2,-95,-96,-97,-99,-100,-101,-102,-2,-104,-105,-2,-140,-141,-142,-143,-144,-145,-146,-147,-148,-181,-20,-80,-81,-90,-91,-2,-2,-2,-15,-172,-98,-103,-170,-112,-114,-107,-108,-109,-110,-106,-174,-180,-2,-23,-24,-175,-171,-26,-115,-123,-116,-136,-31,-37,-32,-2,-68,-69,-120,-137,-111,-16,-121,-118,-119,-93,-122,-117,-138,-38,-36,-71,-72,-139,-75,-94,-113,-124,-35,-33,-34,-2,-70,-83,-85,-86,-76,-25,-92,-73,-74,-87,-89,-79,-88,-82,-84,]),'IMPORT':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,33,34,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,57,67,72,81,82,83,84,87,88,89,91,93,97,102,107,110,125,137,138,139,140,146,151,152,160,161,162,163,164,166,168,175,177,180,182,185,197,199,200,201,205,210,211,217,218,222,228,230,232,233,234,242,243,257,258,269,270,274,278,285,290,299,302,303,304,305,306,307,310,313,317,336,337,341,342,343,358,361,362,],[-2,32,-3,-4,32,-7,-8,-9,-10,-11,-12,-13,-14,-173,-181,-149,-2,-2,-17,-18,-19,-2,-2,-2,-95,-96,-97,-99,-100,-101,-102,-2,-104,-105,-2,-140,-141,-142,-143,-144,-145,-146,-147,-148,-181,-20,-80,-81,-90,-91,-2,-2,-2,-15,-172,-98,-103,-170,-112,-114,-107,-108,-109,-110,-106,-174,-180,-2,-23,-24,-175,-171,-26,-115,-123,-116,-136,-31,-37,-32,-2,-68,-69,-120,-137,-111,-16,-121,-118,-119,-93,-122,-117,-138,-38,-36,-71,-72,-139,-75,-94,-113,-124,-35,-33,-34,-2,-70,-83,-85,-86,-76,-25,-92,-73,-74,-87,-89,-79,-88,-82,-84,]),'FOR':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,33,34,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,57,67,72,79,81,82,83,84,87,88,89,91,93,97,102,107,110,112,125,137,138,139,140,146,151,152,160,161,162,163,164,166,167,168,175,177,180,182,185,197,199,200,201,205,210,211,217,218,222,224,226,227,228,230,232,233,234,242,243,257,258,269,270,271,272,273,274,278,285,290,299,302,303,304,305,306,307,310,312,313,315,317,319,336,337,341,342,343,358,361,362,],[-2,24,-3,-4,24,-7,-8,-9,-10,-11,-12,-13,-14,-173,-181,-149,-2,-2,-17,-18,-19,-2,-2,-2,-95,-96,-97,-99,-100,-101,-102,-2,-104,-105,-2,-140,-141,-142,-143,-144,-145,-146,-147,-148,-181,-20,143,-80,-81,-90,-91,-2,-2,-2,-15,-172,-98,-103,-170,-112,178,-114,-107,-108,-109,-110,-106,-174,-180,-2,-23,-24,-175,-171,-26,24,-115,-123,-116,-136,-31,-37,-32,-2,-68,-69,-120,-137,-111,-16,-121,-118,24,-2,-2,-119,-93,-122,-117,-138,-38,-36,-71,-72,-139,-75,24,-77,24,-94,-113,-124,-35,-33,-34,-2,-70,-83,-85,-86,-76,-78,-25,24,-92,178,-73,-74,-87,-89,-79,-88,-82,-84,]),'IF':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,33,34,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,57,67,72,81,82,83,84,87,88,89,91,93,97,102,107,110,125,137,138,139,140,146,151,152,160,161,162,163,164,166,167,168,175,176,177,180,182,185,197,199,200,201,205,210,211,217,218,222,224,226,227,228,230,232,233,234,242,243,257,258,269,270,271,272,273,274,278,285,286,290,299,302,303,304,305,306,307,310,312,313,315,317,319,336,337,341,342,343,345,346,347,358,361,362,],[-2,35,-3,-4,35,-7,-8,-9,-10,-11,-12,-13,-14,-173,-181,-149,-2,-2,-17,-18,-19,-2,-2,-2,-95,-96,-97,-99,-100,-101,-102,-2,-104,-105,-2,-140,-141,-142,-143,-144,-145,-146,-147,-148,-181,-20,-80,-81,-90,-91,-2,-2,-2,-15,-172,-98,-103,-170,-112,-114,-107,-108,-109,-110,-106,-174,-180,-2,-23,-24,-175,-171,-26,35,-115,-123,237,-116,-136,-31,-37,-32,-2,-68,-69,-120,-137,-111,-16,-121,-118,35,-2,-2,-119,-93,-122,-117,-138,-38,-36,-71,-72,-139,-75,35,-77,35,-94,-113,-124,237,-35,-33,-34,-2,-70,-83,-85,-86,-76,-78,-25,35,-92,-2,-73,-74,-87,-89,-79,-126,-127,-125,-88,-82,-84,]),'(':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,20,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,67,72,73,74,75,76,78,81,82,83,84,85,87,88,89,90,91,93,94,95,96,97,99,102,104,107,108,109,110,125,137,138,139,140,141,144,146,151,152,159,160,161,162,163,164,166,167,168,175,177,179,180,181,182,185,197,199,200,201,203,205,208,209,210,211,212,217,218,220,222,224,226,227,228,230,231,232,233,234,237,242,243,257,258,259,269,270,271,272,273,274,278,282,284,285,287,290,299,302,303,304,305,306,307,310,312,313,315,317,336,337,341,342,343,358,361,362,],[-2,31,-3,-4,31,-7,-8,-9,-10,-11,-12,-13,-14,-173,-181,70,-149,-2,-2,-17,-18,-19,-2,31,94,-2,31,-95,-96,-97,-99,-100,-101,-102,-2,-104,-105,108,31,-140,-141,-142,-143,-144,-145,-146,-147,-148,31,-181,-20,31,31,31,31,31,-80,-81,-90,-91,145,-2,94,108,70,-15,-172,31,31,31,-98,31,-103,31,-170,31,31,-112,-114,-107,-108,-109,-110,31,31,-106,-174,-180,-181,-2,-23,-24,-175,-171,-26,31,-115,-123,-116,31,-136,31,-31,-37,-32,-2,-68,-69,31,-120,31,31,-137,-111,31,-16,-121,31,-118,31,-2,94,-119,-93,70,-122,-117,-138,31,-38,-36,-71,-72,31,-139,-75,31,-77,31,-94,-113,31,31,-124,31,-35,-33,-34,-2,-70,-83,-85,-86,-76,-78,-25,31,-92,-73,-74,-87,-89,-79,-88,-82,-84,]),'TYPEDEF':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,33,34,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,57,67,72,81,82,83,84,87,88,89,91,93,97,102,107,110,125,137,138,139,140,146,151,152,160,161,162,163,164,166,168,175,177,180,182,185,197,199,200,201,205,210,211,217,218,222,228,230,232,233,234,242,243,257,258,269,270,274,278,285,290,299,302,303,304,305,306,307,310,313,317,336,337,341,342,343,358,361,362,],[-2,46,-3,-4,46,-7,-8,-9,-10,-11,-12,-13,-14,-173,-181,-149,-2,-2,-17,-18,-19,-2,-2,-2,-95,-96,-97,-99,-100,-101,-102,-2,-104,-105,-2,-140,-141,-142,-143,-144,-145,-146,-147,-148,-181,-20,-80,-81,-90,-91,-2,-2,-2,-15,-172,-98,-103,-170,-112,-114,-107,-108,-109,-110,-106,-174,-180,-2,-23,-24,-175,-171,-26,-115,-123,-116,-136,-31,-37,-32,-2,-68,-69,-120,-137,-111,-16,-121,-118,-119,-93,-122,-117,-138,-38,-36,-71,-72,-139,-75,-94,-113,-124,-35,-33,-34,-2,-70,-83,-85,-86,-76,-25,-92,-73,-74,-87,-89,-79,-88,-82,-84,]),'CID':([0,2,3,4,6,8,9,10,11,12,13,14,15,16,17,18,19,21,22,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,67,72,73,74,75,76,78,81,82,83,84,87,88,89,91,92,93,94,95,96,97,98,99,102,104,107,108,109,110,113,114,122,124,125,127,137,138,139,140,141,143,144,146,147,148,151,152,160,161,162,163,164,166,167,168,171,175,177,179,180,181,182,185,187,188,189,190,191,192,197,199,200,201,203,205,208,209,210,211,212,217,218,220,222,224,226,227,228,230,232,233,234,237,239,242,243,247,248,250,251,254,255,257,258,259,261,262,269,270,271,272,273,274,278,282,284,285,287,290,298,299,302,303,304,305,306,307,310,312,313,315,317,336,337,341,342,343,358,361,362,],[-2,17,-3,-4,17,-7,-8,-9,-10,-11,-12,-13,-14,61,-173,-181,17,-149,-2,-2,-17,-18,-19,-2,17,17,-2,-2,17,-95,-96,-97,-99,-100,-101,-102,-2,-104,-105,106,-2,17,-140,-141,-142,-143,-144,-145,-146,-147,-148,17,-181,-20,17,17,17,17,17,-80,-81,-90,-91,-2,-2,-2,-15,151,-172,17,17,17,-98,163,17,-103,17,-170,17,17,-112,-168,-169,17,17,-114,163,-107,-108,-109,-110,17,17,17,-106,163,151,-174,-180,-2,-23,-24,-175,-171,-26,17,-115,17,-123,-116,17,-136,17,-31,-37,245,-2,-45,-46,-47,-41,-32,-2,-68,-69,17,-120,17,17,-137,-111,17,-16,-121,17,-118,17,-2,-2,-119,-93,-122,-117,-138,17,-167,-38,-36,294,295,-43,-44,17,17,-71,-72,17,17,17,-139,-75,17,-77,17,-94,-113,17,17,-124,17,-35,-42,-33,-34,-2,-70,-83,-85,-86,-76,-78,-25,17,-92,-73,-74,-87,-89,-79,-88,-82,-84,]),'NOT':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,67,72,73,74,75,76,78,81,82,83,84,86,87,88,89,91,93,94,95,96,97,99,101,102,104,107,108,109,110,112,125,137,138,139,140,141,142,144,146,151,152,159,160,161,162,163,164,166,167,168,175,177,179,180,181,182,185,197,199,200,201,203,205,208,209,210,211,212,217,218,220,222,224,226,227,228,230,232,233,234,237,242,243,257,258,259,269,270,271,272,273,274,278,282,284,285,286,287,290,299,302,303,304,305,306,307,310,312,313,315,317,319,336,337,341,342,343,358,361,362,],[-2,48,-3,-4,48,-7,-8,-9,-10,-11,-12,-13,-14,-173,-181,-149,77,-2,-17,-18,-19,-2,48,-2,-2,48,-95,-96,-97,-99,-100,-101,-102,-2,-104,-105,-2,48,-140,-141,-142,-143,-144,-145,-146,-147,-148,48,-181,-20,48,48,48,48,48,-80,-81,-90,-91,77,-2,-2,-2,-15,-172,48,48,48,-98,48,77,-103,48,-170,48,48,None,77,-114,77,-108,77,77,48,77,48,-106,-174,-180,-181,77,-23,-24,-175,-171,-26,48,-115,-123,-116,48,-136,48,-31,-37,-32,-2,-68,-69,48,-120,48,48,-137,-111,48,-16,-121,48,-118,48,-2,-2,-119,-93,-122,-117,-138,48,-38,-36,-71,-72,48,77,-75,48,-77,48,-94,-113,48,48,-124,77,48,-35,-33,-34,77,-70,-83,-85,-86,-76,-78,-25,48,77,77,-73,-74,-87,-89,-79,-88,-82,-84,]),'ID':([0,2,3,4,6,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,67,69,70,71,72,73,74,75,76,78,81,82,83,84,87,88,89,91,92,93,94,95,96,97,98,99,102,104,107,108,109,110,113,114,121,122,123,124,125,126,127,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,160,161,162,163,164,166,167,168,170,171,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,197,199,200,201,203,205,207,208,209,210,211,212,217,218,220,222,224,226,227,228,230,232,233,234,237,239,241,242,243,244,245,246,248,249,250,251,253,254,255,256,257,258,259,260,261,262,269,270,271,272,273,274,275,278,282,284,285,287,290,291,294,295,296,298,299,302,303,304,305,306,307,310,312,313,315,317,322,323,324,326,327,328,329,331,334,335,336,337,338,339,341,342,343,350,351,352,353,354,355,358,359,361,362,],[-2,18,-3,-4,18,-7,-8,-9,-10,-11,-12,-13,-14,62,-173,-181,67,-149,-2,79,80,-2,-17,-18,-19,-2,67,18,67,-2,-2,18,-95,-96,-97,-99,-100,-101,-102,-2,-104,-105,105,-2,18,-140,-141,-142,-143,-144,-145,-146,-147,-148,18,-181,128,133,133,-20,18,18,18,18,18,-80,-81,-90,-91,-2,-2,-2,-15,152,-172,159,18,18,-98,164,18,-103,18,-170,159,159,-112,-168,-169,67,67,67,67,-114,67,202,-107,-108,-109,-110,18,67,18,216,-106,164,152,217,152,-174,-180,-2,-23,-24,-175,-171,-26,18,-115,67,67,-123,-116,238,18,-136,18,-31,67,67,-37,-40,246,249,-45,-46,-47,-41,-32,-2,-68,-69,18,-120,133,18,18,-137,-111,18,-16,-121,159,-118,18,-2,-2,-119,-93,-122,-117,-138,18,-167,67,-38,-36,-39,-2,-52,296,-62,-43,-44,67,67,67,67,-71,-72,18,67,67,67,-139,-75,18,-77,18,-94,216,-113,18,18,-124,18,-35,-48,-2,-2,-65,-42,-33,-34,-2,-70,-83,-85,-86,-76,-78,-25,18,-92,-49,-50,-51,-53,-54,-55,-56,-59,-63,-64,-73,-74,356,357,-87,-89,-79,-57,-58,-60,-61,-66,-67,-88,-150,-82,-84,]),'INT':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,67,72,73,74,75,76,78,81,82,83,84,87,88,89,91,93,94,95,96,97,99,102,104,107,108,109,110,125,137,138,139,140,141,144,146,151,152,160,161,162,163,164,166,167,168,175,177,179,180,181,182,185,197,199,200,201,203,204,205,208,209,210,211,212,217,218,220,222,224,226,227,228,230,232,233,234,237,242,243,257,258,259,264,269,270,271,272,273,274,278,282,284,285,287,290,292,293,299,302,303,304,305,306,307,308,310,312,313,315,317,325,336,337,341,342,343,358,360,361,362,],[-2,49,-3,-4,49,-7,-8,-9,-10,-11,-12,-13,-14,-173,-181,-149,-2,-2,-17,-18,-19,-2,49,-2,-2,49,-95,-96,-97,-99,-100,-101,-102,-2,-104,-105,-2,49,-140,-141,-142,-143,-144,-145,-146,-147,-148,49,-181,-20,49,49,49,49,49,-80,-81,-90,-91,-2,-2,-2,-15,-172,49,49,49,-98,49,-103,49,-170,49,49,-112,-114,-107,-108,-109,-110,49,49,-106,-174,-180,-2,-23,-24,-175,-171,-26,49,-115,-123,-116,49,-136,49,-31,-37,-32,-2,-68,-69,49,263,-120,49,49,-137,-111,49,-16,-121,49,-118,49,-2,-2,-119,-93,-122,-117,-138,49,-38,-36,-71,-72,49,309,-139,-75,49,-77,49,-94,-113,49,49,-124,49,-35,49,49,-33,-34,-2,-70,-83,-85,-86,340,-76,-78,-25,49,-92,49,-73,-74,-87,-89,-79,-88,49,-82,-84,]),'FLOAT':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,67,72,73,74,75,76,78,81,82,83,84,87,88,89,91,93,94,95,96,97,99,102,104,107,108,109,110,125,137,138,139,140,141,144,146,151,152,160,161,162,163,164,166,167,168,175,177,179,180,181,182,185,197,199,200,201,203,205,208,209,210,211,212,217,218,220,222,224,226,227,228,230,232,233,234,237,242,243,257,258,259,269,270,271,272,273,274,278,282,284,285,287,290,292,293,299,302,303,304,305,306,307,310,312,313,315,317,325,336,337,341,342,343,358,360,361,362,],[-2,50,-3,-4,50,-7,-8,-9,-10,-11,-12,-13,-14,-173,-181,-149,-2,-2,-17,-18,-19,-2,50,-2,-2,50,-95,-96,-97,-99,-100,-101,-102,-2,-104,-105,-2,50,-140,-141,-142,-143,-144,-145,-146,-147,-148,50,-181,-20,50,50,50,50,50,-80,-81,-90,-91,-2,-2,-2,-15,-172,50,50,50,-98,50,-103,50,-170,50,50,-112,-114,-107,-108,-109,-110,50,50,-106,-174,-180,-2,-23,-24,-175,-171,-26,50,-115,-123,-116,50,-136,50,-31,-37,-32,-2,-68,-69,50,-120,50,50,-137,-111,50,-16,-121,50,-118,50,-2,-2,-119,-93,-122,-117,-138,50,-38,-36,-71,-72,50,-139,-75,50,-77,50,-94,-113,50,50,-124,50,-35,50,50,-33,-34,-2,-70,-83,-85,-86,-76,-78,-25,50,-92,50,-73,-74,-87,-89,-79,-88,50,-82,-84,]),'NULL':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,67,72,73,74,75,76,78,81,82,83,84,87,88,89,91,93,94,95,96,97,99,102,104,107,108,109,110,125,137,138,139,140,141,144,146,151,152,160,161,162,163,164,166,167,168,175,177,179,180,181,182,185,197,199,200,201,203,205,208,209,210,211,212,217,218,220,222,224,226,227,228,230,232,233,234,237,242,243,257,258,259,269,270,271,272,273,274,278,282,284,285,287,290,292,293,297,299,302,303,304,305,306,307,310,312,313,315,317,325,330,332,333,336,337,341,342,343,358,360,361,362,],[-2,51,-3,-4,51,-7,-8,-9,-10,-11,-12,-13,-14,-173,-181,-149,-2,-2,-17,-18,-19,-2,51,-2,-2,51,-95,-96,-97,-99,-100,-101,-102,-2,-104,-105,-2,51,-140,-141,-142,-143,-144,-145,-146,-147,-148,51,-181,-20,51,51,51,51,51,-80,-81,-90,-91,-2,-2,-2,-15,-172,51,51,51,-98,51,-103,51,-170,51,51,-112,-114,-107,-108,-109,-110,51,51,-106,-174,-180,-2,-23,-24,-175,-171,-26,51,-115,-123,-116,51,-136,51,-31,-37,-32,-2,-68,-69,51,-120,51,51,-137,-111,51,-16,-121,51,-118,51,-2,-2,-119,-93,-122,-117,-138,51,-38,-36,-71,-72,51,-139,-75,51,-77,51,-94,-113,51,51,-124,51,-35,51,51,335,-33,-34,-2,-70,-83,-85,-86,-76,-78,-25,51,-92,51,351,353,355,-73,-74,-87,-89,-79,-88,51,-82,-84,]),'REGEX':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,67,72,73,74,75,76,78,81,82,83,84,87,88,89,91,93,94,95,96,97,99,102,104,107,108,109,110,125,137,138,139,140,141,144,146,151,152,160,161,162,163,164,166,167,168,175,177,179,180,181,182,185,197,199,200,201,203,205,208,209,210,211,212,217,218,220,222,224,226,227,228,230,232,233,234,237,242,243,257,258,259,269,270,271,272,273,274,278,282,284,285,287,290,292,293,299,302,303,304,305,306,307,310,312,313,315,317,325,336,337,341,342,343,358,360,361,362,],[-2,52,-3,-4,52,-7,-8,-9,-10,-11,-12,-13,-14,-173,-181,-149,-2,-2,-17,-18,-19,-2,52,-2,-2,52,-95,-96,-97,-99,-100,-101,-102,-2,-104,-105,-2,52,-140,-141,-142,-143,-144,-145,-146,-147,-148,52,-181,-20,52,52,52,52,52,-80,-81,-90,-91,-2,-2,-2,-15,-172,52,52,52,-98,52,-103,52,-170,52,52,-112,-114,-107,-108,-109,-110,52,52,-106,-174,-180,-2,-23,-24,-175,-171,-26,52,-115,-123,-116,52,-136,52,-31,-37,-32,-2,-68,-69,52,-120,52,52,-137,-111,52,-16,-121,52,-118,52,-2,-2,-119,-93,-122,-117,-138,52,-38,-36,-71,-72,52,-139,-75,52,-77,52,-94,-113,52,52,-124,52,-35,52,52,-33,-34,-2,-70,-83,-85,-86,-76,-78,-25,52,-92,52,-73,-74,-87,-89,-79,-88,52,-82,-84,]),'TRUE':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,67,72,73,74,75,76,78,81,82,83,84,87,88,89,91,93,94,95,96,97,99,102,104,107,108,109,110,125,137,138,139,140,141,144,146,151,152,160,161,162,163,164,166,167,168,175,177,179,180,181,182,185,197,199,200,201,203,205,208,209,210,211,212,217,218,220,222,224,226,227,228,230,232,233,234,237,242,243,257,258,259,269,270,271,272,273,274,278,282,284,285,287,290,292,293,299,302,303,304,305,306,307,310,312,313,315,317,325,336,337,341,342,343,358,360,361,362,],[-2,53,-3,-4,53,-7,-8,-9,-10,-11,-12,-13,-14,-173,-181,-149,-2,-2,-17,-18,-19,-2,53,-2,-2,53,-95,-96,-97,-99,-100,-101,-102,-2,-104,-105,-2,53,-140,-141,-142,-143,-144,-145,-146,-147,-148,53,-181,-20,53,53,53,53,53,-80,-81,-90,-91,-2,-2,-2,-15,-172,53,53,53,-98,53,-103,53,-170,53,53,-112,-114,-107,-108,-109,-110,53,53,-106,-174,-180,-2,-23,-24,-175,-171,-26,53,-115,-123,-116,53,-136,53,-31,-37,-32,-2,-68,-69,53,-120,53,53,-137,-111,53,-16,-121,53,-118,53,-2,-2,-119,-93,-122,-117,-138,53,-38,-36,-71,-72,53,-139,-75,53,-77,53,-94,-113,53,53,-124,53,-35,53,53,-33,-34,-2,-70,-83,-85,-86,-76,-78,-25,53,-92,53,-73,-74,-87,-89,-79,-88,53,-82,-84,]),'FALSE':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,67,72,73,74,75,76,78,81,82,83,84,87,88,89,91,93,94,95,96,97,99,102,104,107,108,109,110,125,137,138,139,140,141,144,146,151,152,160,161,162,163,164,166,167,168,175,177,179,180,181,182,185,197,199,200,201,203,205,208,209,210,211,212,217,218,220,222,224,226,227,228,230,232,233,234,237,242,243,257,258,259,269,270,271,272,273,274,278,282,284,285,287,290,292,293,299,302,303,304,305,306,307,310,312,313,315,317,325,336,337,341,342,343,358,360,361,362,],[-2,54,-3,-4,54,-7,-8,-9,-10,-11,-12,-13,-14,-173,-181,-149,-2,-2,-17,-18,-19,-2,54,-2,-2,54,-95,-96,-97,-99,-100,-101,-102,-2,-104,-105,-2,54,-140,-141,-142,-143,-144,-145,-146,-147,-148,54,-181,-20,54,54,54,54,54,-80,-81,-90,-91,-2,-2,-2,-15,-172,54,54,54,-98,54,-103,54,-170,54,54,-112,-114,-107,-108,-109,-110,54,54,-106,-174,-180,-2,-23,-24,-175,-171,-26,54,-115,-123,-116,54,-136,54,-31,-37,-32,-2,-68,-69,54,-120,54,54,-137,-111,54,-16,-121,54,-118,54,-2,-2,-119,-93,-122,-117,-138,54,-38,-36,-71,-72,54,-139,-75,54,-77,54,-94,-113,54,54,-124,54,-35,54,54,-33,-34,-2,-70,-83,-85,-86,-76,-78,-25,54,-92,54,-73,-74,-87,-89,-79,-88,54,-82,-84,]),'STRING':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,67,72,73,74,75,76,78,81,82,83,84,87,88,89,91,93,94,95,96,97,99,102,104,107,108,109,110,125,137,138,139,140,141,144,146,151,152,160,161,162,163,164,166,167,168,175,177,179,180,181,182,185,197,199,200,201,203,205,208,209,210,211,212,217,218,220,222,224,226,227,228,230,232,233,234,237,242,243,257,258,259,269,270,271,272,273,274,278,282,284,285,287,288,290,292,293,299,302,303,304,305,306,307,310,312,313,315,317,325,336,337,341,342,343,358,360,361,362,],[-2,55,-3,-4,55,-7,-8,-9,-10,-11,-12,-13,-14,-173,-181,-149,-2,-2,-17,-18,-19,-2,55,-2,-2,55,-95,-96,-97,-99,-100,-101,-102,-2,-104,-105,-2,55,-140,-141,-142,-143,-144,-145,-146,-147,-148,55,120,-181,-20,55,55,55,55,55,-80,-81,-90,-91,-2,-2,-2,-15,-172,55,55,55,-98,55,-103,55,-170,55,55,-112,-114,-107,-108,-109,-110,55,55,-106,-174,-180,-2,-23,-24,-175,-171,-26,55,-115,-123,-116,55,-136,55,-31,-37,-32,-2,-68,-69,55,-120,55,55,-137,-111,55,-16,-121,55,-118,55,-2,-2,-119,-93,-122,-117,-138,55,-38,-36,-71,-72,55,-139,-75,55,-77,55,-94,-113,55,55,-124,55,120,-35,55,55,-33,-34,-2,-70,-83,-85,-86,-76,-78,-25,55,-92,55,-73,-74,-87,-89,-79,-88,55,-82,-84,]),'FSTRING':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,67,72,73,74,75,76,78,81,82,83,84,87,88,89,91,93,94,95,96,97,99,102,104,107,108,109,110,125,137,138,139,140,141,144,146,151,152,160,161,162,163,164,166,167,168,175,177,179,180,181,182,185,197,199,200,201,203,205,208,209,210,211,212,217,218,220,222,224,226,227,228,230,232,233,234,237,242,243,257,258,259,269,270,271,272,273,274,278,282,284,285,287,290,292,293,299,302,303,304,305,306,307,310,312,313,315,317,325,336,337,341,342,343,358,360,361,362,],[-2,56,-3,-4,56,-7,-8,-9,-10,-11,-12,-13,-14,-173,-181,-149,-2,-2,-17,-18,-19,-2,56,-2,-2,56,-95,-96,-97,-99,-100,-101,-102,-2,-104,-105,-2,56,-140,-141,-142,-143,-144,-145,-146,-147,-148,56,-181,-20,56,56,56,56,56,-80,-81,-90,-91,-2,-2,-2,-15,-172,56,56,56,-98,56,-103,56,-170,56,56,-112,-114,-107,-108,-109,-110,56,56,-106,-174,-180,-2,-23,-24,-175,-171,-26,56,-115,-123,-116,56,-136,56,-31,-37,-32,-2,-68,-69,56,-120,56,56,-137,-111,56,-16,-121,56,-118,56,-2,-2,-119,-93,-122,-117,-138,56,-38,-36,-71,-72,56,-139,-75,56,-77,56,-94,-113,56,56,-124,56,-35,56,56,-33,-34,-2,-70,-83,-85,-86,-76,-78,-25,56,-92,56,-73,-74,-87,-89,-79,-88,56,-82,-84,]),'RSTRING':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,67,72,73,74,75,76,78,81,82,83,84,87,88,89,91,93,94,95,96,97,99,102,104,107,108,109,110,125,137,138,139,140,141,144,146,151,152,160,161,162,163,164,166,167,168,175,177,179,180,181,182,185,197,199,200,201,203,205,208,209,210,211,212,217,218,220,222,224,226,227,228,230,232,233,234,237,242,243,257,258,259,269,270,271,272,273,274,278,282,284,285,287,288,290,292,293,299,302,303,304,305,306,307,310,312,313,315,317,325,336,337,341,342,343,358,360,361,362,],[-2,57,-3,-4,57,-7,-8,-9,-10,-11,-12,-13,-14,-173,-181,-149,-2,-2,-17,-18,-19,-2,57,-2,-2,57,-95,-96,-97,-99,-100,-101,-102,-2,-104,-105,-2,57,-140,-141,-142,-143,-144,-145,-146,-147,-148,57,119,-181,-20,57,57,57,57,57,-80,-81,-90,-91,-2,-2,-2,-15,-172,57,57,57,-98,57,-103,57,-170,57,57,-112,-114,-107,-108,-109,-110,57,57,-106,-174,-180,-2,-23,-24,-175,-171,-26,57,-115,-123,-116,57,-136,57,-31,-37,-32,-2,-68,-69,57,-120,57,57,-137,-111,57,-16,-121,57,-118,57,-2,-2,-119,-93,-122,-117,-138,57,-38,-36,-71,-72,57,-139,-75,57,-77,57,-94,-113,57,57,-124,57,119,-35,57,57,-33,-34,-2,-70,-83,-85,-86,-76,-78,-25,57,-92,57,-73,-74,-87,-89,-79,-88,57,-82,-84,]),'[':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,20,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,67,72,73,74,75,76,78,81,82,83,84,87,88,89,90,91,93,94,95,96,97,99,102,104,107,108,109,110,125,128,137,138,139,140,141,144,146,151,152,159,160,161,162,163,164,166,167,168,175,177,179,180,181,182,185,191,192,197,199,200,201,203,205,208,209,210,211,212,217,218,220,222,224,226,227,228,230,232,233,234,237,242,243,257,258,259,269,270,271,272,273,274,278,282,284,285,287,290,292,293,299,302,303,304,305,306,307,310,312,313,315,317,336,337,341,342,343,356,357,358,361,362,],[-2,58,-3,-4,58,-7,-8,-9,-10,-11,-12,-13,-14,-173,-181,71,-149,-2,-2,-17,-18,-19,-2,58,-2,99,58,-95,-96,-97,-99,-100,-101,-102,104,-104,-105,109,58,-140,-141,-142,-143,-144,-145,-146,-147,-148,58,-181,-20,58,58,58,58,58,-80,-81,-90,-91,99,-2,109,71,-15,-172,58,58,58,-98,58,-103,58,-170,58,58,-112,-114,204,-107,-108,-109,-110,58,58,-106,-174,-180,-181,-2,-23,-24,-175,-171,-26,58,-115,-123,-116,58,-136,58,-31,-37,252,-41,-32,-2,-68,-69,58,-120,58,58,-137,-111,58,-16,-121,58,-118,58,99,-2,-119,-93,-122,-117,-138,58,-38,-36,-71,-72,58,-139,-75,58,-77,58,-94,-113,58,58,-124,58,-35,325,325,-33,-34,-2,-70,-83,-85,-86,-76,-78,-25,58,-92,-73,-74,-87,-89,-79,204,204,-88,-82,-84,]),'{':([0,2,3,4,6,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,67,72,73,74,75,76,78,81,82,83,84,87,88,89,91,93,94,95,96,97,99,102,104,107,108,109,110,125,137,138,139,140,141,144,146,151,152,160,161,162,163,164,166,167,168,175,177,179,180,181,182,185,197,199,200,201,203,205,208,209,210,211,212,217,218,220,222,224,226,227,228,230,232,233,234,237,242,243,257,258,259,269,270,271,272,273,274,278,282,284,285,287,290,297,299,302,303,304,305,306,307,310,312,313,315,317,330,332,333,336,337,341,342,343,358,361,362,],[-2,59,-3,-4,59,-7,-8,-9,-10,-11,-12,-13,-14,-173,-181,-149,-2,-2,-17,-18,-19,-2,59,-2,-2,59,-95,-96,-97,-99,-100,-101,-102,-2,-104,-105,-2,59,-140,-141,-142,-143,-144,-145,-146,-147,-148,59,-181,-20,59,59,59,59,59,-80,-81,-90,-91,-2,-2,-2,-15,-172,59,59,59,-98,59,-103,59,-170,59,59,-112,-114,-107,-108,-109,-110,59,59,-106,-174,-180,-2,-23,-24,-175,-171,-26,59,-115,-123,-116,59,-136,59,-31,-37,-32,-2,-68,-69,59,-120,59,59,-137,-111,59,-16,-121,59,-118,59,-2,-2,-119,-93,-122,-117,-138,59,-38,-36,-71,-72,59,-139,-75,59,-77,59,-94,-113,59,59,-124,59,-35,59,-33,-34,-2,-70,-83,-85,-86,-76,-78,-25,59,-92,59,59,59,-73,-74,-87,-89,-79,-88,-82,-84,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,21,22,25,26,27,28,29,33,34,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,57,60,67,72,81,82,83,84,87,88,89,91,93,97,102,107,110,125,137,138,139,140,146,151,152,160,161,162,163,164,166,168,175,177,180,182,185,197,199,200,201,205,210,211,217,218,222,228,230,232,233,234,242,243,257,258,269,270,274,278,285,290,299,302,303,304,305,306,307,310,313,317,336,337,341,342,343,358,361,362,],[-2,0,-2,-3,-4,-1,-2,-6,-7,-8,-9,-10,-11,-12,-13,-14,-173,-181,-149,-2,-2,-17,-18,-19,-2,-2,-2,-95,-96,-97,-99,-100,-101,-102,-2,-104,-105,-2,-140,-141,-142,-143,-144,-145,-146,-147,-148,-5,-181,-20,-80,-81,-90,-91,-2,-2,-2,-15,-172,-98,-103,-170,-112,-114,-107,-108,-109,-110,-106,-174,-180,-2,-23,-24,-175,-171,-26,-115,-123,-116,-136,-31,-37,-32,-2,-68,-69,-120,-137,-111,-16,-121,-118,-119,-93,-122,-117,-138,-38,-36,-71,-72,-139,-75,-94,-113,-124,-35,-33,-34,-2,-70,-83,-85,-86,-76,-25,-92,-73,-74,-87,-89,-79,-88,-82,-84,]),'.':([17,18,20,33,34,47,65,66,67,68,87,88,89,93,107,151,152,159,163,164,195,196,202,226,227,305,306,],[-173,-181,69,-2,98,-2,-2,127,-181,-2,147,-2,-2,-172,-170,-174,-180,-181,-175,-171,127,-2,-171,147,-2,338,339,]),'USING':([17,64,151,163,],[-173,126,-174,-175,]),',':([17,18,21,36,37,38,39,40,41,42,43,44,45,49,50,51,52,53,54,55,56,57,67,68,87,88,89,93,97,102,107,110,112,113,125,131,134,137,138,139,140,146,151,152,155,157,158,159,160,163,164,168,175,177,180,194,195,196,199,200,201,202,205,210,211,216,218,222,228,232,233,234,240,267,268,269,278,285,304,349,],[-173,-181,-149,-95,-96,-97,-99,-100,-101,-102,-2,-104,-105,-140,-141,-142,-143,-144,-145,-146,-147,-148,-181,-2,-2,-2,-2,-172,-98,-103,-170,-112,-2,179,-114,207,-156,-107,-108,-109,-110,-106,-174,-180,220,-161,-162,-181,-2,-175,-171,-115,-123,-116,-136,254,255,-2,260,-68,-69,-171,-120,-137,-111,275,-121,-118,-119,-122,-117,-138,288,-155,-154,-139,-113,-124,260,360,]),':':([17,18,21,36,37,38,39,40,41,42,43,44,45,49,50,51,52,53,54,55,56,57,61,62,67,68,87,88,89,93,97,101,102,107,110,116,119,120,125,137,138,139,140,142,146,151,152,160,163,164,168,175,177,180,193,194,195,196,198,202,204,205,210,211,213,214,218,222,228,232,233,234,263,269,278,281,285,300,301,],[-173,-181,-149,-95,-96,-97,-99,-100,-101,-102,-2,-104,-105,-140,-141,-142,-143,-144,-145,-146,-147,-148,121,123,-181,-2,-2,-2,-2,-172,-98,167,-103,-170,-112,181,-130,-131,-114,-107,-108,-109,-110,212,-106,-174,-180,-2,-175,-171,-115,-123,-116,-136,253,-178,-179,-2,256,-171,264,-120,-137,-111,272,273,-121,-118,-119,-122,-117,-138,308,-139,-113,315,-124,-176,-177,]),'IS':([18,43,159,164,222,228,233,],[63,103,63,221,-118,-119,-117,]),'SEP':([18,33,65,67,88,91,152,159,192,196,200,227,229,],[-181,92,92,-181,148,150,-180,-181,150,92,150,148,150,]),'=':([18,33,34,47,93,107,133,152,159,164,226,227,245,246,249,294,295,296,],[-181,-2,95,-2,-172,-170,208,-180,208,-171,95,-2,292,293,297,330,332,333,]),'PEQ':([18,33,34,47,93,107,152,164,226,227,],[-181,-2,96,-2,-172,-170,-180,-171,96,-2,]),'CMP_OP':([18,21,22,33,34,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,57,86,87,88,89,93,97,101,102,107,110,112,125,137,138,139,140,142,146,152,159,160,164,168,175,180,205,210,211,218,222,226,227,228,232,233,234,269,278,285,286,303,317,319,],[-181,-149,73,-2,-2,-95,-96,-97,-99,-100,-101,-102,-2,-104,-105,-2,-140,-141,-142,-143,-144,-145,-146,-147,-148,73,-2,-2,-2,-172,-98,73,-103,-170,-112,73,-114,-107,-108,73,73,73,-106,-180,-181,73,-171,-115,-123,-136,-120,-137,-111,-121,-118,-2,-2,-119,-122,-117,-138,73,-113,-124,73,73,73,73,]),'IN':([18,21,22,33,34,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,57,77,80,86,87,88,89,93,97,101,102,107,110,112,125,137,138,139,140,142,146,152,159,160,164,168,175,180,205,210,211,218,222,226,227,228,232,233,234,238,269,278,285,286,303,317,319,],[-181,-149,74,-2,-2,-95,-96,-97,-99,-100,-101,-102,-2,-104,-105,-2,-140,-141,-142,-143,-144,-145,-146,-147,-148,141,144,74,-2,-2,-2,-172,-98,74,-103,-170,74,74,-114,74,-108,74,74,74,-106,-180,-181,74,-171,-115,-123,-136,-120,-137,-111,-121,-118,-2,-2,-119,-122,-117,-138,287,74,-113,-124,74,74,74,74,]),'AND':([18,21,22,33,34,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,57,86,87,88,89,93,97,101,102,107,110,112,125,137,138,139,140,142,146,152,159,160,164,168,175,180,205,210,211,218,222,226,227,228,232,233,234,269,278,285,286,303,317,319,],[-181,-149,75,-2,-2,-95,-96,-97,-99,-100,-101,-102,-2,-104,-105,-2,-140,-141,-142,-143,-144,-145,-146,-147,-148,75,-2,-2,-2,-172,-98,75,-103,-170,-112,75,-114,-107,-108,-109,75,75,-106,-180,-181,75,-171,-115,-123,-136,-120,-137,-111,-121,-118,-2,-2,-119,-122,-117,-138,75,-113,-124,75,75,75,75,]),'OR':([18,21,22,33,34,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,57,86,87,88,89,93,97,101,102,107,110,112,125,137,138,139,140,142,146,152,159,160,164,168,175,180,205,210,211,218,222,226,227,228,232,233,234,269,278,285,286,303,317,319,],[-181,-149,76,-2,-2,-95,-96,-97,-99,-100,-101,-102,-2,-104,-105,-2,-140,-141,-142,-143,-144,-145,-146,-147,-148,76,-2,-2,-2,-172,-98,76,-103,-170,-112,76,-114,-107,-108,-109,-110,76,-106,-180,-181,76,-171,-115,-123,-136,-120,-137,-111,-121,-118,-2,-2,-119,-122,-117,-138,76,-113,-124,76,76,76,76,]),'?':([18,21,22,33,34,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,57,67,86,87,88,89,93,97,101,102,107,110,112,125,137,138,139,140,142,146,152,159,160,164,168,175,180,188,190,191,192,205,210,211,218,222,226,227,228,232,233,234,269,278,285,286,298,303,317,319,],[-181,-149,78,-2,-2,-95,-96,-97,-99,-100,-101,-102,-2,-104,-105,-2,-140,-141,-142,-143,-144,-145,-146,-147,-148,-181,78,-2,-2,-2,-172,-98,78,-103,-170,-112,78,-114,-107,-108,-109,-110,78,-106,-180,-181,78,-171,-115,-123,-136,248,250,251,-41,-120,-137,-111,-121,-118,-2,-2,-119,-122,-117,-138,78,-113,-124,78,-42,78,78,78,]),')':([18,21,36,37,38,39,40,41,42,43,44,45,49,50,51,52,53,54,55,56,57,70,86,87,88,89,93,94,97,102,107,108,110,125,129,130,131,132,134,137,138,139,140,146,152,153,154,155,156,157,158,159,160,164,168,172,175,177,180,205,206,207,210,211,215,216,218,219,220,222,228,232,233,234,265,266,267,268,269,276,277,278,285,314,],[-181,-149,-95,-96,-97,-99,-100,-101,-102,-2,-104,-105,-140,-141,-142,-143,-144,-145,-146,-147,-148,-2,146,-2,-2,-2,-172,-2,-98,-103,-170,-2,-112,-114,205,-157,-2,-158,-156,-107,-108,-109,-110,-106,-180,218,-163,-2,-164,-161,-162,-181,-2,-171,-115,232,-123,-116,-136,-120,-2,-2,-137,-111,274,-183,-121,-2,-2,-118,-119,-122,-117,-138,-159,-160,-155,-154,-139,-165,-166,-113,-124,-182,]),']':([18,21,36,37,38,39,40,41,42,43,44,45,49,50,51,52,53,54,55,56,57,58,71,87,88,89,93,97,102,107,109,110,111,112,113,114,125,130,131,132,134,136,137,138,139,140,146,152,159,160,164,165,168,169,173,174,175,176,177,179,180,205,206,207,210,211,218,222,228,232,233,234,235,236,239,252,263,265,266,267,268,269,278,285,286,308,309,318,319,325,340,345,346,347,348,349,360,363,],[-181,-149,-95,-96,-97,-99,-100,-101,-102,-2,-104,-105,-140,-141,-142,-143,-144,-145,-146,-147,-148,-2,-2,-2,-2,-2,-172,-98,-103,-170,-2,-112,175,-2,-168,-169,-114,-157,-2,-158,-156,210,-107,-108,-109,-110,-106,-180,-181,-2,-171,222,-115,228,233,234,-123,-2,-116,-2,-136,-120,-2,-2,-137,-111,-121,-118,-119,-122,-117,-138,285,-128,-167,298,307,-159,-160,-155,-154,-139,-113,-124,-2,341,342,-129,-2,-152,358,-126,-127,-125,359,-151,-152,-153,]),'ELSE':([18,21,22,26,27,28,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,57,72,87,88,89,93,97,102,107,110,125,137,138,139,140,146,152,160,161,162,164,166,167,168,175,177,180,205,210,211,218,222,223,224,225,226,227,228,232,233,234,269,278,283,285,313,343,],[-181,-149,-2,-17,-18,-19,-95,-96,-97,-99,-100,-101,-102,-2,-104,-105,-2,-140,-141,-142,-143,-144,-145,-146,-147,-148,-20,-2,-2,-2,-172,-98,-103,-170,-112,-114,-107,-108,-109,-110,-106,-180,-2,-23,-24,-171,-26,-2,-115,-123,-116,-136,-120,-137,-111,-121,-118,281,-2,-22,-2,-2,-119,-122,-117,-138,-139,-113,-21,-124,-25,-79,]),'ELIF':([18,21,22,26,27,28,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,57,72,87,88,89,93,97,102,107,110,125,137,138,139,140,146,152,160,161,162,164,166,167,168,175,177,180,205,210,211,218,222,223,224,225,226,227,228,232,233,234,269,278,283,285,313,343,],[-181,-149,-2,-17,-18,-19,-95,-96,-97,-99,-100,-101,-102,-2,-104,-105,-2,-140,-141,-142,-143,-144,-145,-146,-147,-148,-20,-2,-2,-2,-172,-98,-103,-170,-112,-114,-107,-108,-109,-110,-106,-180,-2,-23,-24,-171,-26,-2,-115,-123,-116,-136,-120,-137,-111,-121,-118,282,-2,-22,-2,-2,-119,-122,-117,-138,-139,-113,-21,-124,-25,-79,]),'END':([18,21,22,26,27,28,36,37,38,39,40,41,42,43,44,45,47,49,50,51,52,53,54,55,56,57,72,87,88,89,93,97,100,102,107,110,121,123,125,137,138,139,140,146,152,160,161,162,164,166,167,168,175,177,180,183,184,186,205,210,211,218,222,223,224,225,226,227,228,232,233,234,241,244,245,246,249,253,256,269,271,272,273,278,279,280,283,285,291,294,295,296,311,312,313,315,316,322,323,324,326,327,328,329,331,334,335,343,344,350,351,352,353,354,355,359,],[-181,-149,-2,-17,-18,-19,-95,-96,-97,-99,-100,-101,-102,-2,-104,-105,-2,-140,-141,-142,-143,-144,-145,-146,-147,-148,-20,-2,-2,-2,-172,-98,166,-103,-170,-112,185,185,-114,-107,-108,-109,-110,-106,-180,-2,-23,-24,-171,-26,-2,-115,-123,-116,-136,242,243,-40,-120,-137,-111,-121,-118,-2,-2,-22,-2,-2,-119,-122,-117,-138,290,-39,-2,-52,-62,185,185,-139,-2,-77,-2,-113,-27,-28,-21,-124,-48,-2,-2,-65,343,-78,-25,-2,-30,-49,-50,-51,-53,-54,-55,-56,-59,-63,-64,-79,-29,-57,-58,-60,-61,-66,-67,-150,]),'}':([18,21,36,37,38,39,40,41,42,43,44,45,49,50,51,52,53,54,55,56,57,59,87,88,89,93,97,102,107,110,115,117,118,125,137,138,139,140,146,152,160,164,168,175,177,180,205,210,211,218,222,228,232,233,234,240,269,278,285,288,289,320,321,],[-181,-149,-95,-96,-97,-99,-100,-101,-102,-2,-104,-105,-140,-141,-142,-143,-144,-145,-146,-147,-148,-2,-2,-2,-2,-172,-98,-103,-170,-112,180,-135,-134,-114,-107,-108,-109,-110,-106,-180,-2,-171,-115,-123,-116,-136,-120,-137,-111,-121,-118,-119,-122,-117,-138,-2,-139,-113,-124,-2,-2,-132,-133,]),'DICT':([21,49,50,51,52,53,54,55,56,57,121,123,180,183,184,186,241,244,245,246,249,253,256,291,294,295,296,322,323,324,326,327,328,329,331,334,335,350,351,352,353,354,355,359,],[-149,-140,-141,-142,-143,-144,-145,-146,-147,-148,188,188,-136,188,188,-40,188,-39,-2,-52,-62,188,188,-48,-2,-2,-65,-49,-50,-51,-53,-54,-55,-56,-59,-63,-64,-57,-58,-60,-61,-66,-67,-150,]),'EXTENDS':([61,62,],[122,124,]),'DEFINED':([63,103,221,],[125,168,278,]),'AS':([67,91,105,106,152,],[-181,149,170,171,-180,]),'WHEN':([67,152,199,200,201,304,],[-181,-180,259,-68,-69,-70,]),'MATCHING':([67,152,229,],[-181,-180,284,]),'*':([70,71,94,108,109,135,207,220,],[135,135,135,135,135,209,135,135,]),'PARENTS':([126,260,],[201,201,]),'REL':([203,307,341,342,358,],[261,-86,-87,-89,-88,]),'UNDEF':([292,293,],[324,328,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'main':([0,],[1,]),'head':([0,],[2,]),'empty':([0,2,6,22,25,29,33,34,43,47,58,59,65,68,70,71,87,88,89,94,108,109,112,131,155,160,167,176,179,188,196,199,203,206,207,219,220,223,224,226,227,240,245,271,273,286,288,289,294,295,303,315,319,],[3,7,7,72,82,83,93,97,102,107,114,117,93,107,132,132,97,93,107,156,156,132,177,206,219,177,225,236,114,247,93,257,114,132,132,156,156,280,225,97,93,289,291,225,225,236,117,117,329,331,336,225,347,]),'body':([2,6,],[5,60,]),'top_stmt':([2,6,],[6,6,]),'entity_def':([2,6,],[8,8,]),'implement_def':([2,6,],[9,9,]),'implementation_def':([2,6,],[10,10,]),'relation':([2,6,],[11,11,]),'statement':([2,6,167,224,271,273,315,],[12,12,224,224,224,224,224,]),'typedef':([2,6,],[13,13,]),'index':([2,6,],[14,14,]),'import':([2,6,],[15,15,]),'class_ref':([2,6,19,30,31,35,48,58,73,74,75,76,78,94,95,96,99,104,108,109,122,124,141,143,144,167,171,179,181,203,208,209,212,220,224,237,254,255,259,261,262,271,273,282,284,287,315,],[20,20,64,85,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,194,194,90,213,90,90,231,90,90,90,90,90,90,90,90,90,194,194,90,305,306,90,90,90,90,90,90,]),'expression':([2,6,31,35,48,58,73,74,75,76,78,94,95,96,99,104,108,109,141,144,167,179,181,203,208,209,212,220,224,237,259,271,273,282,284,287,315,],[22,22,86,101,110,112,137,138,139,140,142,160,160,160,160,160,160,160,211,160,22,160,160,160,160,160,269,160,22,286,303,22,22,101,317,319,22,]),'relation_def':([2,6,],[25,25,]),'assign':([2,6,167,224,271,273,315,],[26,26,26,26,26,26,26,]),'for':([2,6,167,224,271,273,315,],[27,27,27,27,27,27,27,]),'if':([2,6,167,224,271,273,315,],[28,28,28,28,28,28,28,]),'typedef_inner':([2,6,],[29,29,]),'ns_ref':([2,6,19,30,31,32,35,48,58,73,74,75,76,78,94,95,96,99,104,108,109,121,122,123,124,126,141,143,144,167,170,171,179,181,183,184,203,208,209,212,220,224,237,241,253,254,255,256,259,260,261,262,271,273,282,284,287,315,],[33,33,65,65,88,91,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,192,196,192,196,200,88,65,88,227,229,65,88,88,192,192,88,88,88,88,88,227,88,192,192,196,196,192,88,200,65,65,227,227,88,88,88,227,]),'var_ref':([2,6,19,30,31,35,48,58,73,74,75,76,78,94,95,96,99,104,108,109,122,124,141,143,144,167,171,179,181,203,208,209,212,220,224,237,254,255,259,261,262,271,273,282,284,287,315,],[34,34,66,66,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,195,195,87,66,87,226,66,87,87,87,87,87,87,87,226,87,195,195,87,66,66,226,226,87,87,87,226,]),'boolean_expression':([2,6,31,35,48,58,73,74,75,76,78,94,95,96,99,104,108,109,141,144,167,179,181,203,208,209,212,220,224,237,259,271,273,282,284,287,315,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'constant':([2,6,31,35,48,58,73,74,75,76,78,94,95,96,99,104,108,109,141,144,167,179,181,203,208,209,212,220,224,237,259,271,273,282,284,287,292,293,315,325,360,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,322,326,37,349,349,]),'function_call':([2,6,31,35,48,58,73,74,75,76,78,94,95,96,99,104,108,109,141,144,167,179,181,203,208,209,212,220,224,237,259,271,273,282,284,287,315,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'constructor':([2,6,31,35,48,58,73,74,75,76,78,94,95,96,99,104,108,109,141,144,167,171,179,181,203,208,209,212,220,224,237,259,271,273,282,284,287,315,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,230,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'list_def':([2,6,31,35,48,58,73,74,75,76,78,94,95,96,99,104,108,109,141,144,167,179,181,203,208,209,212,220,224,237,259,271,273,282,284,287,315,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'list_comprehension':([2,6,31,35,48,58,73,74,75,76,78,94,95,96,99,104,108,109,141,144,167,179,181,203,208,209,212,220,224,237,259,271,273,282,284,287,315,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'map_def':([2,6,31,35,48,58,73,74,75,76,78,94,95,96,99,104,108,109,141,144,167,179,181,203,208,209,212,220,224,237,259,271,273,282,284,287,297,315,330,332,333,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,334,42,350,352,354,]),'map_lookup':([2,6,31,35,48,58,73,74,75,76,78,94,95,96,99,104,108,109,141,144,167,179,181,203,208,209,212,220,224,237,259,271,273,282,284,287,315,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'index_lookup':([2,6,31,35,48,58,73,74,75,76,78,94,95,96,99,104,108,109,141,144,167,179,181,203,208,209,212,220,224,237,259,271,273,282,284,287,315,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'conditional_expression':([2,6,31,35,48,58,73,74,75,76,78,94,95,96,99,104,108,109,141,144,167,179,181,203,208,209,212,220,224,237,259,271,273,282,284,287,315,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'attr_ref':([2,6,19,30,31,35,48,58,73,74,75,76,78,94,95,96,99,104,108,109,122,124,141,143,144,167,171,179,181,203,208,209,212,220,224,237,254,255,259,261,262,271,273,282,284,287,315,],[47,47,68,68,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,68,68,89,68,89,47,68,89,89,89,89,89,89,89,47,89,68,68,89,68,68,47,47,89,89,89,47,]),'if_body':([35,282,],[100,316,]),'operand_list':([58,179,203,],[111,239,262,]),'operand':([58,94,95,96,99,104,108,109,144,179,181,203,208,209,220,],[113,158,161,162,165,169,158,173,214,113,240,113,267,268,158,]),'pair_list':([59,288,],[115,320,]),'dict_key':([59,288,],[116,116,]),'pair_list_empty':([59,288,289,],[118,118,321,]),'param_list':([70,71,109,207,],[129,136,174,266,]),'param_list_empty':([70,71,109,206,207,],[130,130,130,265,130,]),'param_list_element':([70,71,94,108,109,207,220,],[131,131,157,157,131,131,157,]),'wrapped_kwargs':([70,71,94,108,109,207,220,],[134,134,134,134,134,134,134,]),'function_param_list':([94,108,220,],[153,172,277,]),'function_param_list_empty':([94,108,219,220,],[154,154,276,154,]),'function_param_list_element':([94,108,220,],[155,155,155,]),'list_comprehension_for':([112,319,],[176,346,]),'entity_body_outer':([121,123,253,256,],[182,197,299,302,]),'entity_body':([121,123,183,253,256,],[184,184,241,184,184,]),'attr':([121,123,183,184,241,253,256,],[186,186,186,244,244,186,186,]),'attr_type':([121,123,183,184,241,253,256,],[187,187,187,187,187,187,187,]),'attr_type_opt':([121,123,183,184,241,253,256,],[189,189,189,189,189,189,189,]),'attr_type_multi':([121,123,183,184,241,253,256,],[190,190,190,190,190,190,190,]),'attr_base_type':([121,123,183,184,241,253,256,],[191,191,191,191,191,191,191,]),'class_ref_list':([122,124,254,255,],[193,198,300,301,]),'implement_ns_list':([126,260,],[199,304,]),'multi':([128,356,357,],[203,361,362,]),'id_list':([145,275,],[215,314,]),'stmt_list':([167,224,271,273,315,],[223,283,311,311,344,]),'list_comprehension_guard':([176,286,],[235,318,]),'implementation':([213,],[270,]),'implementation_head':([213,],[271,]),'if_next':([223,],[279,]),'block':([271,273,],[310,313,]),'constant_list':([292,293,],[323,327,]),'list_comprehension_for_empty':([319,],[345,]),'constants':([325,360,],[348,363,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> head body','main',2,'p_main','plyInmantaParser.py',129),
  ('empty -> <empty>','empty',0,'p_empty','plyInmantaParser.py',140),
  ('head -> empty','head',1,'p_main_head','plyInmantaParser.py',144),
  ('head -> MLS','head',1,'p_main_head_doc','plyInmantaParser.py',149),
  ('body -> top_stmt body','body',2,'p_body_collect','plyInmantaParser.py',154),
  ('body -> empty','body',1,'p_body_term','plyInmantaParser.py',161),
  ('top_stmt -> entity_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',166),
  ('top_stmt -> implement_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',167),
  ('top_stmt -> implementation_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',168),
  ('top_stmt -> relation','top_stmt',1,'p_top_stmt','plyInmantaParser.py',169),
  ('top_stmt -> statement','top_stmt',1,'p_top_stmt','plyInmantaParser.py',170),
  ('top_stmt -> typedef','top_stmt',1,'p_top_stmt','plyInmantaParser.py',171),
  ('top_stmt -> index','top_stmt',1,'p_top_stmt','plyInmantaParser.py',172),
  ('top_stmt -> import','top_stmt',1,'p_top_stmt','plyInmantaParser.py',173),
  ('import -> IMPORT ns_ref','import',2,'p_import','plyInmantaParser.py',183),
  ('import -> IMPORT ns_ref AS ID','import',4,'p_import_1','plyInmantaParser.py',189),
  ('statement -> assign','statement',1,'p_stmt','plyInmantaParser.py',200),
  ('statement -> for','statement',1,'p_stmt','plyInmantaParser.py',201),
  ('statement -> if','statement',1,'p_stmt','plyInmantaParser.py',202),
  ('statement -> expression empty','statement',2,'p_stmt','plyInmantaParser.py',203),
  ('stmt_list -> statement stmt_list','stmt_list',2,'p_stmt_list_collect','plyInmantaParser.py',217),
  ('stmt_list -> empty','stmt_list',1,'p_stmt_list_empty','plyInmantaParser.py',224),
  ('assign -> var_ref = operand','assign',3,'p_assign','plyInmantaParser.py',229),
  ('assign -> var_ref PEQ operand','assign',3,'p_assign_extend','plyInmantaParser.py',235),
  ('for -> FOR ID IN operand : block','for',6,'p_for','plyInmantaParser.py',241),
  ('if -> IF if_body END','if',3,'p_if_start','plyInmantaParser.py',248),
  ('if_body -> expression : stmt_list if_next','if_body',4,'p_if_body','plyInmantaParser.py',254),
  ('if_next -> empty','if_next',1,'p_if_end','plyInmantaParser.py',261),
  ('if_next -> ELSE : stmt_list','if_next',3,'p_if_else','plyInmantaParser.py',267),
  ('if_next -> ELIF if_body','if_next',2,'p_if_elif','plyInmantaParser.py',273),
  ('entity_def -> ENTITY CID : entity_body_outer','entity_def',4,'p_entity','plyInmantaParser.py',285),
  ('entity_def -> ENTITY ID : entity_body_outer','entity_def',4,'p_entity_err_1','plyInmantaParser.py',292),
  ('entity_def -> ENTITY CID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends','plyInmantaParser.py',297),
  ('entity_def -> ENTITY ID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends_err','plyInmantaParser.py',304),
  ('entity_body_outer -> MLS entity_body END','entity_body_outer',3,'p_entity_body_outer','plyInmantaParser.py',309),
  ('entity_body_outer -> entity_body END','entity_body_outer',2,'p_entity_body_outer_1','plyInmantaParser.py',314),
  ('entity_body_outer -> END','entity_body_outer',1,'p_entity_body_outer_none','plyInmantaParser.py',319),
  ('entity_body_outer -> MLS END','entity_body_outer',2,'p_entity_body_outer_4','plyInmantaParser.py',324),
  ('entity_body -> entity_body attr','entity_body',2,'p_entity_body_collect','plyInmantaParser.py',329),
  ('entity_body -> attr','entity_body',1,'p_entity_body','plyInmantaParser.py',335),
  ('attr_base_type -> ns_ref','attr_base_type',1,'p_attribute_base_type','plyInmantaParser.py',340),
  ('attr_type_multi -> attr_base_type [ ]','attr_type_multi',3,'p_attribute_type_multi','plyInmantaParser.py',346),
  ('attr_type_opt -> attr_type_multi ?','attr_type_opt',2,'p_attribute_type_opt','plyInmantaParser.py',352),
  ('attr_type_opt -> attr_base_type ?','attr_type_opt',2,'p_attribute_type_opt','plyInmantaParser.py',353),
  ('attr_type -> attr_type_opt','attr_type',1,'p_attribute_type','plyInmantaParser.py',359),
  ('attr_type -> attr_type_multi','attr_type',1,'p_attribute_type','plyInmantaParser.py',360),
  ('attr_type -> attr_base_type','attr_type',1,'p_attribute_type','plyInmantaParser.py',361),
  ('attr -> attr_type CID empty','attr',3,'p_attr_err','plyInmantaParser.py',366),
  ('attr -> attr_type CID = constant','attr',4,'p_attr_err','plyInmantaParser.py',367),
  ('attr -> attr_type CID = constant_list','attr',4,'p_attr_err','plyInmantaParser.py',368),
  ('attr -> attr_type CID = UNDEF','attr',4,'p_attr_err','plyInmantaParser.py',369),
  ('attr -> attr_type ID','attr',2,'p_attr','plyInmantaParser.py',376),
  ('attr -> attr_type ID = constant','attr',4,'p_attr_cte','plyInmantaParser.py',382),
  ('attr -> attr_type ID = constant_list','attr',4,'p_attr_cte','plyInmantaParser.py',383),
  ('attr -> attr_type ID = UNDEF','attr',4,'p_attr_undef','plyInmantaParser.py',389),
  ('attr -> DICT empty CID empty','attr',4,'p_attr_dict_err','plyInmantaParser.py',395),
  ('attr -> DICT empty CID = map_def','attr',5,'p_attr_dict_err','plyInmantaParser.py',396),
  ('attr -> DICT empty CID = NULL','attr',5,'p_attr_dict_err','plyInmantaParser.py',397),
  ('attr -> DICT ? CID empty','attr',4,'p_attr_dict_err','plyInmantaParser.py',398),
  ('attr -> DICT ? CID = map_def','attr',5,'p_attr_dict_err','plyInmantaParser.py',399),
  ('attr -> DICT ? CID = NULL','attr',5,'p_attr_dict_err','plyInmantaParser.py',400),
  ('attr -> DICT ID','attr',2,'p_attr_dict','plyInmantaParser.py',407),
  ('attr -> DICT ID = map_def','attr',4,'p_attr_list_dict','plyInmantaParser.py',413),
  ('attr -> DICT ID = NULL','attr',4,'p_attr_list_dict_null_err','plyInmantaParser.py',419),
  ('attr -> DICT ? ID','attr',3,'p_attr_dict_nullable','plyInmantaParser.py',424),
  ('attr -> DICT ? ID = map_def','attr',5,'p_attr_list_dict_nullable','plyInmantaParser.py',430),
  ('attr -> DICT ? ID = NULL','attr',5,'p_attr_list_dict_null','plyInmantaParser.py',436),
  ('implement_ns_list -> ns_ref','implement_ns_list',1,'p_implement_ns_list_ref','plyInmantaParser.py',443),
  ('implement_ns_list -> PARENTS','implement_ns_list',1,'p_implement_ns_list_parents','plyInmantaParser.py',448),
  ('implement_ns_list -> implement_ns_list , implement_ns_list','implement_ns_list',3,'p_implement_ns_list_collect','plyInmantaParser.py',453),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list empty','implement_def',5,'p_implement','plyInmantaParser.py',458),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list MLS','implement_def',5,'p_implement','plyInmantaParser.py',459),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list WHEN expression empty','implement_def',7,'p_implement_when','plyInmantaParser.py',468),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list WHEN expression MLS','implement_def',7,'p_implement_when','plyInmantaParser.py',469),
  ('implementation_def -> IMPLEMENTATION ID FOR class_ref implementation','implementation_def',5,'p_implementation_def','plyInmantaParser.py',479),
  ('implementation -> implementation_head block','implementation',2,'p_implementation','plyInmantaParser.py',492),
  ('implementation_head -> :','implementation_head',1,'p_implementation_head','plyInmantaParser.py',497),
  ('implementation_head -> : MLS','implementation_head',2,'p_implementation_head_doc','plyInmantaParser.py',502),
  ('block -> stmt_list END','block',2,'p_block','plyInmantaParser.py',507),
  ('relation -> relation_def MLS','relation',2,'p_relation_outer_comment','plyInmantaParser.py',513),
  ('relation -> relation_def empty','relation',2,'p_relation_outer','plyInmantaParser.py',520),
  ('relation_def -> class_ref . ID multi REL class_ref . ID multi','relation_def',9,'p_relation','plyInmantaParser.py',525),
  ('relation_def -> class_ref . ID multi REL class_ref','relation_def',6,'p_relation_unidir','plyInmantaParser.py',531),
  ('relation_def -> class_ref . ID multi operand_list class_ref . ID multi','relation_def',9,'p_relation_annotated','plyInmantaParser.py',537),
  ('relation_def -> class_ref . ID multi operand_list class_ref','relation_def',6,'p_relation_annotated_unidir','plyInmantaParser.py',543),
  ('multi -> [ INT ]','multi',3,'p_multi_1','plyInmantaParser.py',549),
  ('multi -> [ INT : ]','multi',4,'p_multi_2','plyInmantaParser.py',554),
  ('multi -> [ INT : INT ]','multi',5,'p_multi_3','plyInmantaParser.py',559),
  ('multi -> [ : INT ]','multi',4,'p_multi_4','plyInmantaParser.py',564),
  ('typedef -> typedef_inner empty','typedef',2,'p_typedef_outer','plyInmantaParser.py',572),
  ('typedef -> typedef_inner MLS','typedef',2,'p_typedef_outer_comment','plyInmantaParser.py',577),
  ('typedef_inner -> TYPEDEF ID AS ns_ref MATCHING expression','typedef_inner',6,'p_typedef_1','plyInmantaParser.py',584),
  ('typedef_inner -> TYPEDEF CID AS constructor','typedef_inner',4,'p_typedef_cls','plyInmantaParser.py',591),
  ('index -> INDEX class_ref ( id_list )','index',5,'p_index','plyInmantaParser.py',599),
  ('expression -> boolean_expression','expression',1,'p_expression','plyInmantaParser.py',609),
  ('expression -> constant','expression',1,'p_expression','plyInmantaParser.py',610),
  ('expression -> function_call','expression',1,'p_expression','plyInmantaParser.py',611),
  ('expression -> var_ref empty','expression',2,'p_expression','plyInmantaParser.py',612),
  ('expression -> constructor','expression',1,'p_expression','plyInmantaParser.py',613),
  ('expression -> list_def','expression',1,'p_expression','plyInmantaParser.py',614),
  ('expression -> list_comprehension','expression',1,'p_expression','plyInmantaParser.py',615),
  ('expression -> map_def','expression',1,'p_expression','plyInmantaParser.py',616),
  ('expression -> map_lookup empty','expression',2,'p_expression','plyInmantaParser.py',617),
  ('expression -> index_lookup','expression',1,'p_expression','plyInmantaParser.py',618),
  ('expression -> conditional_expression','expression',1,'p_expression','plyInmantaParser.py',619),
  ('expression -> ( expression )','expression',3,'p_expression_parentheses','plyInmantaParser.py',624),
  ('boolean_expression -> expression CMP_OP expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',629),
  ('boolean_expression -> expression IN expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',630),
  ('boolean_expression -> expression AND expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',631),
  ('boolean_expression -> expression OR expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',632),
  ('boolean_expression -> expression NOT IN expression','boolean_expression',4,'p_boolean_expression_not_in','plyInmantaParser.py',641),
  ('boolean_expression -> NOT expression','boolean_expression',2,'p_boolean_expression_not','plyInmantaParser.py',647),
  ('boolean_expression -> var_ref . ID IS DEFINED','boolean_expression',5,'p_boolean_expression_is_defined','plyInmantaParser.py',653),
  ('boolean_expression -> ID IS DEFINED','boolean_expression',3,'p_boolean_expression_is_defined_short','plyInmantaParser.py',659),
  ('boolean_expression -> map_lookup IS DEFINED','boolean_expression',3,'p_boolean_expression_is_defined_map_lookup','plyInmantaParser.py',665),
  ('operand -> expression empty','operand',2,'p_operand','plyInmantaParser.py',685),
  ('map_lookup -> attr_ref [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',690),
  ('map_lookup -> var_ref [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',691),
  ('map_lookup -> map_lookup [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',692),
  ('constructor -> class_ref ( param_list )','constructor',4,'p_constructor','plyInmantaParser.py',697),
  ('function_call -> ns_ref ( function_param_list )','function_call',4,'p_function_call','plyInmantaParser.py',703),
  ('function_call -> attr_ref ( function_param_list )','function_call',4,'p_function_call_err_dot','plyInmantaParser.py',710),
  ('list_def -> [ operand_list ]','list_def',3,'p_list_def','plyInmantaParser.py',715),
  ('list_comprehension -> [ expression list_comprehension_for list_comprehension_guard ]','list_comprehension',5,'p_list_comprehension','plyInmantaParser.py',728),
  ('list_comprehension_for_empty -> empty','list_comprehension_for_empty',1,'p_list_comprehension_for_empty','plyInmantaParser.py',753),
  ('list_comprehension_for -> FOR ID IN expression list_comprehension_for_empty','list_comprehension_for',5,'p_list_comprehension_for','plyInmantaParser.py',758),
  ('list_comprehension_for -> FOR ID IN expression list_comprehension_for','list_comprehension_for',5,'p_list_comprehension_for','plyInmantaParser.py',759),
  ('list_comprehension_guard -> empty','list_comprehension_guard',1,'p_list_comprehension_guard_empty','plyInmantaParser.py',766),
  ('list_comprehension_guard -> IF expression list_comprehension_guard','list_comprehension_guard',3,'p_list_comprehension_guard','plyInmantaParser.py',771),
  ('dict_key -> RSTRING','dict_key',1,'p_r_string_dict_key','plyInmantaParser.py',781),
  ('dict_key -> STRING','dict_key',1,'p_string_dict_key','plyInmantaParser.py',786),
  ('pair_list -> dict_key : operand , pair_list','pair_list',5,'p_pair_list_collect','plyInmantaParser.py',801),
  ('pair_list -> dict_key : operand empty pair_list_empty','pair_list',5,'p_pair_list_collect','plyInmantaParser.py',802),
  ('pair_list -> pair_list_empty','pair_list',1,'p_pair_list_empty','plyInmantaParser.py',811),
  ('pair_list_empty -> empty','pair_list_empty',1,'p_pair_list_empty','plyInmantaParser.py',812),
  ('map_def -> { pair_list }','map_def',3,'p_map_def','plyInmantaParser.py',817),
  ('index_lookup -> class_ref [ param_list ]','index_lookup',4,'p_index_lookup','plyInmantaParser.py',823),
  ('index_lookup -> attr_ref [ param_list ]','index_lookup',4,'p_short_index_lookup','plyInmantaParser.py',829),
  ('conditional_expression -> expression ? expression : expression','conditional_expression',5,'p_conditional_expression','plyInmantaParser.py',836),
  ('constant -> INT','constant',1,'p_constant','plyInmantaParser.py',846),
  ('constant -> FLOAT','constant',1,'p_constant','plyInmantaParser.py',847),
  ('constant -> NULL','constant',1,'p_constant_none','plyInmantaParser.py',854),
  ('constant -> REGEX','constant',1,'p_constant_regex','plyInmantaParser.py',860),
  ('constant -> TRUE','constant',1,'p_constant_true','plyInmantaParser.py',866),
  ('constant -> FALSE','constant',1,'p_constant_false','plyInmantaParser.py',872),
  ('constant -> STRING','constant',1,'p_constant_string','plyInmantaParser.py',878),
  ('constant -> FSTRING','constant',1,'p_constant_fstring','plyInmantaParser.py',884),
  ('constant -> RSTRING','constant',1,'p_constant_rstring','plyInmantaParser.py',943),
  ('constant -> MLS','constant',1,'p_constant_mls','plyInmantaParser.py',949),
  ('constant_list -> [ constants ]','constant_list',3,'p_constant_list','plyInmantaParser.py',1061),
  ('constants -> constant','constants',1,'p_constants_term','plyInmantaParser.py',1067),
  ('constants -> <empty>','constants',0,'p_constants_term_2','plyInmantaParser.py',1072),
  ('constants -> constant , constants','constants',3,'p_constants_collect','plyInmantaParser.py',1077),
  ('wrapped_kwargs -> * * operand','wrapped_kwargs',3,'p_wrapped_kwargs','plyInmantaParser.py',1083),
  ('param_list_element -> ID = operand','param_list_element',3,'p_param_list_element_explicit','plyInmantaParser.py',1089),
  ('param_list_element -> wrapped_kwargs','param_list_element',1,'p_param_list_element_kwargs','plyInmantaParser.py',1095),
  ('param_list -> param_list_empty','param_list',1,'p_param_list_empty','plyInmantaParser.py',1101),
  ('param_list_empty -> empty','param_list_empty',1,'p_param_list_empty','plyInmantaParser.py',1102),
  ('param_list -> param_list_element empty param_list_empty','param_list',3,'p_param_list_nonempty','plyInmantaParser.py',1108),
  ('param_list -> param_list_element , param_list','param_list',3,'p_param_list_nonempty','plyInmantaParser.py',1109),
  ('function_param_list_element -> param_list_element','function_param_list_element',1,'p_function_param_list_element','plyInmantaParser.py',1124),
  ('function_param_list_element -> operand','function_param_list_element',1,'p_function_param_list_element_arg','plyInmantaParser.py',1131),
  ('function_param_list -> function_param_list_empty','function_param_list',1,'p_function_param_list_empty','plyInmantaParser.py',1137),
  ('function_param_list_empty -> empty','function_param_list_empty',1,'p_function_param_list_empty','plyInmantaParser.py',1138),
  ('function_param_list -> function_param_list_element empty function_param_list_empty','function_param_list',3,'p_function_param_list_nonempty','plyInmantaParser.py',1144),
  ('function_param_list -> function_param_list_element , function_param_list','function_param_list',3,'p_function_param_list_nonempty','plyInmantaParser.py',1145),
  ('operand_list -> operand , operand_list','operand_list',3,'p_operand_list_collect','plyInmantaParser.py',1163),
  ('operand_list -> operand','operand_list',1,'p_operand_list_term','plyInmantaParser.py',1169),
  ('operand_list -> empty','operand_list',1,'p_operand_list_term_2','plyInmantaParser.py',1174),
  ('var_ref -> attr_ref empty','var_ref',2,'p_var_ref','plyInmantaParser.py',1179),
  ('attr_ref -> var_ref . ID','attr_ref',3,'p_attr_ref','plyInmantaParser.py',1184),
  ('var_ref -> ns_ref empty','var_ref',2,'p_var_ref_2','plyInmantaParser.py',1190),
  ('class_ref -> CID','class_ref',1,'p_class_ref_direct','plyInmantaParser.py',1196),
  ('class_ref -> ns_ref SEP CID','class_ref',3,'p_class_ref','plyInmantaParser.py',1207),
  ('class_ref -> var_ref . CID','class_ref',3,'p_class_ref_err_dot','plyInmantaParser.py',1213),
  ('class_ref_list -> class_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect','plyInmantaParser.py',1228),
  ('class_ref_list -> var_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect_err','plyInmantaParser.py',1234),
  ('class_ref_list -> class_ref','class_ref_list',1,'p_class_ref_list_term','plyInmantaParser.py',1239),
  ('class_ref_list -> var_ref','class_ref_list',1,'p_class_ref_list_term_err','plyInmantaParser.py',1244),
  ('ns_ref -> ns_ref SEP ID','ns_ref',3,'p_ns_ref','plyInmantaParser.py',1250),
  ('ns_ref -> ID','ns_ref',1,'p_ns_ref_term','plyInmantaParser.py',1256),
  ('id_list -> ID , id_list','id_list',3,'p_id_list_collect','plyInmantaParser.py',1261),
  ('id_list -> ID','id_list',1,'p_id_list_term','plyInmantaParser.py',1267),
]
