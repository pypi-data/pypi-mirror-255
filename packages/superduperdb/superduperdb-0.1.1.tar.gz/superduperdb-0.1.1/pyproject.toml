[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "superduperdb"
description = "ðŸ”® Super-power your database with AI ðŸ”®"
readme = "README.md"
license = {file = "LICENSE"}
maintainers = [{name = "Duncan Blythe", email = "opensource@superduperdb.com"}]
keywords = [
    "mongo",
    "mongodb",
    "pymongo",
    "data-science",
    "machine-learning",
    "mlops",
    "vector-database",
    "ai",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: GPU :: NVIDIA CUDA",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Database",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed"
]
requires-python = ">=3.8"
dynamic = ["version"]
dependencies = [
    "boto3>=1.16",
    "dask[distributed]>=2022.6.0",
    "dill>=0.3.6",
    "loguru>=0.7.2",
    "loki-logger-handler>=0.1.1",
    "networkx>=2.8.8",
    "requests>=2.22",  # lower bound from openai and boto3
    "tqdm>=4.64.1",
    "typer>=0.7.0",
    "pylance>=0.6.1,<=0.8.14",
    "readerwriterlock>=1.0.9",
    "pydantic>=1",
    "pymongo>=4.3.3",
    "numpy>=1.24.3",
    "overrides>=7",
    "tenacity>=8.1.0",
    "scikit-learn>=1.1.3",
    "pillow>=9.4.0",
    "mongomock>=4.1.2",
    "ibis>=3.3.0",
    "ibis-framework[sqlite]>=5.1.0",
    "ibis-framework[duckdb]>=5.1.0",
    "ibis-framework[snowflake]>=5.1.0",
    "sqlglot<=20.10",
    "PyYAML>=6.0.0",
    "prettytable",
    "python-dotenv",
    "ray[client]>=2.8.1"
]

[project.optional-dependencies]
torch = [
    "torch>=2.0.0,!=2.0.1",
    "accelerate>=0.20.1",
    "transformers>=4.29.1",
    "torchvision",
    "torchaudio",
]
apis = [
    "openai>=1.1.2",
    "cohere==4.40",
    "anthropic==0.12.0",
]
docs = [
    "furo",
    "sphinx",
    "sphinx-autodoc-typehints",
    "myst_parser"
]
quality = [
    # Static Typing
    "mypy>=1.3.0",
    "types-pillow>=9.5.0.4",
    "types-requests>=2.31.0.1",
    "types-PyYAML",
    "types-tqdm>=4.65.0.1",
    "monkeytype",
    "boto3-stubs>=1.26.154",
    "black>=23.3",
    "interrogate>=1.5.0",
    "ruff>=0.0.267",
]
testing = [
    "fastapi>=0.103.1",
    "httpx>=0.24.1",
    "lorem>=0.1.1",
    "pytest>=7.3.1",
    "pytest-cov>=2.12.1",
    "pytest-xdist>=3.3.1",
    "nbval>=0.10.0",
    "vcrpy",
    "pytest-asyncio",
    "urllib3<2",  # see https://github.com/urllib3/urllib3/issues/3053
]
# Dependencies for server
server = [
    "uvicorn>=0.24.0",
    "fastapi>=0.103.2",
]
# Packages for enterprise testing
enterprise = [
    "ray[default]",
    "sentence-transformers",
]

dev = ["superduperdb[torch,apis,docs,quality,testing,server,enterprise]"]

# Dependencies for supported Notebooks in examples dir.
# Whatever modules are defined in the notebooks, must be also defined here.
demo = [
    "ipython",
    "openai-clip",
    "datasets>=2.14.6",
    "soundfile",
    "sentence-transformers",
    "opencv-python",
    "matplotlib",
    "librosa",
]

[project.urls]
homepage = "https://www.superduperdb.com/"
documentation = "https://docs.superduperdb.com"
source = "https://github.com/SuperDuperDB/superduperdb/"

[tool.setuptools.packages.find]
include = ["superduperdb*"]

[tool.setuptools.dynamic]
version = {attr = "superduperdb.__version__"}

[tool.black]
skip-string-normalization = true
target-version = ["py38"]

[tool.mypy]
ignore_missing_imports = true
no_implicit_optional = true
warn_unused_ignores = true
disable_error_code = ["has-type", "attr-defined"]

[tool.pytest.ini_options]
addopts = "-W ignore"

[tool.interrogate]
# Uncomment these next lines to generate a badge
#
# badge-format = "svg"
# generate-badge = "docs"

color = true
exclude = []
fail-under = 35.1
ignore-magic = true
ignore-nested-classes = false
ignore-nested-functions = true
ignore-private = true
ignore-property-decorators = true
ignore-regex = []
ignore-semiprivate = true
omit-covered-files = true
quiet = false
verbose = 0
whitelist-regex = []

[tool.ruff]
extend-select = [
    "I", # Missing required import (auto-fixable)
    "F", # PyFlakes
    #"W", # PyCode Warning
    "E", # PyCode Error
    #"N", # pep8-naming
    #"D", # pydocstyle
]

[tool.ruff.isort]
combine-as-imports = true
