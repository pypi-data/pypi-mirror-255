// @generated by protoc-gen-connect-es v1.3.0 with parameter "target=ts"
// @generated from file flyteidl/service/auth.proto (package flyteidl.service, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { OAuth2MetadataRequest, OAuth2MetadataResponse, PublicClientAuthConfigRequest, PublicClientAuthConfigResponse } from "./auth_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * The following defines an RPC service that is also served over HTTP via grpc-gateway.
 * Standard response codes for both are defined here: https://github.com/grpc-ecosystem/grpc-gateway/blob/master/runtime/errors.go
 * RPCs defined in this service must be anonymously accessible.
 *
 * @generated from service flyteidl.service.AuthMetadataService
 */
export const AuthMetadataService = {
  typeName: "flyteidl.service.AuthMetadataService",
  methods: {
    /**
     * Anonymously accessible. Retrieves local or external oauth authorization server metadata.
     *
     * @generated from rpc flyteidl.service.AuthMetadataService.GetOAuth2Metadata
     */
    getOAuth2Metadata: {
      name: "GetOAuth2Metadata",
      I: OAuth2MetadataRequest,
      O: OAuth2MetadataResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Anonymously accessible. Retrieves the client information clients should use when initiating OAuth2 authorization
     * requests.
     *
     * @generated from rpc flyteidl.service.AuthMetadataService.GetPublicClientConfig
     */
    getPublicClientConfig: {
      name: "GetPublicClientConfig",
      I: PublicClientAuthConfigRequest,
      O: PublicClientAuthConfigResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

