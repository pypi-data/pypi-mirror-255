// @generated by protoc-gen-connect-es v1.3.0 with parameter "target=ts"
// @generated from file flyteidl/service/external_plugin_service.proto (package flyteidl.service, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { TaskCreateRequest, TaskCreateResponse, TaskDeleteRequest, TaskDeleteResponse, TaskGetRequest, TaskGetResponse } from "./external_plugin_service_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * ExternalPluginService defines an RPC Service that allows propeller to send the request to the backend plugin server.
 *
 * @generated from service flyteidl.service.ExternalPluginService
 */
export const ExternalPluginService = {
  typeName: "flyteidl.service.ExternalPluginService",
  methods: {
    /**
     * Send a task create request to the backend plugin server.
     *
     * @generated from rpc flyteidl.service.ExternalPluginService.CreateTask
     * @deprecated
     */
    createTask: {
      name: "CreateTask",
      I: TaskCreateRequest,
      O: TaskCreateResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get job status.
     *
     * @generated from rpc flyteidl.service.ExternalPluginService.GetTask
     * @deprecated
     */
    getTask: {
      name: "GetTask",
      I: TaskGetRequest,
      O: TaskGetResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete the task resource.
     *
     * @generated from rpc flyteidl.service.ExternalPluginService.DeleteTask
     * @deprecated
     */
    deleteTask: {
      name: "DeleteTask",
      I: TaskDeleteRequest,
      O: TaskDeleteResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

