[project]
name = "nonebot_plugin_bh3_elysian_realm"
version = "0.2.0"
description = "BH3 Elysian Realm bot power by NoneBot2"
authors = [
    { name = "BalconyJH", email = "balconyjh@gmail.com" },
]
dependencies = [
    "setuptools>=68.2.2",
    "nonebot-adapter-onebot>=2.3.1",
    "uvicorn[standard]>=0.23.2",
    "fastapi>=0.104.0",
    "nonebot2~=2.2",
    "nonebot-plugin-send-anything-anywhere>=0.3.2",
    "tqdm>=4.66.1",
    "pillow>=10.1.0",
    "nonebot-plugin-localstore>=0.5.1",
    "nonebot-plugin-apscheduler>=0.3.0",
]
requires-python = ">=3.8.1"
readme = "README.md"
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
    "Programming Language :: Python :: 3.8",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.license]
text = "AGPL-3.0"

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[tool.nonebot]
plugins = [
    "nonebot_plugin_bh3_elysian_realm",
    "nonebot_plugin_saa",
    "nonebot_plugin_localstore",
    "nonebot_plugin_apscheduler",
]
plugin_dirs = []
builtin_plugins = []

[[tool.nonebot.adapters]]
name = "OneBot V12"
module_name = "nonebot.adapters.onebot.v12"
project_link = "nonebot-adapter-onebot"
desc = "OneBot V12 协议"

[[tool.nonebot.adapters]]
name = "OneBot V11"
module_name = "nonebot.adapters.onebot.v11"
project_link = "nonebot-adapter-onebot"
desc = "OneBot V11 协议"

[tool.pdm.dev-dependencies]
test = [
    "nonebug>=0.3.5",
    "pytest-asyncio>=0.21.1",
    "isort>=5.12.0",
    "black>=23.7.0",
    "pre-commit>=3.3.3",
    "flake8>=6.1.0",
    "nonebot-plugin-sentry>=0.4.1",
    "nonebug-saa>=0.3.1",
    "nb-cli>=1.2.8",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.5.0",
]

[tool.black]
line-length = 120
target-version = [
    "py38",
    "py39",
    "py310",
    "py311",
]
include = "\\.pyi?$"
extend-exclude = ""

[tool.isort]
profile = "black"
line_length = 120
length_sort = true
skip_gitignore = true
force_sort_within_sections = true
extra_standard_library = [
    "typing_extensions",
]

[tool.ruff]
line-length = 120
target-version = "py38"

[tool.ruff.lint]
ignore = [
    "E402",
    "C901",
    "UP037",
    "E501",
]
select = [
    "E",
    "W",
    "F",
    "UP",
    "C",
    "T",
    "PYI",
    "PT",
    "Q",
]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.pyright]
pythonVersion = "3.8"
pythonPlatform = "All"
venvPath = "."
venv = ".venv"
typeCheckingMode = "basic"
reportShadowedImports = false
disableBytesTypePromotions = true

[[tool.pyright.executionEnvironments]]
root = "./tests"
extraPaths = [
    "./",
]

[[tool.pyright.executionEnvironments]]
root = "./"

[tool.pytest.ini_options]
asyncio_mode = "auto"
