name: Python application

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Setup Vulkan
      run: |
        Invoke-WebRequest -Uri https://sdk.lunarg.com/sdk/download/1.3.275.0/windows/VulkanSDK-1.3.275.0-Installer.exe?Human=true -OutFile VulkanSDK-1.3.275.0-Installer.exe
        7z x -aoa ./VulkanSDK-1.3.275.0-Installer.exe -oVulkanSDK
        Remove-Item .\VulkanSDK\Demos, .\VulkanSDK\Samples, .\VulkanSDK\Third-Party, .\VulkanSDK\Tools, .\VulkanSDK\Tools32, .\VulkanSDK\Bin32, .\VulkanSDK\Lib32 -Recurse -ErrorAction Ignore
        $env:VULKAN_SDK="$(pwd)\VulkanSDK"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel twine cmake_build_extension ninja requests
        pip install .

    - name: Run tests
      run: |
        # Add commands to run your tests here.

    - name: Build project
      run: |
        # Add commands to build your project here.

  deploy:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Setup Vulkan
      run: |
        Invoke-WebRequest -Uri https://sdk.lunarg.com/sdk/download/1.3.275.0/windows/VulkanSDK-1.3.275.0-Installer.exe?Human=true -OutFile VulkanSDK-1.3.275.0-Installer.exe
        7z x -aoa ./VulkanSDK-1.3.275.0-Installer.exe -oVulkanSDK
        Remove-Item .\VulkanSDK\Demos, .\VulkanSDK\Samples, .\VulkanSDK\Third-Party, .\VulkanSDK\Tools, .\VulkanSDK\Tools32, .\VulkanSDK\Bin32, .\VulkanSDK\Lib32 -Recurse -ErrorAction Ignore
        $env:VULKAN_SDK="$(pwd)\VulkanSDK"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel twine cmake_build_extension ninja requests

    - name: Build and publish
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload dist/*