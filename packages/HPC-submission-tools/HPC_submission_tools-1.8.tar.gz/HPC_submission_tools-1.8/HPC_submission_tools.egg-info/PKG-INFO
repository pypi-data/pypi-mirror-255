Metadata-Version: 2.1
Name: HPC-submission-tools
Version: 1.8
Summary: Tools pertaining to use of HPC clusters with slurm file systems
Home-page: https://github.com/RossJamesUrquhart/HPC_submission_tools
Download-URL: https://github.com/RossJamesUrquhart/HPC_submission_tools/archive/refs/tags/v1.8.tar.gz
Author: Ross Urquhart
Author-email: ross.urquhart@strath.ac.uk
License: MIT
Keywords: HPC,Command line
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Build Tools
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Description-Content-Type: text/markdown
License-File: LICENSE.txt

# HPC_Submission_Tools

Repo for tools to help with slurm submission and management within ARCHIE-WeST HPC cluster

## Install

From cloning repo

```
git clone https://www.github.com/RossJamesUrquhart/HPC_submission_tools
pip install .
```

From PyPi

```
pip install HPC-submission-tools
```

## JobSubmitter - Usage

```
from HPC_submission_tools import JobSubmission
JobSubmitter = JobSubmitter()

JobSubmitter.submit_jobs([path/to/sbatch/files], additional_ext=None)

```

The ```additional_ext``` keyword will take a list of any extensions not already considered by the script to search for those to mvoe alongside the sbatch files.

## XYZ2ORCA - Usage

```
from HPC_submission_tools import XYZ2ORCA

xyz = ["2,6-XylH+.xyz"] # list of xyz files to process

functional = "wB97X"
job = "Opt Freq"
basis_set= "Def2-SVP"
solvation = "CPCM(Water)"
time = "01:00:00"
cores = 4
charge = 1
kwargs = ["SlowConv", "TightSCF", "DEFGRID2", "Def2/J", "RIJCOSX"]

for x in xyz:
    process = XYZ2ORCA(x, job, functional, basis_set, charge, solvation, cores, time, kwargs)
    process.xyz2orca()
```
