Commit messages should be clear and follow a few basic rules.

Example:

```
ENH: Improve functionality X in module Y

The first line of the commit message starts with a capitalized acronym
(options listed below) indicating what type of commit this is.  Then a blank
line, then more text if needed.  Lines shouldn't be longer than 72
characters.  If the commit is related to a ticket, indicate that with
"See #3456", "See ticket 3456", "Closes #3456" or similar.
```

Describing the motivation for a change, the nature of a bug for bug fixes or
some details on what an enhancement does are also good to include in a
commit message. Messages should be understandable without looking at the
code changes. A commit message like `MAINT: fixed another one` is an example
of what not to do, because the reader has to go look for context elsewhere.

Standard acronyms to start the commit message with are:

API  : breaking API change
BENCH: change to the benchmark suite
BLD  : change to the build system
BUG  : bug fix
DEP  : deprecate a feature
DEV  : development tool or utility
DOC  : change to the documentation
ENH  : improve a feature
MAINT: project maintenance
NEW  : add a new feature
REL  : release a new version
REM  : remove a feature
REV  : revert an earlier commit
SEC  : security-related change
STY  : style fix
TST  : change to the test suite
TYP  : static typing
WIP  : work-in-progess
