import psutil
import os
import datetime
import wmi
import platform
import subprocess
import socket
import requests

uuid = str(subprocess.check_output('wmic csproduct get uuid'), 'utf-8').split('\n')[1].strip()
serialnum = str(subprocess.check_output('wmic bios get serialnumber'), 'utf-8').split('\n')[1].strip()


def boottime():
    print(datetime.datetime.fromtimestamp(psutil.boot_time()).strftime(Fore.LIGHTBLUE_EX + "%Y-%m-%d %H:%M:%S"), Fore.RESET)

def getprocesses():
    f = open('C:\\Users\Public\Process.txt', "w")
    wmi_obj = wmi.WMI()
    processes = wmi_obj.Win32_Process()
    time = datetime.datetime.now()
    f.write(f'Here is Running Processes in this System, Generated by SysDBG Library - Date: {time}\n')
    f.write(f'--------------------------------------------------------------------------\n')
    for process in processes:
        f.write(f'Process ID (PID): {process.ProcessId}, File name: {process.Name}\n')
    f.write(f'--------------------------------------------------------------------------')
    f.close()

def prefetchget():
    prefetchs = os.listdir("C:\\Windows\Prefetch")
    space = ['\n']
    time = datetime.datetime.now()
    f = open('C:\\Users\Public\PrefetchLog.txt', "w")
    f.write(f"Here is Generated Prefetch info Logs by SysDBG Library - Date: {time}\n")
    f.write("HINT: This Log are log times with the format of 0-9 - A-Z\n")
    f.write("HINT: Because of a bug Name of apps got logged will be bugged, Dont worry, This wont affect the process of Logging.\n")
    f.write("-------------------------------------------------------------\n")
    f.write("Apps got Logged:\n")
    f.writelines(prefetchs)
    f.write("\n-------------------------------------------------------------\n")
    for i in prefetchs:
        ctime = os.path.getctime(f'C:\\Windows\Prefetch\{i}')
        f.write("First time executed app:" + datetime.datetime.fromtimestamp(ctime).strftime("%Y-%m-%d %H:%M:%S") + "\n")
    f.close()
def sysuser():
    user = os.getenv("username")

def systeminfo():
    f = open("C:\\Users\Public\System-Information.txt", "w")
    time = datetime.datetime.now()
    proarchi = os.getenv('PROCESSOR_ARCHITECTURE')
    f.write(f"This System information Generated in: {time} By SysDBG Library.\n")
    f.write("\n-----------------------------------------------------------\n")
    user = os.getenv("Username")
    f.write(f"Username: {user}\n")
    f.write(f"Processor: {platform.processor()}\n")
    f.write(f"Operating System: {platform.platform()}\n")
    f.write(f"HOMEGROUP: {platform.node()}\n")
    f.write(f"Proccessor Architecture: {proarchi}\n")
    f.write(f"Total RAM: {psutil.virtual_memory().total / 1024 / 1024 / 1024:.2f} GB\n")
    f.write(f"System UUID (Same as Device ID): {uuid}\n")
    f.write(f"CPU Cores: Physical: {psutil.cpu_count(logical=False)} - Logical: {psutil.cpu_count(logical=True)}\n")
    sys = wmi.WMI()
    f.write("Processor (GPU) ID Number: "+ sys.Win32_VideoController()[0].deviceid + "\n")
    f.write("Processor (GPU) -INFSECTION-: " + sys.Win32_VideoController()[0].infsection + "\n")
    f.write("Processor (GPU) Name: " + sys.Win32_VideoController()[0].caption + "\n")
    f.write("Processor (GPU) Driver Version: " + sys.Win32_VideoController()[0].driverversion + "\n")
    f.write("Processor (CPU) Name: " + sys.Win32_Processor()[0].name + "\n")
    f.write("System Serial Number: " + serialnum + "\n")
    f.write(f"RAM usage in now: {psutil.virtual_memory().percent}%" + "\n")
    hostname = socket.gethostname()
    req = requests.get("http://ip-api.com/json/").json()
    f.write(f"IP Address: " + "Private: " + socket.gethostbyname(hostname) + " - Public: " + req['query'])
    f.write("\n")
    f.write("\n")
    f.write("This log file was Generated with version 1.0 of Logger, in the feautre it wil log more information.")