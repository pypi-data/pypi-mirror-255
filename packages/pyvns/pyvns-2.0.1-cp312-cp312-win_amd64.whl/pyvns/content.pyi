from _typeshed import Incomplete
from typing import Any

class _Next:
    type: Incomplete
    target: Incomplete
    def __init__(self, _data: dict[str, Any] | None) -> None: ...
    def to_dict(self) -> dict[str, str | list[dict[str, str]]]: ...
    def is_null(self) -> bool: ...

class Content:
    __id: Incomplete
    background_image: Incomplete
    background_music: Incomplete
    character_images: Incomplete
    contents: Incomplete
    narrator: Incomplete
    previous: Incomplete
    next: Incomplete
    comments: Incomplete
    def __init__(self, _data: dict[str, Any], _id: str) -> None: ...
    @property
    def id(self) -> str: ...
    def has_next(self) -> bool: ...
    def to_dict(self) -> dict[str, Any]: ...

class ContentManager:
    __dialog_data: Incomplete
    __section: str
    __id: str
    __current: Incomplete
    __last: Incomplete
    __previous: Incomplete
    def __init__(self) -> None: ...
    def __refresh_current(self) -> None: ...
    @property
    def previous(self) -> Content | None: ...
    @property
    def current(self) -> Content: ...
    @property
    def last(self) -> Content | None: ...
    def save(self) -> None: ...
    def is_empty(self) -> bool: ...
    def clear(self) -> None: ...
    def update(self, _data: dict[str, dict[str, dict[str, Any]]]) -> None: ...
    def get(self) -> dict[str, dict[str, dict[str, dict[str, Any]]]]: ...
    def get_id(self) -> str: ...
    def set_id(self, _id: str) -> None: ...
    def get_section(self) -> str: ...
    def __get_section(self, _section: str | None) -> str: ...
    def set_section(self, _section: str) -> None: ...
    def remove_section(self, _id: str | None = None) -> None: ...
    def get_section_content(self, _section: str | None = None) -> dict[str, dict[str, Any]]: ...
    def set_section_content(self, _data: dict[str, dict[str, Any]], _section: str | None = None) -> None: ...
    def get_dialog(self, _section: str | None = None, _id: str | None = None) -> dict[str, Any]: ...
    def remove_dialog(self, _section: str | None = None, _id: str | None = None) -> None: ...
