non-fluents grid_2x2_NEMA8 {
    domain = BLX_model;

    objects {
        intersection : {i0, i1, i2, i3, s0, s1, s2, s3, s4, s5, s6, s7};
        phase        : {p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23, p24, p25, p26, p27, p28, p29, p30, p31};
        action-token : {a0, a1, a2, a3, a4};
        time         : {t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24};
    };

    non-fluents {
        //action token enumeration
        ACTION-TOKEN-INDEX(a0) = 0;
        ACTION-TOKEN-INDEX(a1) = 1;
        ACTION-TOKEN-INDEX(a2) = 2;
        ACTION-TOKEN-INDEX(a3) = 3;
        ACTION-TOKEN-INDEX(a4) = 4;

        // cartesian coordinates
        X(s0) = 294.0;    Y(s0) = 766.0;
        X(s1) = 495.0;    Y(s1) = 766.0;
        X(s7) = 0.0;    Y(s7) = 447.0;
        X(i0) = 294.0;    Y(i0) = 447.0;
        X(i1) = 495.0;    Y(i1) = 447.0;
        X(s2) = 799.0;    Y(s2) = 447.0;
        X(s6) = 0.0;    Y(s6) = 280.0;
        X(i2) = 294.0;    Y(i2) = 280.0;
        X(i3) = 495.0;    Y(i3) = 280.0;
        X(s3) = 799.0;    Y(s3) = 280.0;
        X(s5) = 294.0;    Y(s5) = 0.0;
        X(s4) = 495.0;    Y(s4) = 0.0;

        // intersection indices
        INTERSECTION-INDEX(i0) = 0;
        INTERSECTION-INDEX(i1) = 1;
        INTERSECTION-INDEX(i2) = 2;
        INTERSECTION-INDEX(i3) = 3;
        INTERSECTION-INDEX(s0) = 4;
        INTERSECTION-INDEX(s1) = 5;
        INTERSECTION-INDEX(s2) = 6;
        INTERSECTION-INDEX(s3) = 7;
        INTERSECTION-INDEX(s4) = 8;
        INTERSECTION-INDEX(s5) = 9;
        INTERSECTION-INDEX(s6) = 10;
        INTERSECTION-INDEX(s7) = 11;

        // source intersections
        SOURCE(s0) = true;
        SOURCE(s1) = true;
        SOURCE(s2) = true;
        SOURCE(s3) = true;
        SOURCE(s4) = true;
        SOURCE(s5) = true;
        SOURCE(s6) = true;
        SOURCE(s7) = true;
        // sink intersections
        SINK(s0) = true;
        SINK(s1) = true;
        SINK(s2) = true;
        SINK(s3) = true;
        SINK(s4) = true;
        SINK(s5) = true;
        SINK(s6) = true;
        SINK(s7) = true;
        // traffic lights
        TL(i0) = true;
        TL(i1) = true;
        TL(i2) = true;
        TL(i3) = true;

        // arrival rates
        ARRIVAL-RATE(s0) = 0.53;
        ARRIVAL-RATE(s1) = 0.25;
        ARRIVAL-RATE(s2) = 0.25;
        ARRIVAL-RATE(s3) = 0.43;
        ARRIVAL-RATE(s4) = 0.51;
        ARRIVAL-RATE(s5) = 0.4;
        ARRIVAL-RATE(s6) = 0.4;
        ARRIVAL-RATE(s7) = 0.41;

        // roads between intersections
        LINK(i0,s0) = true;
        LINK(s0,i0) = true;
        LINK(i0,i1) = true;
        LINK(i1,i0) = true;
        LINK(i0,i2) = true;
        LINK(i2,i0) = true;
        LINK(i0,s7) = true;
        LINK(s7,i0) = true;
        LINK(i1,s1) = true;
        LINK(s1,i1) = true;
        LINK(i1,s2) = true;
        LINK(s2,i1) = true;
        LINK(i1,i3) = true;
        LINK(i3,i1) = true;
        LINK(i1,i0) = true;
        LINK(i0,i1) = true;
        LINK(i2,i0) = true;
        LINK(i0,i2) = true;
        LINK(i2,i3) = true;
        LINK(i3,i2) = true;
        LINK(i2,s5) = true;
        LINK(s5,i2) = true;
        LINK(i2,s6) = true;
        LINK(s6,i2) = true;
        LINK(i3,i1) = true;
        LINK(i1,i3) = true;
        LINK(i3,s3) = true;
        LINK(s3,i3) = true;
        LINK(i3,s4) = true;
        LINK(s4,i3) = true;
        LINK(i3,i2) = true;
        LINK(i2,i3) = true;

        // number of lanes
        Nl(i0,s0) = 4;
        Nl(s0,i0) = 4;
        Nl(i0,i1) = 4;
        Nl(i1,i0) = 4;
        Nl(i0,i2) = 4;
        Nl(i2,i0) = 4;
        Nl(i0,s7) = 4;
        Nl(s7,i0) = 4;
        Nl(i1,s1) = 4;
        Nl(s1,i1) = 4;
        Nl(i1,s2) = 4;
        Nl(s2,i1) = 4;
        Nl(i1,i3) = 4;
        Nl(i3,i1) = 4;
        Nl(i1,i0) = 4;
        Nl(i0,i1) = 4;
        Nl(i2,i0) = 4;
        Nl(i0,i2) = 4;
        Nl(i2,i3) = 4;
        Nl(i3,i2) = 4;
        Nl(i2,s5) = 4;
        Nl(s5,i2) = 4;
        Nl(i2,s6) = 4;
        Nl(s6,i2) = 4;
        Nl(i3,i1) = 4;
        Nl(i1,i3) = 4;
        Nl(i3,s3) = 4;
        Nl(s3,i3) = 4;
        Nl(i3,s4) = 4;
        Nl(s4,i3) = 4;
        Nl(i3,i2) = 4;
        Nl(i2,i3) = 4;

        // satflow rates
        MU(s7,i0,s0) = 1.06;
        MU(s7,i0,i1) = 0.53;
        MU(s7,i0,i2) = 0.53;
        MU(i1,i0,s7) = 1.06;
        MU(s0,i0,i1) = 0.53;
        MU(i2,i0,i1) = 0.53;
        MU(i1,i0,i2) = 1.06;
        MU(s0,i0,i2) = 0.53;
        MU(i1,i0,s0) = 0.53;
        MU(i2,i0,s0) = 1.06;
        MU(i2,i0,s7) = 0.53;
        MU(s0,i0,s7) = 0.53;
        MU(i0,i1,s1) = 1.06;
        MU(i0,i1,s2) = 0.53;
        MU(i0,i1,i3) = 0.53;
        MU(s2,i1,i0) = 1.06;
        MU(s1,i1,s2) = 0.53;
        MU(i3,i1,s2) = 0.53;
        MU(s1,i1,i3) = 1.06;
        MU(s2,i1,i3) = 0.53;
        MU(s2,i1,s1) = 0.53;
        MU(i3,i1,s1) = 1.06;
        MU(i3,i1,i0) = 0.53;
        MU(s1,i1,i0) = 0.53;
        MU(s6,i2,i3) = 1.06;
        MU(s6,i2,i0) = 0.53;
        MU(s6,i2,s5) = 0.53;
        MU(i0,i2,i3) = 1.06;
        MU(i3,i2,s6) = 0.53;
        MU(s5,i2,i3) = 0.53;
        MU(i0,i2,s5) = 1.06;
        MU(i3,i2,s5) = 0.53;
        MU(i3,i2,i0) = 0.53;
        MU(s5,i2,i0) = 1.06;
        MU(s5,i2,s6) = 0.53;
        MU(i0,i2,s6) = 0.53;
        MU(i2,i3,s3) = 1.06;
        MU(i2,i3,i1) = 0.53;
        MU(i2,i3,s4) = 0.53;
        MU(s3,i3,i2) = 1.06;
        MU(i1,i3,s3) = 0.53;
        MU(s4,i3,s3) = 0.53;
        MU(i1,i3,s4) = 1.06;
        MU(s3,i3,s4) = 0.53;
        MU(s3,i3,i1) = 0.53;
        MU(s4,i3,i2) = 1.06;
        MU(s4,i3,i1) = 0.53;
        MU(i1,i3,i2) = 0.53;

        // turn probs
        BETA(s7,i0,s0) = 0.5669549454343548;
        BETA(s7,i0,i1) = 0.1830450545656453;
        BETA(s7,i0,i2) = 0.24999999999999994;
        BETA(i1,i0,s7) = 0.56271013351895;
        BETA(s0,i0,i1) = 0.18728986648105;
        BETA(i2,i0,i1) = 0.24999999999999994;
        BETA(i1,i0,i2) = 0.5837159201745213;
        BETA(s0,i0,i2) = 0.16628407982547866;
        BETA(i1,i0,s0) = 0.25;
        BETA(i2,i0,s0) = 0.5878927385916378;
        BETA(i2,i0,s7) = 0.16210726140836215;
        BETA(s0,i0,s7) = 0.25;
        BETA(i0,i1,s1) = 0.4328719303554678;
        BETA(i0,i1,s2) = 0.3171280696445322;
        BETA(i0,i1,i3) = 0.25;
        BETA(s2,i1,i0) = 0.5041209407655739;
        BETA(s1,i1,s2) = 0.24587905923442605;
        BETA(i3,i1,s2) = 0.25000000000000006;
        BETA(s1,i1,i3) = 0.4748299808546998;
        BETA(s2,i1,i3) = 0.2751700191453002;
        BETA(s2,i1,s1) = 0.24999999999999994;
        BETA(i3,i1,s1) = 0.5953891885791486;
        BETA(i3,i1,i0) = 0.1546108114208514;
        BETA(s1,i1,i0) = 0.25;
        BETA(s6,i2,i3) = 0.5015229170539783;
        BETA(s6,i2,i0) = 0.2484770829460216;
        BETA(s6,i2,s5) = 0.25000000000000006;
        BETA(i0,i2,i3) = 0.41245635547443227;
        BETA(i3,i2,s6) = 0.33754364452556773;
        BETA(s5,i2,i3) = 0.25;
        BETA(i0,i2,s5) = 0.4154723857947966;
        BETA(i3,i2,s5) = 0.3345276142052034;
        BETA(i3,i2,i0) = 0.25;
        BETA(s5,i2,i0) = 0.48680252407471186;
        BETA(s5,i2,s6) = 0.26319747592528814;
        BETA(i0,i2,s6) = 0.25000000000000006;
        BETA(i2,i3,s3) = 0.5791370787072548;
        BETA(i2,i3,i1) = 0.17086292129274516;
        BETA(i2,i3,s4) = 0.25;
        BETA(s3,i3,i2) = 0.5072718692554518;
        BETA(i1,i3,s3) = 0.2427281307445482;
        BETA(s4,i3,s3) = 0.25000000000000006;
        BETA(i1,i3,s4) = 0.506553878123514;
        BETA(s3,i3,s4) = 0.24344612187648595;
        BETA(s3,i3,i1) = 0.25;
        BETA(s4,i3,i2) = 0.5107784990991527;
        BETA(s4,i3,i1) = 0.23922150090084732;
        BETA(i1,i3,i2) = 0.24999999999999994;

        // NEMA8 scheme for intersection i0,s0,i1,i2,s7
        NUM-ACTION-TOKENS(i0) = 5;
        PHASE-INDEX(p0) = 0;
        PHASE-INDEX(p1) = 1;
        PHASE-INDEX(p2) = 2;
        PHASE-INDEX(p3) = 3;
        PHASE-INDEX(p4) = 4;
        PHASE-INDEX(p5) = 5;
        PHASE-INDEX(p6) = 6;
        PHASE-INDEX(p7) = 7;
        PHASE-OF(p0,i0) = true;
        PHASE-OF(p1,i0) = true;
        PHASE-OF(p2,i0) = true;
        PHASE-OF(p3,i0) = true;
        PHASE-OF(p4,i0) = true;
        PHASE-OF(p5,i0) = true;
        PHASE-OF(p6,i0) = true;
        PHASE-OF(p7,i0) = true;
        GREEN(s0,i0,i1,p0) = true;
        GREEN(i2,i0,s7,p0) = true;
        GREEN(s0,i0,i1,p1) = true;
        GREEN(s0,i0,i2,p1) = true;
        GREEN(i2,i0,s0,p2) = true;
        GREEN(i2,i0,s7,p2) = true;
        GREEN(s0,i0,i2,p3) = true;
        GREEN(i2,i0,s0,p3) = true;
        GREEN(s7,i0,s0,p4) = true;
        GREEN(i1,i0,i2,p4) = true;
        GREEN(i1,i0,s7,p5) = true;
        GREEN(i1,i0,i2,p5) = true;
        GREEN(s7,i0,s0,p6) = true;
        GREEN(s7,i0,i1,p6) = true;
        GREEN(i1,i0,s7,p7) = true;
        GREEN(s7,i0,i1,p7) = true;
        GREEN(s0,i0,s7,p0)=true; GREEN(s0,i0,s7,p1)=true;
        GREEN(s0,i0,s7,p2)=true; GREEN(s0,i0,s7,p3)=true;
        GREEN(s0,i0,s7,p4)=true; GREEN(s0,i0,s7,p5)=true;
        GREEN(s0,i0,s7,p6)=true; GREEN(s0,i0,s7,p7)=true;
        GREEN(s7,i0,i2,p0)=true; GREEN(s7,i0,i2,p1)=true;
        GREEN(s7,i0,i2,p2)=true; GREEN(s7,i0,i2,p3)=true;
        GREEN(s7,i0,i2,p4)=true; GREEN(s7,i0,i2,p5)=true;
        GREEN(s7,i0,i2,p6)=true; GREEN(s7,i0,i2,p7)=true;
        GREEN(i2,i0,i1,p0)=true; GREEN(i2,i0,i1,p1)=true;
        GREEN(i2,i0,i1,p2)=true; GREEN(i2,i0,i1,p3)=true;
        GREEN(i2,i0,i1,p4)=true; GREEN(i2,i0,i1,p5)=true;
        GREEN(i2,i0,i1,p6)=true; GREEN(i2,i0,i1,p7)=true;
        GREEN(i1,i0,s0,p0)=true; GREEN(i1,i0,s0,p1)=true;
        GREEN(i1,i0,s0,p2)=true; GREEN(i1,i0,s0,p3)=true;
        GREEN(i1,i0,s0,p4)=true; GREEN(i1,i0,s0,p5)=true;
        GREEN(i1,i0,s0,p6)=true; GREEN(i1,i0,s0,p7)=true;
        TRANSITION(p0,a0) = 0;
        TRANSITION(p0,a1) = 1;
        TRANSITION(p0,a2) = 2;
        TRANSITION(p0,a3) = 3;
        TRANSITION(p1,a0) = 1;
        TRANSITION(p1,a1) = 3;
        TRANSITION(p2,a0) = 2;
        TRANSITION(p2,a1) = 3;
        TRANSITION(p3,a0) = 3;
        TRANSITION(p3,a1) = 4;
        TRANSITION(p3,a2) = 5;
        TRANSITION(p3,a3) = 6;
        TRANSITION(p3,a4) = 7;
        TRANSITION(p4,a0) = 4;
        TRANSITION(p4,a1) = 5;
        TRANSITION(p4,a2) = 6;
        TRANSITION(p4,a3) = 7;
        TRANSITION(p5,a0) = 5;
        TRANSITION(p5,a1) = 7;
        TRANSITION(p6,a0) = 6;
        TRANSITION(p6,a1) = 7;
        TRANSITION(p7,a0) = 7;
        TRANSITION(p7,a1) = 0;
        TRANSITION(p7,a2) = 1;
        TRANSITION(p7,a3) = 2;
        TRANSITION(p7,a4) = 3;
        PHASE-MIN(p0) = 6;
        PHASE-MIN(p1) = 6;
        PHASE-MIN(p2) = 6;
        PHASE-MIN(p3) = 6;
        PHASE-MIN(p4) = 6;
        PHASE-MIN(p5) = 6;
        PHASE-MIN(p6) = 6;
        PHASE-MIN(p7) = 6;
        PHASE-MAX(p0) = 60;
        PHASE-MAX(p1) = 60;
        PHASE-MAX(p2) = 60;
        PHASE-MAX(p3) = 60;
        PHASE-MAX(p4) = 60;
        PHASE-MAX(p5) = 60;
        PHASE-MAX(p6) = 60;
        PHASE-MAX(p7) = 60;
        PHASE-ALL-RED-DUR(p0) = 2;
        PHASE-ALL-RED-DUR(p1) = 2;
        PHASE-ALL-RED-DUR(p2) = 2;
        PHASE-ALL-RED-DUR(p3) = 4;
        PHASE-ALL-RED-DUR(p4) = 2;
        PHASE-ALL-RED-DUR(p5) = 2;
        PHASE-ALL-RED-DUR(p6) = 2;
        PHASE-ALL-RED-DUR(p7) = 4;
        //DONE NEMA8 scheme for intersection i0,s0,i1,i2,s7

        // NEMA8 scheme for intersection i1,s1,s2,i3,i0
        NUM-ACTION-TOKENS(i1) = 5;
        PHASE-INDEX(p8) = 0;
        PHASE-INDEX(p9) = 1;
        PHASE-INDEX(p10) = 2;
        PHASE-INDEX(p11) = 3;
        PHASE-INDEX(p12) = 4;
        PHASE-INDEX(p13) = 5;
        PHASE-INDEX(p14) = 6;
        PHASE-INDEX(p15) = 7;
        PHASE-OF(p8,i1) = true;
        PHASE-OF(p9,i1) = true;
        PHASE-OF(p10,i1) = true;
        PHASE-OF(p11,i1) = true;
        PHASE-OF(p12,i1) = true;
        PHASE-OF(p13,i1) = true;
        PHASE-OF(p14,i1) = true;
        PHASE-OF(p15,i1) = true;
        GREEN(s1,i1,s2,p8) = true;
        GREEN(i3,i1,i0,p8) = true;
        GREEN(s1,i1,s2,p9) = true;
        GREEN(s1,i1,i3,p9) = true;
        GREEN(i3,i1,s1,p10) = true;
        GREEN(i3,i1,i0,p10) = true;
        GREEN(s1,i1,i3,p11) = true;
        GREEN(i3,i1,s1,p11) = true;
        GREEN(i0,i1,s1,p12) = true;
        GREEN(s2,i1,i3,p12) = true;
        GREEN(s2,i1,i0,p13) = true;
        GREEN(s2,i1,i3,p13) = true;
        GREEN(i0,i1,s1,p14) = true;
        GREEN(i0,i1,s2,p14) = true;
        GREEN(s2,i1,i0,p15) = true;
        GREEN(i0,i1,s2,p15) = true;
        GREEN(s1,i1,i0,p8)=true; GREEN(s1,i1,i0,p9)=true;
        GREEN(s1,i1,i0,p10)=true; GREEN(s1,i1,i0,p11)=true;
        GREEN(s1,i1,i0,p12)=true; GREEN(s1,i1,i0,p13)=true;
        GREEN(s1,i1,i0,p14)=true; GREEN(s1,i1,i0,p15)=true;
        GREEN(i0,i1,i3,p8)=true; GREEN(i0,i1,i3,p9)=true;
        GREEN(i0,i1,i3,p10)=true; GREEN(i0,i1,i3,p11)=true;
        GREEN(i0,i1,i3,p12)=true; GREEN(i0,i1,i3,p13)=true;
        GREEN(i0,i1,i3,p14)=true; GREEN(i0,i1,i3,p15)=true;
        GREEN(i3,i1,s2,p8)=true; GREEN(i3,i1,s2,p9)=true;
        GREEN(i3,i1,s2,p10)=true; GREEN(i3,i1,s2,p11)=true;
        GREEN(i3,i1,s2,p12)=true; GREEN(i3,i1,s2,p13)=true;
        GREEN(i3,i1,s2,p14)=true; GREEN(i3,i1,s2,p15)=true;
        GREEN(s2,i1,s1,p8)=true; GREEN(s2,i1,s1,p9)=true;
        GREEN(s2,i1,s1,p10)=true; GREEN(s2,i1,s1,p11)=true;
        GREEN(s2,i1,s1,p12)=true; GREEN(s2,i1,s1,p13)=true;
        GREEN(s2,i1,s1,p14)=true; GREEN(s2,i1,s1,p15)=true;
        TRANSITION(p8,a0) = 0;
        TRANSITION(p8,a1) = 1;
        TRANSITION(p8,a2) = 2;
        TRANSITION(p8,a3) = 3;
        TRANSITION(p9,a0) = 1;
        TRANSITION(p9,a1) = 3;
        TRANSITION(p10,a0) = 2;
        TRANSITION(p10,a1) = 3;
        TRANSITION(p11,a0) = 3;
        TRANSITION(p11,a1) = 4;
        TRANSITION(p11,a2) = 5;
        TRANSITION(p11,a3) = 6;
        TRANSITION(p11,a4) = 7;
        TRANSITION(p12,a0) = 4;
        TRANSITION(p12,a1) = 5;
        TRANSITION(p12,a2) = 6;
        TRANSITION(p12,a3) = 7;
        TRANSITION(p13,a0) = 5;
        TRANSITION(p13,a1) = 7;
        TRANSITION(p14,a0) = 6;
        TRANSITION(p14,a1) = 7;
        TRANSITION(p15,a0) = 7;
        TRANSITION(p15,a1) = 0;
        TRANSITION(p15,a2) = 1;
        TRANSITION(p15,a3) = 2;
        TRANSITION(p15,a4) = 3;
        PHASE-MIN(p8) = 6;
        PHASE-MIN(p9) = 6;
        PHASE-MIN(p10) = 6;
        PHASE-MIN(p11) = 6;
        PHASE-MIN(p12) = 6;
        PHASE-MIN(p13) = 6;
        PHASE-MIN(p14) = 6;
        PHASE-MIN(p15) = 6;
        PHASE-MAX(p8) = 60;
        PHASE-MAX(p9) = 60;
        PHASE-MAX(p10) = 60;
        PHASE-MAX(p11) = 60;
        PHASE-MAX(p12) = 60;
        PHASE-MAX(p13) = 60;
        PHASE-MAX(p14) = 60;
        PHASE-MAX(p15) = 60;
        PHASE-ALL-RED-DUR(p8) = 2;
        PHASE-ALL-RED-DUR(p9) = 2;
        PHASE-ALL-RED-DUR(p10) = 2;
        PHASE-ALL-RED-DUR(p11) = 4;
        PHASE-ALL-RED-DUR(p12) = 2;
        PHASE-ALL-RED-DUR(p13) = 2;
        PHASE-ALL-RED-DUR(p14) = 2;
        PHASE-ALL-RED-DUR(p15) = 4;
        //DONE NEMA8 scheme for intersection i1,s1,s2,i3,i0

        // NEMA8 scheme for intersection i2,i0,i3,s5,s6
        NUM-ACTION-TOKENS(i2) = 5;
        PHASE-INDEX(p16) = 0;
        PHASE-INDEX(p17) = 1;
        PHASE-INDEX(p18) = 2;
        PHASE-INDEX(p19) = 3;
        PHASE-INDEX(p20) = 4;
        PHASE-INDEX(p21) = 5;
        PHASE-INDEX(p22) = 6;
        PHASE-INDEX(p23) = 7;
        PHASE-OF(p16,i2) = true;
        PHASE-OF(p17,i2) = true;
        PHASE-OF(p18,i2) = true;
        PHASE-OF(p19,i2) = true;
        PHASE-OF(p20,i2) = true;
        PHASE-OF(p21,i2) = true;
        PHASE-OF(p22,i2) = true;
        PHASE-OF(p23,i2) = true;
        GREEN(i0,i2,i3,p16) = true;
        GREEN(s5,i2,s6,p16) = true;
        GREEN(i0,i2,i3,p17) = true;
        GREEN(i0,i2,s5,p17) = true;
        GREEN(s5,i2,i0,p18) = true;
        GREEN(s5,i2,s6,p18) = true;
        GREEN(i0,i2,s5,p19) = true;
        GREEN(s5,i2,i0,p19) = true;
        GREEN(s6,i2,i0,p20) = true;
        GREEN(i3,i2,s5,p20) = true;
        GREEN(i3,i2,s6,p21) = true;
        GREEN(i3,i2,s5,p21) = true;
        GREEN(s6,i2,i0,p22) = true;
        GREEN(s6,i2,i3,p22) = true;
        GREEN(i3,i2,s6,p23) = true;
        GREEN(s6,i2,i3,p23) = true;
        GREEN(i0,i2,s6,p16)=true; GREEN(i0,i2,s6,p17)=true;
        GREEN(i0,i2,s6,p18)=true; GREEN(i0,i2,s6,p19)=true;
        GREEN(i0,i2,s6,p20)=true; GREEN(i0,i2,s6,p21)=true;
        GREEN(i0,i2,s6,p22)=true; GREEN(i0,i2,s6,p23)=true;
        GREEN(s6,i2,s5,p16)=true; GREEN(s6,i2,s5,p17)=true;
        GREEN(s6,i2,s5,p18)=true; GREEN(s6,i2,s5,p19)=true;
        GREEN(s6,i2,s5,p20)=true; GREEN(s6,i2,s5,p21)=true;
        GREEN(s6,i2,s5,p22)=true; GREEN(s6,i2,s5,p23)=true;
        GREEN(s5,i2,i3,p16)=true; GREEN(s5,i2,i3,p17)=true;
        GREEN(s5,i2,i3,p18)=true; GREEN(s5,i2,i3,p19)=true;
        GREEN(s5,i2,i3,p20)=true; GREEN(s5,i2,i3,p21)=true;
        GREEN(s5,i2,i3,p22)=true; GREEN(s5,i2,i3,p23)=true;
        GREEN(i3,i2,i0,p16)=true; GREEN(i3,i2,i0,p17)=true;
        GREEN(i3,i2,i0,p18)=true; GREEN(i3,i2,i0,p19)=true;
        GREEN(i3,i2,i0,p20)=true; GREEN(i3,i2,i0,p21)=true;
        GREEN(i3,i2,i0,p22)=true; GREEN(i3,i2,i0,p23)=true;
        TRANSITION(p16,a0) = 0;
        TRANSITION(p16,a1) = 1;
        TRANSITION(p16,a2) = 2;
        TRANSITION(p16,a3) = 3;
        TRANSITION(p17,a0) = 1;
        TRANSITION(p17,a1) = 3;
        TRANSITION(p18,a0) = 2;
        TRANSITION(p18,a1) = 3;
        TRANSITION(p19,a0) = 3;
        TRANSITION(p19,a1) = 4;
        TRANSITION(p19,a2) = 5;
        TRANSITION(p19,a3) = 6;
        TRANSITION(p19,a4) = 7;
        TRANSITION(p20,a0) = 4;
        TRANSITION(p20,a1) = 5;
        TRANSITION(p20,a2) = 6;
        TRANSITION(p20,a3) = 7;
        TRANSITION(p21,a0) = 5;
        TRANSITION(p21,a1) = 7;
        TRANSITION(p22,a0) = 6;
        TRANSITION(p22,a1) = 7;
        TRANSITION(p23,a0) = 7;
        TRANSITION(p23,a1) = 0;
        TRANSITION(p23,a2) = 1;
        TRANSITION(p23,a3) = 2;
        TRANSITION(p23,a4) = 3;
        PHASE-MIN(p16) = 6;
        PHASE-MIN(p17) = 6;
        PHASE-MIN(p18) = 6;
        PHASE-MIN(p19) = 6;
        PHASE-MIN(p20) = 6;
        PHASE-MIN(p21) = 6;
        PHASE-MIN(p22) = 6;
        PHASE-MIN(p23) = 6;
        PHASE-MAX(p16) = 60;
        PHASE-MAX(p17) = 60;
        PHASE-MAX(p18) = 60;
        PHASE-MAX(p19) = 60;
        PHASE-MAX(p20) = 60;
        PHASE-MAX(p21) = 60;
        PHASE-MAX(p22) = 60;
        PHASE-MAX(p23) = 60;
        PHASE-ALL-RED-DUR(p16) = 2;
        PHASE-ALL-RED-DUR(p17) = 2;
        PHASE-ALL-RED-DUR(p18) = 2;
        PHASE-ALL-RED-DUR(p19) = 4;
        PHASE-ALL-RED-DUR(p20) = 2;
        PHASE-ALL-RED-DUR(p21) = 2;
        PHASE-ALL-RED-DUR(p22) = 2;
        PHASE-ALL-RED-DUR(p23) = 4;
        //DONE NEMA8 scheme for intersection i2,i0,i3,s5,s6

        // NEMA8 scheme for intersection i3,i1,s3,s4,i2
        NUM-ACTION-TOKENS(i3) = 5;
        PHASE-INDEX(p24) = 0;
        PHASE-INDEX(p25) = 1;
        PHASE-INDEX(p26) = 2;
        PHASE-INDEX(p27) = 3;
        PHASE-INDEX(p28) = 4;
        PHASE-INDEX(p29) = 5;
        PHASE-INDEX(p30) = 6;
        PHASE-INDEX(p31) = 7;
        PHASE-OF(p24,i3) = true;
        PHASE-OF(p25,i3) = true;
        PHASE-OF(p26,i3) = true;
        PHASE-OF(p27,i3) = true;
        PHASE-OF(p28,i3) = true;
        PHASE-OF(p29,i3) = true;
        PHASE-OF(p30,i3) = true;
        PHASE-OF(p31,i3) = true;
        GREEN(i1,i3,s3,p24) = true;
        GREEN(s4,i3,i2,p24) = true;
        GREEN(i1,i3,s3,p25) = true;
        GREEN(i1,i3,s4,p25) = true;
        GREEN(s4,i3,i1,p26) = true;
        GREEN(s4,i3,i2,p26) = true;
        GREEN(i1,i3,s4,p27) = true;
        GREEN(s4,i3,i1,p27) = true;
        GREEN(i2,i3,i1,p28) = true;
        GREEN(s3,i3,s4,p28) = true;
        GREEN(s3,i3,i2,p29) = true;
        GREEN(s3,i3,s4,p29) = true;
        GREEN(i2,i3,i1,p30) = true;
        GREEN(i2,i3,s3,p30) = true;
        GREEN(s3,i3,i2,p31) = true;
        GREEN(i2,i3,s3,p31) = true;
        GREEN(i1,i3,i2,p24)=true; GREEN(i1,i3,i2,p25)=true;
        GREEN(i1,i3,i2,p26)=true; GREEN(i1,i3,i2,p27)=true;
        GREEN(i1,i3,i2,p28)=true; GREEN(i1,i3,i2,p29)=true;
        GREEN(i1,i3,i2,p30)=true; GREEN(i1,i3,i2,p31)=true;
        GREEN(i2,i3,s4,p24)=true; GREEN(i2,i3,s4,p25)=true;
        GREEN(i2,i3,s4,p26)=true; GREEN(i2,i3,s4,p27)=true;
        GREEN(i2,i3,s4,p28)=true; GREEN(i2,i3,s4,p29)=true;
        GREEN(i2,i3,s4,p30)=true; GREEN(i2,i3,s4,p31)=true;
        GREEN(s4,i3,s3,p24)=true; GREEN(s4,i3,s3,p25)=true;
        GREEN(s4,i3,s3,p26)=true; GREEN(s4,i3,s3,p27)=true;
        GREEN(s4,i3,s3,p28)=true; GREEN(s4,i3,s3,p29)=true;
        GREEN(s4,i3,s3,p30)=true; GREEN(s4,i3,s3,p31)=true;
        GREEN(s3,i3,i1,p24)=true; GREEN(s3,i3,i1,p25)=true;
        GREEN(s3,i3,i1,p26)=true; GREEN(s3,i3,i1,p27)=true;
        GREEN(s3,i3,i1,p28)=true; GREEN(s3,i3,i1,p29)=true;
        GREEN(s3,i3,i1,p30)=true; GREEN(s3,i3,i1,p31)=true;
        TRANSITION(p24,a0) = 0;
        TRANSITION(p24,a1) = 1;
        TRANSITION(p24,a2) = 2;
        TRANSITION(p24,a3) = 3;
        TRANSITION(p25,a0) = 1;
        TRANSITION(p25,a1) = 3;
        TRANSITION(p26,a0) = 2;
        TRANSITION(p26,a1) = 3;
        TRANSITION(p27,a0) = 3;
        TRANSITION(p27,a1) = 4;
        TRANSITION(p27,a2) = 5;
        TRANSITION(p27,a3) = 6;
        TRANSITION(p27,a4) = 7;
        TRANSITION(p28,a0) = 4;
        TRANSITION(p28,a1) = 5;
        TRANSITION(p28,a2) = 6;
        TRANSITION(p28,a3) = 7;
        TRANSITION(p29,a0) = 5;
        TRANSITION(p29,a1) = 7;
        TRANSITION(p30,a0) = 6;
        TRANSITION(p30,a1) = 7;
        TRANSITION(p31,a0) = 7;
        TRANSITION(p31,a1) = 0;
        TRANSITION(p31,a2) = 1;
        TRANSITION(p31,a3) = 2;
        TRANSITION(p31,a4) = 3;
        PHASE-MIN(p24) = 6;
        PHASE-MIN(p25) = 6;
        PHASE-MIN(p26) = 6;
        PHASE-MIN(p27) = 6;
        PHASE-MIN(p28) = 6;
        PHASE-MIN(p29) = 6;
        PHASE-MIN(p30) = 6;
        PHASE-MIN(p31) = 6;
        PHASE-MAX(p24) = 60;
        PHASE-MAX(p25) = 60;
        PHASE-MAX(p26) = 60;
        PHASE-MAX(p27) = 60;
        PHASE-MAX(p28) = 60;
        PHASE-MAX(p29) = 60;
        PHASE-MAX(p30) = 60;
        PHASE-MAX(p31) = 60;
        PHASE-ALL-RED-DUR(p24) = 2;
        PHASE-ALL-RED-DUR(p25) = 2;
        PHASE-ALL-RED-DUR(p26) = 2;
        PHASE-ALL-RED-DUR(p27) = 4;
        PHASE-ALL-RED-DUR(p28) = 2;
        PHASE-ALL-RED-DUR(p29) = 2;
        PHASE-ALL-RED-DUR(p30) = 2;
        PHASE-ALL-RED-DUR(p31) = 4;
        //DONE NEMA8 scheme for intersection i3,i1,s3,s4,i2

        // time-delay properties
        TIME-HEAD(t0) = true;
        TIME-TAIL(t24) = true;
        TIME-VAL(t0) = 0;
        TIME-VAL(t1) = 1;
        TIME-VAL(t2) = 2;
        TIME-VAL(t3) = 3;
        TIME-VAL(t4) = 4;
        TIME-VAL(t5) = 5;
        TIME-VAL(t6) = 6;
        TIME-VAL(t7) = 7;
        TIME-VAL(t8) = 8;
        TIME-VAL(t9) = 9;
        TIME-VAL(t10) = 10;
        TIME-VAL(t11) = 11;
        TIME-VAL(t12) = 12;
        TIME-VAL(t13) = 13;
        TIME-VAL(t14) = 14;
        TIME-VAL(t15) = 15;
        TIME-VAL(t16) = 16;
        TIME-VAL(t17) = 17;
        TIME-VAL(t18) = 18;
        TIME-VAL(t19) = 19;
        TIME-VAL(t20) = 20;
        TIME-VAL(t21) = 21;
        TIME-VAL(t22) = 22;
        TIME-VAL(t23) = 23;
        TIME-VAL(t24) = 24;
        NEXT(t0,t1) = true;
        NEXT(t1,t2) = true;
        NEXT(t2,t3) = true;
        NEXT(t3,t4) = true;
        NEXT(t4,t5) = true;
        NEXT(t5,t6) = true;
        NEXT(t6,t7) = true;
        NEXT(t7,t8) = true;
        NEXT(t8,t9) = true;
        NEXT(t9,t10) = true;
        NEXT(t10,t11) = true;
        NEXT(t11,t12) = true;
        NEXT(t12,t13) = true;
        NEXT(t13,t14) = true;
        NEXT(t14,t15) = true;
        NEXT(t15,t16) = true;
        NEXT(t16,t17) = true;
        NEXT(t17,t18) = true;
        NEXT(t18,t19) = true;
        NEXT(t19,t20) = true;
        NEXT(t20,t21) = true;
        NEXT(t21,t22) = true;
        NEXT(t22,t23) = true;
        NEXT(t23,t24) = true;
    };
}

instance grid_2x2_NEMA8{
    domain = BLX_model;
    non-fluents = grid_2x2_NEMA8;
    max-nondef-actions = pos-inf;
    horizon = 200;
    discount = 1.0;
}