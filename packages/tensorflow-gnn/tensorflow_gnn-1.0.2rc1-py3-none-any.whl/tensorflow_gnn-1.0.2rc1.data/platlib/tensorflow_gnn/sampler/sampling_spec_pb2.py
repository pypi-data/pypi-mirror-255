# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tensorflow_gnn/sampler/sampling_spec.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n*tensorflow_gnn/sampler/sampling_spec.proto\x12\x16tensorflow_gnn.sampler\"\xdd\x01\n\x0cSamplingSpec\x12\x31\n\x07seed_op\x18\x01 \x01(\x0b\x32\x1e.tensorflow_gnn.sampler.SeedOpH\x00\x12M\n\x16symmetric_link_seed_op\x18\x05 \x01(\x0b\x32+.tensorflow_gnn.sampler.SymmetricLinkSeedOpH\x00\x12\x38\n\x0csampling_ops\x18\x02 \x03(\x0b\x32\".tensorflow_gnn.sampler.SamplingOpB\x0b\n\tseed_typeJ\x04\x08\x03\x10\x05\"6\n\x06SeedOp\x12\x0f\n\x07op_name\x18\x01 \x01(\t\x12\x15\n\rnode_set_name\x18\x02 \x01(\tJ\x04\x08\x03\x10\x05\"&\n\x13SymmetricLinkSeedOp\x12\x0f\n\x07op_name\x18\x01 \x01(\t\"\xa3\x01\n\nSamplingOp\x12\x0f\n\x07op_name\x18\x01 \x01(\t\x12\x16\n\x0einput_op_names\x18\x02 \x03(\t\x12\x15\n\redge_set_name\x18\x03 \x01(\t\x12\x13\n\x0bsample_size\x18\x04 \x01(\x05\x12:\n\x08strategy\x18\x05 \x01(\x0e\x32(.tensorflow_gnn.sampler.SamplingStrategyJ\x04\x08\x06\x10\x07*F\n\x10SamplingStrategy\x12\t\n\x05TOP_K\x10\x00\x12\x12\n\x0eRANDOM_UNIFORM\x10\x01\x12\x13\n\x0fRANDOM_WEIGHTED\x10\x02')

_SAMPLINGSTRATEGY = DESCRIPTOR.enum_types_by_name['SamplingStrategy']
SamplingStrategy = enum_type_wrapper.EnumTypeWrapper(_SAMPLINGSTRATEGY)
TOP_K = 0
RANDOM_UNIFORM = 1
RANDOM_WEIGHTED = 2


_SAMPLINGSPEC = DESCRIPTOR.message_types_by_name['SamplingSpec']
_SEEDOP = DESCRIPTOR.message_types_by_name['SeedOp']
_SYMMETRICLINKSEEDOP = DESCRIPTOR.message_types_by_name['SymmetricLinkSeedOp']
_SAMPLINGOP = DESCRIPTOR.message_types_by_name['SamplingOp']
SamplingSpec = _reflection.GeneratedProtocolMessageType('SamplingSpec', (_message.Message,), {
  'DESCRIPTOR' : _SAMPLINGSPEC,
  '__module__' : 'tensorflow_gnn.sampler.sampling_spec_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_gnn.sampler.SamplingSpec)
  })
_sym_db.RegisterMessage(SamplingSpec)

SeedOp = _reflection.GeneratedProtocolMessageType('SeedOp', (_message.Message,), {
  'DESCRIPTOR' : _SEEDOP,
  '__module__' : 'tensorflow_gnn.sampler.sampling_spec_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_gnn.sampler.SeedOp)
  })
_sym_db.RegisterMessage(SeedOp)

SymmetricLinkSeedOp = _reflection.GeneratedProtocolMessageType('SymmetricLinkSeedOp', (_message.Message,), {
  'DESCRIPTOR' : _SYMMETRICLINKSEEDOP,
  '__module__' : 'tensorflow_gnn.sampler.sampling_spec_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_gnn.sampler.SymmetricLinkSeedOp)
  })
_sym_db.RegisterMessage(SymmetricLinkSeedOp)

SamplingOp = _reflection.GeneratedProtocolMessageType('SamplingOp', (_message.Message,), {
  'DESCRIPTOR' : _SAMPLINGOP,
  '__module__' : 'tensorflow_gnn.sampler.sampling_spec_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_gnn.sampler.SamplingOp)
  })
_sym_db.RegisterMessage(SamplingOp)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _SAMPLINGSTRATEGY._serialized_start=556
  _SAMPLINGSTRATEGY._serialized_end=626
  _SAMPLINGSPEC._serialized_start=71
  _SAMPLINGSPEC._serialized_end=292
  _SEEDOP._serialized_start=294
  _SEEDOP._serialized_end=348
  _SYMMETRICLINKSEEDOP._serialized_start=350
  _SYMMETRICLINKSEEDOP._serialized_end=388
  _SAMPLINGOP._serialized_start=391
  _SAMPLINGOP._serialized_end=554
# @@protoc_insertion_point(module_scope)
