"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import k8s.io.api.core.v1.generated_pb2
import k8s.io.apimachinery.pkg.api.resource.generated_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class QueueReport(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class ResourcesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> k8s.io.apimachinery.pkg.api.resource.generated_pb2.Quantity: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: k8s.io.apimachinery.pkg.api.resource.generated_pb2.Quantity | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing_extensions.final
    class ResourcesUsedEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> k8s.io.apimachinery.pkg.api.resource.generated_pb2.Quantity: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: k8s.io.apimachinery.pkg.api.resource.generated_pb2.Quantity | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing_extensions.final
    class CountOfPodsByPhaseEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.int
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.int = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    RESOURCES_FIELD_NUMBER: builtins.int
    RESOURCES_USED_FIELD_NUMBER: builtins.int
    COUNT_OF_PODS_BY_PHASE_FIELD_NUMBER: builtins.int
    name: builtins.str
    """Queue name."""
    @property
    def resources(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, k8s.io.apimachinery.pkg.api.resource.generated_pb2.Quantity]:
        """Total resources requested by pods from this queue that are currently running."""
    @property
    def resources_used(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, k8s.io.apimachinery.pkg.api.resource.generated_pb2.Quantity]:
        """Total resources currently being used by all pods from this queue."""
    @property
    def count_of_pods_by_phase(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.int]:
        """For this queue, number of pods by phase (e.g., running)."""
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        resources: collections.abc.Mapping[builtins.str, k8s.io.apimachinery.pkg.api.resource.generated_pb2.Quantity] | None = ...,
        resources_used: collections.abc.Mapping[builtins.str, k8s.io.apimachinery.pkg.api.resource.generated_pb2.Quantity] | None = ...,
        count_of_pods_by_phase: collections.abc.Mapping[builtins.str, builtins.int] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["count_of_pods_by_phase", b"count_of_pods_by_phase", "name", b"name", "resources", b"resources", "resources_used", b"resources_used"]) -> None: ...

global___QueueReport = QueueReport

@typing_extensions.final
class ClusterUsageReport(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class ClusterCapacityEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> k8s.io.apimachinery.pkg.api.resource.generated_pb2.Quantity: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: k8s.io.apimachinery.pkg.api.resource.generated_pb2.Quantity | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing_extensions.final
    class ClusterAvailableCapacityEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> k8s.io.apimachinery.pkg.api.resource.generated_pb2.Quantity: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: k8s.io.apimachinery.pkg.api.resource.generated_pb2.Quantity | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    CLUSTER_ID_FIELD_NUMBER: builtins.int
    POOL_FIELD_NUMBER: builtins.int
    REPORT_TIME_FIELD_NUMBER: builtins.int
    QUEUES_FIELD_NUMBER: builtins.int
    CLUSTER_CAPACITY_FIELD_NUMBER: builtins.int
    CLUSTER_AVAILABLE_CAPACITY_FIELD_NUMBER: builtins.int
    NODE_TYPE_USAGE_REPORTS_FIELD_NUMBER: builtins.int
    cluster_id: builtins.str
    pool: builtins.str
    @property
    def report_time(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def queues(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___QueueReport]: ...
    @property
    def cluster_capacity(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, k8s.io.apimachinery.pkg.api.resource.generated_pb2.Quantity]: ...
    @property
    def cluster_available_capacity(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, k8s.io.apimachinery.pkg.api.resource.generated_pb2.Quantity]: ...
    @property
    def node_type_usage_reports(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___NodeTypeUsageReport]: ...
    def __init__(
        self,
        *,
        cluster_id: builtins.str = ...,
        pool: builtins.str = ...,
        report_time: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        queues: collections.abc.Iterable[global___QueueReport] | None = ...,
        cluster_capacity: collections.abc.Mapping[builtins.str, k8s.io.apimachinery.pkg.api.resource.generated_pb2.Quantity] | None = ...,
        cluster_available_capacity: collections.abc.Mapping[builtins.str, k8s.io.apimachinery.pkg.api.resource.generated_pb2.Quantity] | None = ...,
        node_type_usage_reports: collections.abc.Iterable[global___NodeTypeUsageReport] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["report_time", b"report_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_available_capacity", b"cluster_available_capacity", "cluster_capacity", b"cluster_capacity", "cluster_id", b"cluster_id", "node_type_usage_reports", b"node_type_usage_reports", "pool", b"pool", "queues", b"queues", "report_time", b"report_time"]) -> None: ...

global___ClusterUsageReport = ClusterUsageReport

@typing_extensions.final
class NodeTypeIdentifier(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    TAINTS_FIELD_NUMBER: builtins.int
    id: builtins.str
    @property
    def taints(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[k8s.io.api.core.v1.generated_pb2.Taint]: ...
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        taints: collections.abc.Iterable[k8s.io.api.core.v1.generated_pb2.Taint] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id", b"id", "taints", b"taints"]) -> None: ...

global___NodeTypeIdentifier = NodeTypeIdentifier

@typing_extensions.final
class NodeTypeUsageReport(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class CapacityEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> k8s.io.apimachinery.pkg.api.resource.generated_pb2.Quantity: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: k8s.io.apimachinery.pkg.api.resource.generated_pb2.Quantity | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing_extensions.final
    class AvailableCapacityEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> k8s.io.apimachinery.pkg.api.resource.generated_pb2.Quantity: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: k8s.io.apimachinery.pkg.api.resource.generated_pb2.Quantity | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing_extensions.final
    class CordonedUsageEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> k8s.io.apimachinery.pkg.api.resource.generated_pb2.Quantity: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: k8s.io.apimachinery.pkg.api.resource.generated_pb2.Quantity | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    NODE_TYPE_FIELD_NUMBER: builtins.int
    CAPACITY_FIELD_NUMBER: builtins.int
    AVAILABLE_CAPACITY_FIELD_NUMBER: builtins.int
    CORDONED_USAGE_FIELD_NUMBER: builtins.int
    QUEUES_FIELD_NUMBER: builtins.int
    TOTALNODES_FIELD_NUMBER: builtins.int
    SCHEDULABLENODES_FIELD_NUMBER: builtins.int
    @property
    def node_type(self) -> global___NodeTypeIdentifier: ...
    @property
    def capacity(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, k8s.io.apimachinery.pkg.api.resource.generated_pb2.Quantity]: ...
    @property
    def available_capacity(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, k8s.io.apimachinery.pkg.api.resource.generated_pb2.Quantity]: ...
    @property
    def cordoned_usage(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, k8s.io.apimachinery.pkg.api.resource.generated_pb2.Quantity]: ...
    @property
    def queues(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___QueueReport]: ...
    totalNodes: builtins.int
    schedulableNodes: builtins.int
    def __init__(
        self,
        *,
        node_type: global___NodeTypeIdentifier | None = ...,
        capacity: collections.abc.Mapping[builtins.str, k8s.io.apimachinery.pkg.api.resource.generated_pb2.Quantity] | None = ...,
        available_capacity: collections.abc.Mapping[builtins.str, k8s.io.apimachinery.pkg.api.resource.generated_pb2.Quantity] | None = ...,
        cordoned_usage: collections.abc.Mapping[builtins.str, k8s.io.apimachinery.pkg.api.resource.generated_pb2.Quantity] | None = ...,
        queues: collections.abc.Iterable[global___QueueReport] | None = ...,
        totalNodes: builtins.int = ...,
        schedulableNodes: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["node_type", b"node_type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["available_capacity", b"available_capacity", "capacity", b"capacity", "cordoned_usage", b"cordoned_usage", "node_type", b"node_type", "queues", b"queues", "schedulableNodes", b"schedulableNodes", "totalNodes", b"totalNodes"]) -> None: ...

global___NodeTypeUsageReport = NodeTypeUsageReport
